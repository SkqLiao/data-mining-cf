[{"contestId": 1949, "index": "K", "name": "Make Triangle", "type": "PROGRAMMING", "tags": ["constructive algorithms", "math"], "solvedCount": 110}, {"contestId": 1949, "index": "D", "name": "Funny or Scary?", "type": "PROGRAMMING", "tags": ["constructive algorithms"], "solvedCount": 199}, {"contestId": 1948, "index": "E", "name": "Clique Partition", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 2164}, {"contestId": 1948, "index": "C", "name": "Arrow Path", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 12366}, {"contestId": 1948, "index": "A", "name": "Special Characters", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 23080}, {"contestId": 1946, "index": "D", "name": "Birthday Gift", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 3031}, {"contestId": 1945, "index": "G", "name": "Cook and Porridge", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures", "implementation"], "solvedCount": 479}, {"contestId": 1945, "index": "E", "name": "Binary Search", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "constructive algorithms", "greedy"], "solvedCount": 5671}, {"contestId": 1944, "index": "B", "name": "Equal XOR", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 12634}, {"contestId": 1943, "index": "C", "name": "Tree Compass", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1459}, {"contestId": 1941, "index": "G", "name": "Rudolf and Subway", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 2541}, {"contestId": 1940, "index": "D", "name": "Almost Certainly", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "data structures", "sortings"], "solvedCount": 109}, {"contestId": 1940, "index": "B", "name": "Three Arrays", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "implementation", "sortings"], "solvedCount": 159}, {"contestId": 1940, "index": "A", "name": "Parallel Universes", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 72}, {"contestId": 1939, "index": "B", "name": "Evidence Board", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 193}, {"contestId": 1939, "index": "A", "name": "Draw Polygon Lines", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dp", "geometry", "interactive"], "solvedCount": 12}, {"contestId": 1936, "index": "A", "name": "Bitwise Operation Wizard", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "greedy", "interactive", "math"], "solvedCount": 6109}, {"contestId": 1935, "index": "F", "name": "Andrey's Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "dfs and similar", "dsu", "greedy", "implementation", "trees"], "solvedCount": 311}, {"contestId": 1935, "index": "C", "name": "Messenger in MAC", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp", "greedy", "sortings"], "solvedCount": 6506}, {"contestId": 1935, "index": "B", "name": "Informatics in MAC", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 15375}, {"contestId": 1935, "index": "A", "name": "Entertainment in MAC", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "strings"], "solvedCount": 24157}, {"contestId": 1934, "index": "E", "name": "Weird LCM Operations", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["brute force", "constructive algorithms", "number theory"], "solvedCount": 145}, {"contestId": 1934, "index": "D1", "name": "XOR Break --- Solo Version", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 2820}, {"contestId": 1934, "index": "C", "name": "Find a Mine", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "constructive algorithms", "geometry", "greedy", "interactive", "math"], "solvedCount": 5640}, {"contestId": 1933, "index": "G", "name": "Turtle Magic: Royal Turtle Shell Pattern", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "constructive algorithms", "dfs and similar", "math"], "solvedCount": 798}, {"contestId": 1933, "index": "D", "name": "Turtle Tenacity: Continual Mods", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "number theory", "sortings"], "solvedCount": 16708}, {"contestId": 1930, "index": "H", "name": "Interactive Mex Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "solvedCount": 98}, {"contestId": 1930, "index": "C", "name": "Lexicographically Largest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 6087}, {"contestId": 1930, "index": "B", "name": "Permutation Printing", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 12806}, {"contestId": 1929, "index": "C", "name": "Sasha and the Casino", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "brute force", "constructive algorithms", "games", "greedy", "math"], "solvedCount": 12637}, {"contestId": 1929, "index": "B", "name": "Sasha and the Drawing", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 23093}, {"contestId": 1929, "index": "A", "name": "Sasha and the Beautiful Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 27939}, {"contestId": 1928, "index": "E", "name": "Modular Sequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "greedy", "math", "number theory"], "solvedCount": 1432}, {"contestId": 1927, "index": "E", "name": "Klever Permutation", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "math", "two pointers"], "solvedCount": 11839}, {"contestId": 1927, "index": "B", "name": "Following the String", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 29317}, {"contestId": 1925, "index": "A", "name": "We Got Everything Covered!", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 26616}, {"contestId": 1924, "index": "F", "name": "Anti-Proxy Attendance", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "interactive", "ternary search"], "solvedCount": 115}, {"contestId": 1924, "index": "A", "name": "Did We Get Everything Covered?", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "dp", "greedy", "shortest paths", "strings"], "solvedCount": 11814}, {"contestId": 1923, "index": "D", "name": "Slimes", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 5439}, {"contestId": 1923, "index": "C", "name": "Find B", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 12168}, {"contestId": 1922, "index": "E", "name": "Increasing Subsequences", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "math"], "solvedCount": 6794}, {"contestId": 1922, "index": "B", "name": "Forming Triangles", "type": "PROGRAMMING", "rating": 1200, "tags": ["combinatorics", "constructive algorithms", "math", "sortings"], "solvedCount": 18488}, {"contestId": 1922, "index": "A", "name": "Tricky Template", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 25428}, {"contestId": 1919, "index": "G", "name": "Tree LGM", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "divide and conquer", "games", "trees"], "solvedCount": 143}, {"contestId": 1919, "index": "E", "name": "Counting Prefixes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["combinatorics", "constructive algorithms", "dp", "implementation", "math"], "solvedCount": 740}, {"contestId": 1919, "index": "D", "name": "01 Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "sortings", "trees"], "solvedCount": 3503}, {"contestId": 1918, "index": "G", "name": "Permutation of Given", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["constructive algorithms", "math"], "solvedCount": 397}, {"contestId": 1918, "index": "E", "name": "ace5 and Task Order", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "divide and conquer", "implementation", "interactive", "probabilities", "sortings"], "solvedCount": 1417}, {"contestId": 1918, "index": "B", "name": "Minimize Inversions", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 21506}, {"contestId": 1918, "index": "A", "name": "Brick Wall", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 28128}, {"contestId": 1917, "index": "F", "name": "Construct Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "solvedCount": 866}, {"contestId": 1917, "index": "E", "name": "Construct Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "math"], "solvedCount": 1214}, {"contestId": 1917, "index": "A", "name": "Least Product", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 23721}, {"contestId": 1916, "index": "F", "name": "Group Division", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 383}, {"contestId": 1916, "index": "D", "name": "Mathematical Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "geometry", "math"], "solvedCount": 7706}, {"contestId": 1916, "index": "C", "name": "Training Before the Olympiad", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "games", "greedy", "implementation", "math"], "solvedCount": 16311}, {"contestId": 1916, "index": "B", "name": "Two Divisors", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 23036}, {"contestId": 1916, "index": "A", "name": "2023", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 24163}, {"contestId": 1914, "index": "B", "name": "Preparing for the Contest", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 27947}, {"contestId": 1912, "index": "E", "name": "Evaluate It and Back Again", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 715}, {"contestId": 1912, "index": "C", "name": "Cactus Transformation", "type": "PROGRAMMING", "rating": 3300, "tags": ["constructive algorithms"], "solvedCount": 42}, {"contestId": 1909, "index": "H", "name": "Parallel Swaps Sort", "type": "PROGRAMMING", "points": 6000.0, "rating": 3500, "tags": ["constructive algorithms", "data structures"], "solvedCount": 54}, {"contestId": 1909, "index": "E", "name": "Multiple Lamps", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 1199}, {"contestId": 1909, "index": "C", "name": "Heavy Intervals", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "math", "sortings"], "solvedCount": 9599}, {"contestId": 1909, "index": "B", "name": "Make Almost Equal With Mod", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "constructive algorithms", "math", "number theory"], "solvedCount": 13089}, {"contestId": 1907, "index": "G", "name": "Lights", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation"], "solvedCount": 1691}, {"contestId": 1907, "index": "D", "name": "Jumping Through Segments", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "constructive algorithms"], "solvedCount": 11408}, {"contestId": 1907, "index": "C", "name": "Removal of Unattractive Pairs", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "strings"], "solvedCount": 17871}, {"contestId": 1906, "index": "L", "name": "Palindromic Parentheses", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 420}, {"contestId": 1906, "index": "E", "name": "Merge Not Sort", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "dp"], "solvedCount": 1228}, {"contestId": 1906, "index": "B", "name": "Button Pressing", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "constructive algorithms", "hashing"], "solvedCount": 434}, {"contestId": 1905, "index": "A", "name": "Constructive Problems", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 21371}, {"contestId": 1904, "index": "D2", "name": "Set To Max (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "implementation", "sortings"], "solvedCount": 3615}, {"contestId": 1904, "index": "D1", "name": "Set To Max (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 5375}, {"contestId": 1903, "index": "C", "name": "Theofanis' Nightmare", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 9999}, {"contestId": 1903, "index": "B", "name": "StORage room", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy"], "solvedCount": 10978}, {"contestId": 1902, "index": "C", "name": "Insert and Equalize", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 11820}, {"contestId": 1902, "index": "A", "name": "Binary Imbalance", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 19373}, {"contestId": 1901, "index": "C", "name": "Add, Divide and Floor", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 10347}, {"contestId": 1900, "index": "A", "name": "Cover in Water", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 20234}, {"contestId": 1899, "index": "F", "name": "Alex's whims", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 6408}, {"contestId": 1898, "index": "C", "name": "Colorful Grid", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms"], "solvedCount": 4735}, {"contestId": 1896, "index": "G", "name": "Pepe Racing", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["constructive algorithms", "implementation", "interactive", "sortings"], "solvedCount": 221}, {"contestId": 1896, "index": "F", "name": "Bracket Xoring", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 624}, {"contestId": 1896, "index": "C", "name": "Matching Arrays", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "greedy", "sortings"], "solvedCount": 8286}, {"contestId": 1895, "index": "D", "name": "XOR Construction", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "data structures", "math", "string suffix structures", "trees"], "solvedCount": 5388}, {"contestId": 1894, "index": "B", "name": "Two Out of Three", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 14351}, {"contestId": 1893, "index": "D", "name": "Colorful Constructive", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 793}, {"contestId": 1893, "index": "B", "name": "Neutral Tonality", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 7846}, {"contestId": 1891, "index": "C", "name": "Smilo and Monsters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 10796}, {"contestId": 1891, "index": "A", "name": "Sorting with Twos", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 18142}, {"contestId": 1890, "index": "B", "name": "Qingshan Loves Strings", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 16437}, {"contestId": 1890, "index": "A", "name": "Doremy's Paint 3", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 20038}, {"contestId": 1889, "index": "B", "name": "Doremy's Connecting Plan", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 6540}, {"contestId": 1889, "index": "A", "name": "Qingshan Loves Strings 2", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 11754}, {"contestId": 1887, "index": "F", "name": "Minimum Segments", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["constructive algorithms"], "solvedCount": 107}, {"contestId": 1887, "index": "E", "name": "Good Colorings", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["binary search", "constructive algorithms", "graphs", "interactive"], "solvedCount": 325}, {"contestId": 1887, "index": "C", "name": "Minimum Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "hashing", "two pointers"], "solvedCount": 1528}, {"contestId": 1886, "index": "E", "name": "I Wanna be the Team Leader", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math", "sortings", "two pointers"], "solvedCount": 1291}, {"contestId": 1886, "index": "A", "name": "Sum of Three", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 24139}, {"contestId": 1882, "index": "E2", "name": "Two Permutations (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 261}, {"contestId": 1882, "index": "E1", "name": "Two Permutations (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "greedy", "number theory"], "solvedCount": 930}, {"contestId": 1882, "index": "B", "name": "Sets and Union", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy"], "solvedCount": 13988}, {"contestId": 1879, "index": "E", "name": "Interactive Game with Coloring", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation", "interactive", "trees"], "solvedCount": 1162}, {"contestId": 1879, "index": "B", "name": "Chips on the Board", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20756}, {"contestId": 1878, "index": "B", "name": "Aleksa and Stack", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 29358}, {"contestId": 1876, "index": "E", "name": "Ball-Stackable", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 210}, {"contestId": 1876, "index": "C", "name": "Autosynthesis", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "sortings"], "solvedCount": 2083}, {"contestId": 1873, "index": "G", "name": "ABBC or BACB", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 11296}, {"contestId": 1870, "index": "A", "name": "MEXanized Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 18274}, {"contestId": 1869, "index": "A", "name": "Make It Zero", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 17740}, {"contestId": 1868, "index": "E", "name": "Min-Sum-Max", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 71}, {"contestId": 1868, "index": "D", "name": "Flower-like Pseudotree", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["constructive algorithms", "graphs", "greedy", "implementation", "trees"], "solvedCount": 241}, {"contestId": 1868, "index": "B2", "name": "Candy Party (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "implementation", "math"], "solvedCount": 2244}, {"contestId": 1868, "index": "B1", "name": "Candy Party (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "graphs", "greedy", "implementation", "math"], "solvedCount": 6289}, {"contestId": 1868, "index": "A", "name": "Fill in the Matrix", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 10944}, {"contestId": 1867, "index": "F", "name": "Most Different Tree", "type": "PROGRAMMING", "points": 4000.0, "rating": 2700, "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "hashing"], "solvedCount": 393}, {"contestId": 1867, "index": "E2", "name": "Salyg1n and Array (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "interactive"], "solvedCount": 2911}, {"contestId": 1867, "index": "E1", "name": "Salyg1n and Array (simple version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 3433}, {"contestId": 1867, "index": "D", "name": "Cyclic Operations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation"], "solvedCount": 5229}, {"contestId": 1867, "index": "C", "name": "Salyg1n and the MEX Game", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["constructive algorithms", "data structures", "games", "greedy", "interactive"], "solvedCount": 10370}, {"contestId": 1867, "index": "B", "name": "XOR Palindromes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "strings"], "solvedCount": 15477}, {"contestId": 1867, "index": "A", "name": "green_gold_dog, array and permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 19026}, {"contestId": 1864, "index": "G", "name": "Magic Square", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["combinatorics", "constructive algorithms", "implementation"], "solvedCount": 238}, {"contestId": 1864, "index": "D", "name": "Matrix Cascade", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math"], "solvedCount": 6217}, {"contestId": 1864, "index": "C", "name": "Divisor Chain", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "math", "number theory"], "solvedCount": 12380}, {"contestId": 1864, "index": "B", "name": "Swap and Reverse", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 14618}, {"contestId": 1864, "index": "A", "name": "Increasing and Decreasing", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 19635}, {"contestId": 1863, "index": "I", "name": "Redundant Routes", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "trees"], "solvedCount": 66}, {"contestId": 1863, "index": "D", "name": "Two-Colored Dominoes", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 8773}, {"contestId": 1862, "index": "E", "name": "Kolya and Movie Theatre", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 9316}, {"contestId": 1862, "index": "D", "name": "Ice Cream Balls", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "combinatorics", "constructive algorithms", "math"], "solvedCount": 15691}, {"contestId": 1862, "index": "B", "name": "Sequence Game", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 27634}, {"contestId": 1861, "index": "B", "name": "Two Binary Strings", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 19721}, {"contestId": 1861, "index": "A", "name": "Prime Deletion", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 22849}, {"contestId": 1860, "index": "A", "name": "Not a Substring", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "strings"], "solvedCount": 20493}, {"contestId": 1859, "index": "B", "name": "Olya and Game with Arrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 23525}, {"contestId": 1859, "index": "A", "name": "United We Stand", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 28329}, {"contestId": 1858, "index": "C", "name": "Yet Another Permutation Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 21646}, {"contestId": 1854, "index": "E", "name": "Game Bundles", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["brute force", "constructive algorithms", "dp", "greedy", "math"], "solvedCount": 371}, {"contestId": 1854, "index": "A2", "name": "Dual (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "math"], "solvedCount": 6571}, {"contestId": 1854, "index": "A1", "name": "Dual (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 13134}, {"contestId": 1852, "index": "E", "name": "Rivalries", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 152}, {"contestId": 1852, "index": "D", "name": "Miriany and Matchstick", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 415}, {"contestId": 1852, "index": "B", "name": "Imbalanced Arrays", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "graphs", "greedy", "math", "sortings", "two pointers"], "solvedCount": 4034}, {"contestId": 1851, "index": "A", "name": "Escalator Conversations", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 28288}, {"contestId": 1849, "index": "D", "name": "Array Painting", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "greedy", "two pointers"], "solvedCount": 7560}, {"contestId": 1846, "index": "F", "name": "Rudolph and Mimic", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "implementation", "interactive"], "solvedCount": 2800}, {"contestId": 1846, "index": "D", "name": "Rudolph and Christmas Tree", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "geometry", "math"], "solvedCount": 18026}, {"contestId": 1846, "index": "C", "name": "Rudolf and the Another Competition", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings"], "solvedCount": 17625}, {"contestId": 1845, "index": "A", "name": "Forbidden Integer", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 23798}, {"contestId": 1844, "index": "G", "name": "Tree Weights", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "implementation", "math", "matrices", "number theory", "trees"], "solvedCount": 627}, {"contestId": 1844, "index": "F2", "name": "Min Cost Permutation (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math", "sortings"], "solvedCount": 363}, {"contestId": 1844, "index": "F1", "name": "Min Cost Permutation (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 727}, {"contestId": 1844, "index": "E", "name": "Great Grids", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 1667}, {"contestId": 1844, "index": "D", "name": "Row Major", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "number theory", "strings"], "solvedCount": 11444}, {"contestId": 1844, "index": "B", "name": "Permutations & Primes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 17257}, {"contestId": 1844, "index": "A", "name": "Subtraction Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "games"], "solvedCount": 23615}, {"contestId": 1842, "index": "D", "name": "Tenzing and His Animal Friends ", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 3853}, {"contestId": 1841, "index": "A", "name": "Game with Board", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "games"], "solvedCount": 24038}, {"contestId": 1840, "index": "G2", "name": "In Search of Truth (Hard Version)", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "interactive", "math", "meet-in-the-middle", "probabilities"], "solvedCount": 876}, {"contestId": 1840, "index": "G1", "name": "In Search of Truth (Easy Version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "interactive", "math", "meet-in-the-middle", "probabilities"], "solvedCount": 2179}, {"contestId": 1839, "index": "E", "name": "Decreasing Game", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "interactive"], "solvedCount": 1070}, {"contestId": 1839, "index": "C", "name": "Insert Zero and Invert Prefix", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms"], "solvedCount": 11226}, {"contestId": 1838, "index": "F", "name": "Stuck Conveyor", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 287}, {"contestId": 1838, "index": "C", "name": "No Prime Differences", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 13208}, {"contestId": 1838, "index": "B", "name": "Minimize Permutation Subarrays", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 15673}, {"contestId": 1838, "index": "A", "name": "Blackboard List", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 20928}, {"contestId": 1837, "index": "D", "name": "Bracket Coloring", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 12989}, {"contestId": 1837, "index": "C", "name": "Best Binary String", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20876}, {"contestId": 1837, "index": "A", "name": "Grasshopper on a Line", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 28217}, {"contestId": 1835, "index": "C", "name": "Twin Clusters", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "probabilities"], "solvedCount": 918}, {"contestId": 1833, "index": "G", "name": "Ksyusha and Chinchilla", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "solvedCount": 4792}, {"contestId": 1833, "index": "F", "name": "Ira and Flamenco", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "constructive algorithms", "data structures", "implementation", "math", "sortings", "two pointers"], "solvedCount": 6500}, {"contestId": 1833, "index": "D", "name": "Flipper", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 12487}, {"contestId": 1832, "index": "D2", "name": "Red-Blue Operations (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 1764}, {"contestId": 1831, "index": "B", "name": "Array merging", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 17882}, {"contestId": 1831, "index": "A", "name": "Twin Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 23436}, {"contestId": 1828, "index": "A", "name": "Divisible Array", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 22746}, {"contestId": 1827, "index": "F", "name": "Copium Permutation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 103}, {"contestId": 1827, "index": "E", "name": "Bus Routes", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 348}, {"contestId": 1823, "index": "D", "name": "Unique Palindromes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "math", "strings"], "solvedCount": 3587}, {"contestId": 1823, "index": "A", "name": "A-characteristic", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 15721}, {"contestId": 1822, "index": "D", "name": "Super-Permutation", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 15665}, {"contestId": 1819, "index": "C", "name": "The Fox and the Complete Tree Traversal", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "implementation", "math", "trees"], "solvedCount": 1363}, {"contestId": 1818, "index": "B", "name": "Indivisible", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 13857}, {"contestId": 1817, "index": "D", "name": "Toy Machine", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "games", "implementation"], "solvedCount": 652}, {"contestId": 1817, "index": "B", "name": "Fish Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 3769}, {"contestId": 1816, "index": "B", "name": "Grid Reconstruction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 14569}, {"contestId": 1816, "index": "A", "name": "Ian Visits Mary", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "geometry", "number theory"], "solvedCount": 16832}, {"contestId": 1815, "index": "F", "name": "OH NO1 (-2-3-4)", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 208}, {"contestId": 1815, "index": "C", "name": "Between", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 1816}, {"contestId": 1815, "index": "B", "name": "Sum Graph", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "graphs", "implementation", "interactive", "shortest paths", "trees"], "solvedCount": 2800}, {"contestId": 1814, "index": "C", "name": "Search in Parallel", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 9970}, {"contestId": 1812, "index": "J", "name": "Unmysterious Language", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "strings"], "solvedCount": 5218}, {"contestId": 1812, "index": "E", "name": "Not a Geometry Problem", "type": "PROGRAMMING", "tags": ["*special", "*special", "constructive algorithms", "geometry", "math"], "solvedCount": 3695}, {"contestId": 1812, "index": "D", "name": "Trivial Conjecture", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "math", "number theory"], "solvedCount": 4092}, {"contestId": 1811, "index": "D", "name": "Umka and a Long Flight", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 6899}, {"contestId": 1811, "index": "C", "name": "Restore the Array", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18628}, {"contestId": 1810, "index": "B", "name": "Candies", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 17024}, {"contestId": 1809, "index": "D", "name": "Binary String Sorting", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 5764}, {"contestId": 1809, "index": "C", "name": "Sum on Subarrays", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 11692}, {"contestId": 1806, "index": "C", "name": "Sequence Master", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 7078}, {"contestId": 1806, "index": "B", "name": "Mex Master", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 16872}, {"contestId": 1801, "index": "A", "name": "The Very Beautiful Blanket", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 7966}, {"contestId": 1800, "index": "E2", "name": "Unforgivable Curse (hard version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "strings"], "solvedCount": 11810}, {"contestId": 1800, "index": "E1", "name": "Unforgivable Curse (easy version)", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "strings"], "solvedCount": 11938}, {"contestId": 1799, "index": "E", "name": "City Union", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "dsu", "geometry", "greedy", "implementation", "math"], "solvedCount": 1124}, {"contestId": 1799, "index": "B", "name": "Equalize by Divide", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 10701}, {"contestId": 1798, "index": "D", "name": "Shocking Arrangement", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 8774}, {"contestId": 1797, "index": "C", "name": "Li Hua and Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "interactive"], "solvedCount": 7119}, {"contestId": 1797, "index": "B", "name": "Li Hua and Pattern", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 14192}, {"contestId": 1797, "index": "A", "name": "Li Hua and Maze", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "flows", "graphs", "greedy", "implementation"], "solvedCount": 16798}, {"contestId": 1795, "index": "F", "name": "Blocking Chips", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1031}, {"contestId": 1794, "index": "B", "name": "Not Dividing", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 18743}, {"contestId": 1793, "index": "C", "name": "Dora and Search", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "data structures", "two pointers"], "solvedCount": 17591}, {"contestId": 1793, "index": "B", "name": "Fedya and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 15073}, {"contestId": 1790, "index": "G", "name": "Tokens on Graph", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1027}, {"contestId": 1790, "index": "E", "name": "Vlad and a Pair of Numbers", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 13945}, {"contestId": 1789, "index": "D", "name": "Serval and Shift-Shift-Shift", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["bitmasks", "brute force", "constructive algorithms", "implementation"], "solvedCount": 1545}, {"contestId": 1788, "index": "F", "name": "XOR, Tree, and Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "trees"], "solvedCount": 754}, {"contestId": 1788, "index": "C", "name": "Matching Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 16229}, {"contestId": 1788, "index": "B", "name": "Sum of Two Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "implementation", "math", "probabilities"], "solvedCount": 19017}, {"contestId": 1787, "index": "F", "name": "Inverse Transformation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 621}, {"contestId": 1787, "index": "E", "name": "The Harmonization of XOR", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 2142}, {"contestId": 1787, "index": "A", "name": "Exponential Equation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 18616}, {"contestId": 1784, "index": "B", "name": "Letter Exchange", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 3186}, {"contestId": 1783, "index": "B", "name": "Matrix of Differences", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 17032}, {"contestId": 1783, "index": "A", "name": "Make it Beautiful", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math", "sortings"], "solvedCount": 26506}, {"contestId": 1781, "index": "G", "name": "Diverse Coloring", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "trees"], "solvedCount": 211}, {"contestId": 1781, "index": "C", "name": "Equal Frequencies", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings", "strings"], "solvedCount": 6902}, {"contestId": 1780, "index": "D", "name": "Bit Guessing Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "bitmasks", "constructive algorithms", "interactive"], "solvedCount": 4583}, {"contestId": 1780, "index": "A", "name": "Hayato and School", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 20994}, {"contestId": 1779, "index": "G", "name": "The Game of the Century", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 299}, {"contestId": 1779, "index": "F", "name": "Xorcerer's Stones", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "solvedCount": 1205}, {"contestId": 1779, "index": "E", "name": "Anya's Simultaneous Exhibition", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "graphs", "greedy", "interactive", "sortings"], "solvedCount": 1681}, {"contestId": 1779, "index": "D", "name": "Boris and His Amazing Haircut", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "dp", "dsu", "greedy", "sortings"], "solvedCount": 7371}, {"contestId": 1779, "index": "B", "name": "MKnez's ConstructiveForces Task", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 22861}, {"contestId": 1779, "index": "A", "name": "Hall of Fame", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 22838}, {"contestId": 1776, "index": "G", "name": "Another Wine Tasting Event", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "solvedCount": 1924}, {"contestId": 1776, "index": "F", "name": "Train Splitting", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 3165}, {"contestId": 1776, "index": "D", "name": "Teamwork", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 328}, {"contestId": 1775, "index": "F", "name": "Laboratory on Pluto", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["constructive algorithms", "dp", "greedy", "math"], "solvedCount": 727}, {"contestId": 1775, "index": "B", "name": "Gardener and the Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 12111}, {"contestId": 1775, "index": "A2", "name": "Gardener and the Capybaras (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18171}, {"contestId": 1775, "index": "A1", "name": "Gardener and the Capybaras (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 19238}, {"contestId": 1774, "index": "H", "name": "Maximum Permutation", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 127}, {"contestId": 1774, "index": "G", "name": "Segment Covering", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 322}, {"contestId": 1774, "index": "D", "name": "Same Count One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "two pointers"], "solvedCount": 7304}, {"contestId": 1774, "index": "C", "name": "Ice and Fire", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 11444}, {"contestId": 1774, "index": "B", "name": "Coloring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 11385}, {"contestId": 1774, "index": "A", "name": "Add Plus Minus Sign", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 21870}, {"contestId": 1773, "index": "K", "name": "King's Puzzle", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 1355}, {"contestId": 1773, "index": "J", "name": "Jumbled Trees", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "math"], "solvedCount": 90}, {"contestId": 1773, "index": "F", "name": "Football", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 3901}, {"contestId": 1773, "index": "A", "name": "Amazing Trick", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "graph matchings", "math", "probabilities"], "solvedCount": 1447}, {"contestId": 1772, "index": "F", "name": "Copy of a Copy of a Copy", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation", "sortings"], "solvedCount": 2187}, {"contestId": 1772, "index": "D", "name": "Absolute Sorting", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 14636}, {"contestId": 1772, "index": "C", "name": "Different Differences", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 22457}, {"contestId": 1771, "index": "B", "name": "Hossam and Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "dp", "two pointers"], "solvedCount": 12488}, {"contestId": 1770, "index": "H", "name": "Koxia, Mahiru and Winter Festival", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 85}, {"contestId": 1770, "index": "D", "name": "Koxia and Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "flows", "games", "graph matchings", "graphs", "implementation"], "solvedCount": 3629}, {"contestId": 1770, "index": "B", "name": "Koxia and Permutation", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 18938}, {"contestId": 1768, "index": "D", "name": "Lucky Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 6596}, {"contestId": 1768, "index": "C", "name": "Elemental Decompress", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 13430}, {"contestId": 1767, "index": "D", "name": "Playoff", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "constructive algorithms", "dp", "greedy", "math"], "solvedCount": 9271}, {"contestId": 1765, "index": "G", "name": "Guess the String", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "interactive", "probabilities"], "solvedCount": 358}, {"contestId": 1765, "index": "D", "name": "Watch the Videos", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "constructive algorithms", "two pointers"], "solvedCount": 3838}, {"contestId": 1764, "index": "F", "name": "Doremy's Experimental Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "sortings", "trees"], "solvedCount": 864}, {"contestId": 1763, "index": "C", "name": "Another Array Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 6188}, {"contestId": 1763, "index": "A", "name": "Absolute Maximization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 15078}, {"contestId": 1762, "index": "G", "name": "Unequal Adjacent Elements", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "sortings"], "solvedCount": 95}, {"contestId": 1762, "index": "D", "name": "GCD Queries ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "interactive", "number theory"], "solvedCount": 3245}, {"contestId": 1762, "index": "B", "name": "Make Array Good", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "number theory", "sortings"], "solvedCount": 16061}, {"contestId": 1761, "index": "E", "name": "Make It Connected", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "brute force", "constructive algorithms", "dsu", "graphs", "greedy", "matrices", "trees", "two pointers"], "solvedCount": 1700}, {"contestId": 1761, "index": "C", "name": "Set Construction", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 9059}, {"contestId": 1761, "index": "B", "name": "Elimination of a Ring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 12915}, {"contestId": 1761, "index": "A", "name": "Two Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 16287}, {"contestId": 1759, "index": "G", "name": "Restore the Permutation", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 4133}, {"contestId": 1758, "index": "F", "name": "Decent Division", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["constructive algorithms", "data structures"], "solvedCount": 150}, {"contestId": 1758, "index": "D", "name": "Range = \u221aSum", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "brute force", "constructive algorithms", "math", "two pointers"], "solvedCount": 6752}, {"contestId": 1758, "index": "B", "name": "XOR = Average", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 19919}, {"contestId": 1758, "index": "A", "name": "SSeeeeiinngg DDoouubbllee", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "strings"], "solvedCount": 24173}, {"contestId": 1754, "index": "B", "name": "Kevin and Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 18399}, {"contestId": 1753, "index": "D", "name": "The Beach", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1640}, {"contestId": 1753, "index": "A2", "name": "Make Nonzero Sum (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 9644}, {"contestId": 1753, "index": "A1", "name": "Make Nonzero Sum (easy version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 14131}, {"contestId": 1750, "index": "H", "name": "BinaryStringForces", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "dp"], "solvedCount": 69}, {"contestId": 1750, "index": "C", "name": "Complementary XOR", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9148}, {"contestId": 1750, "index": "A", "name": "Indirect Sort", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 16663}, {"contestId": 1749, "index": "E", "name": "Cactus Wall", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1516}, {"contestId": 1748, "index": "F", "name": "Circular Xor Reversal", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 320}, {"contestId": 1748, "index": "D", "name": "ConstructOR ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "chinese remainder theorem", "combinatorics", "constructive algorithms", "math", "number theory"], "solvedCount": 2625}, {"contestId": 1747, "index": "D", "name": "Yet Another Problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures"], "solvedCount": 4414}, {"contestId": 1747, "index": "B", "name": "BAN BAN", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 21384}, {"contestId": 1747, "index": "A", "name": "Two Groups", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 24233}, {"contestId": 1746, "index": "E1", "name": "Joking (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "interactive", "ternary search"], "solvedCount": 1327}, {"contestId": 1746, "index": "C", "name": "Permutation Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 12156}, {"contestId": 1746, "index": "B", "name": "Rebellion", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "two pointers"], "solvedCount": 16553}, {"contestId": 1746, "index": "A", "name": "Maxmina", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19281}, {"contestId": 1743, "index": "G", "name": "Antifibonacci Cut", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "data structures", "dp", "hashing", "math"], "solvedCount": 237}, {"contestId": 1743, "index": "C", "name": "Save the Magazines", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 18457}, {"contestId": 1743, "index": "B", "name": "Permutation Value", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 21788}, {"contestId": 1742, "index": "F", "name": "Smaller", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 10565}, {"contestId": 1741, "index": "B", "name": "Funny Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 24593}, {"contestId": 1740, "index": "G", "name": "Dangerous Laser Power", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["constructive algorithms", "dsu", "sortings"], "solvedCount": 176}, {"contestId": 1740, "index": "E", "name": "Hanging Hearts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4052}, {"contestId": 1740, "index": "D", "name": "Knowledge Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "data structures"], "solvedCount": 7592}, {"contestId": 1740, "index": "C", "name": "Bricks and Bags", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "games", "greedy", "sortings"], "solvedCount": 10426}, {"contestId": 1740, "index": "A", "name": "Factorise N+M", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "number theory"], "solvedCount": 19424}, {"contestId": 1739, "index": "C", "name": "Card Game", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "constructive algorithms", "dp", "games"], "solvedCount": 8596}, {"contestId": 1739, "index": "B", "name": "Array Recovery", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 21131}, {"contestId": 1738, "index": "G", "name": "Anti-Increasing Addicts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["constructive algorithms", "dp", "greedy", "math"], "solvedCount": 365}, {"contestId": 1738, "index": "F", "name": "Connectivity Addicts", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "interactive", "shortest paths", "trees"], "solvedCount": 1135}, {"contestId": 1738, "index": "D", "name": "Permutation Addicts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 3283}, {"contestId": 1738, "index": "B", "name": "Prefix Sum Addicts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 14572}, {"contestId": 1737, "index": "F", "name": "Ela and Prime GCD", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 114}, {"contestId": 1737, "index": "C", "name": "Ela and Crickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "games", "implementation", "math"], "solvedCount": 5495}, {"contestId": 1736, "index": "D", "name": "Equal Binary Subsequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "geometry", "greedy", "implementation", "strings"], "solvedCount": 2363}, {"contestId": 1735, "index": "E", "name": "House Planning", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "graph matchings", "greedy"], "solvedCount": 1003}, {"contestId": 1735, "index": "A", "name": "Working Week", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 19779}, {"contestId": 1734, "index": "E", "name": "Rectangular Congruence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["constructive algorithms", "number theory"], "solvedCount": 2730}, {"contestId": 1734, "index": "B", "name": "Bright, Nice, Brilliant", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 15503}, {"contestId": 1733, "index": "E", "name": "Conveyor", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 1069}, {"contestId": 1733, "index": "D1", "name": "Zero-One (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 12691}, {"contestId": 1733, "index": "C", "name": "Parity Shuffle Sorting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "sortings"], "solvedCount": 14919}, {"contestId": 1733, "index": "B", "name": "Rule of League", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 19097}, {"contestId": 1732, "index": "A", "name": "Bestie", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 14292}, {"contestId": 1730, "index": "D", "name": "Prefixes and Suffixes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["constructive algorithms", "strings", "two pointers"], "solvedCount": 2570}, {"contestId": 1729, "index": "C", "name": "Jumping on Tiles", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "strings"], "solvedCount": 19132}, {"contestId": 1728, "index": "D", "name": "Letter Picking", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "games", "two pointers"], "solvedCount": 6739}, {"contestId": 1728, "index": "B", "name": "Best Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19842}, {"contestId": 1726, "index": "D", "name": "Edge Split", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "probabilities", "trees"], "solvedCount": 3509}, {"contestId": 1726, "index": "B", "name": "Mainak and Interesting Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 14528}, {"contestId": 1725, "index": "H", "name": "Hot Black Hot White", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "math"], "solvedCount": 2462}, {"contestId": 1722, "index": "G", "name": "Even-Odd XOR", "type": "PROGRAMMING", "rating": 1500, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 10067}, {"contestId": 1721, "index": "F", "name": "Matching Reduction", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "constructive algorithms", "dfs and similar", "flows", "graph matchings", "graphs", "interactive"], "solvedCount": 352}, {"contestId": 1720, "index": "E", "name": "Misha and Paintings", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "solvedCount": 727}, {"contestId": 1719, "index": "B", "name": "Mathematical Circus", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 18239}, {"contestId": 1718, "index": "E", "name": "Impressionism", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms", "graphs", "implementation", "math"], "solvedCount": 101}, {"contestId": 1717, "index": "F", "name": "Madoka and The First Session", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["constructive algorithms", "flows", "graph matchings", "graphs", "implementation"], "solvedCount": 499}, {"contestId": 1717, "index": "D", "name": "Madoka and The Corruption Scheme", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "solvedCount": 4206}, {"contestId": 1717, "index": "B", "name": "Madoka and Underground Competitions", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 14407}, {"contestId": 1716, "index": "B", "name": "Permutation Chain", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 21124}, {"contestId": 1715, "index": "F", "name": "Crop Squares", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "geometry", "interactive", "math"], "solvedCount": 493}, {"contestId": 1715, "index": "B", "name": "Beautiful Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 19657}, {"contestId": 1715, "index": "A", "name": "Crossmarket", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 23094}, {"contestId": 1714, "index": "F", "name": "Build a Tree and That Is It", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 3019}, {"contestId": 1713, "index": "F", "name": "Lost Array", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "solvedCount": 498}, {"contestId": 1713, "index": "D", "name": "Tournament Countdown", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "interactive", "number theory", "probabilities"], "solvedCount": 5392}, {"contestId": 1713, "index": "C", "name": "Build Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1200, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 16668}, {"contestId": 1713, "index": "B", "name": "Optimal Reduction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 20585}, {"contestId": 1712, "index": "D", "name": "Empty Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "shortest paths"], "solvedCount": 4216}, {"contestId": 1712, "index": "B", "name": "Woeful Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 21158}, {"contestId": 1711, "index": "A", "name": "Perfect Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 24701}, {"contestId": 1710, "index": "D", "name": "Recover the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["constructive algorithms", "trees"], "solvedCount": 403}, {"contestId": 1710, "index": "C", "name": "XOR Triangle", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "math"], "solvedCount": 1263}, {"contestId": 1710, "index": "A", "name": "Color the Picture", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 10515}, {"contestId": 1709, "index": "C", "name": "Recover an RBS", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 8405}, {"contestId": 1708, "index": "B", "name": "Difference of GCDs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 19207}, {"contestId": 1707, "index": "F", "name": "Bugaboo", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["bitmasks", "constructive algorithms", "dp", "number theory"], "solvedCount": 137}, {"contestId": 1707, "index": "A", "name": "Doremy's IQ", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "solvedCount": 12668}, {"contestId": 1706, "index": "D2", "name": "Chopping Carrots (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 1639}, {"contestId": 1706, "index": "D1", "name": "Chopping Carrots (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "number theory"], "solvedCount": 6600}, {"contestId": 1706, "index": "A", "name": "Another String Minimization Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["2-sat", "constructive algorithms", "greedy", "string suffix structures", "strings"], "solvedCount": 22476}, {"contestId": 1705, "index": "F", "name": "Mark and the Online Exam", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["bitmasks", "constructive algorithms", "interactive", "probabilities"], "solvedCount": 562}, {"contestId": 1705, "index": "D", "name": "Mark and Lightbulbs", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["combinatorics", "constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 6038}, {"contestId": 1705, "index": "B", "name": "Mark the Dust Sweeper", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 21998}, {"contestId": 1704, "index": "H1", "name": "Game of AI (easy version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["combinatorics", "constructive algorithms", "dp", "fft", "math"], "solvedCount": 166}, {"contestId": 1704, "index": "G", "name": "Mio and Lucky Array", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "fft", "math", "strings"], "solvedCount": 94}, {"contestId": 1704, "index": "F", "name": "Colouring Game", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "dp", "games"], "solvedCount": 911}, {"contestId": 1704, "index": "E", "name": "Count Seconds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "math"], "solvedCount": 2196}, {"contestId": 1704, "index": "D", "name": "Magical Array", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "hashing", "implementation", "math"], "solvedCount": 4785}, {"contestId": 1704, "index": "A", "name": "Two 0-1 Sequences", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 15700}, {"contestId": 1702, "index": "F", "name": "Equate Multisets", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "data structures", "greedy", "math", "number theory"], "solvedCount": 7811}, {"contestId": 1702, "index": "A", "name": "Round Down the Price", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 33073}, {"contestId": 1700, "index": "F", "name": "Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 824}, {"contestId": 1700, "index": "E", "name": "Serega the Pirate", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "constructive algorithms"], "solvedCount": 817}, {"contestId": 1700, "index": "C", "name": "Helping the Nature", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 10363}, {"contestId": 1700, "index": "B", "name": "Palindromic Numbers ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 18165}, {"contestId": 1700, "index": "A", "name": "Optimal Path", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 22476}, {"contestId": 1699, "index": "C", "name": "The Third Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 9287}, {"contestId": 1699, "index": "B", "name": "Almost Ternary Matrix", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["bitmasks", "constructive algorithms", "matrices"], "solvedCount": 19044}, {"contestId": 1699, "index": "A", "name": "The Third Three Number Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 23558}, {"contestId": 1698, "index": "F", "name": "Equal Reversal", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "graphs", "implementation", "math"], "solvedCount": 545}, {"contestId": 1698, "index": "D", "name": "Fixed Point Guessing", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 8502}, {"contestId": 1698, "index": "B", "name": "Rising Sand", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 20587}, {"contestId": 1697, "index": "F", "name": "Too Many Constraints", "type": "PROGRAMMING", "rating": 2800, "tags": ["2-sat", "constructive algorithms", "graphs", "implementation"], "solvedCount": 501}, {"contestId": 1697, "index": "E", "name": "Coloring", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "combinatorics", "constructive algorithms", "dp", "geometry", "graphs", "greedy", "implementation", "math"], "solvedCount": 1123}, {"contestId": 1697, "index": "D", "name": "Guess The String", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 4227}, {"contestId": 1697, "index": "C", "name": "awoo's Favorite Problem", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "implementation", "strings", "two pointers"], "solvedCount": 13837}, {"contestId": 1696, "index": "F", "name": "Tree Recovery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 826}, {"contestId": 1696, "index": "D", "name": "Permutation Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "greedy", "shortest paths"], "solvedCount": 5113}, {"contestId": 1696, "index": "C", "name": "Fishingprince Plays With Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 11222}, {"contestId": 1695, "index": "E", "name": "Ambiguous Dominoes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 417}, {"contestId": 1695, "index": "D2", "name": "Tree Queries (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1893}, {"contestId": 1695, "index": "D1", "name": "Tree Queries (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2061}, {"contestId": 1694, "index": "B", "name": "Paranoid String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18357}, {"contestId": 1691, "index": "D", "name": "Max GEQ Sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "implementation", "two pointers"], "solvedCount": 5364}, {"contestId": 1691, "index": "C", "name": "Sum of Substrings", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"], "solvedCount": 14876}, {"contestId": 1691, "index": "B", "name": "Shoe Shuffling", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "solvedCount": 20674}, {"contestId": 1690, "index": "A", "name": "Print a Pedestal (Codeforces logo?)", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 32264}, {"contestId": 1689, "index": "E", "name": "ANDfinity", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 1129}, {"contestId": 1688, "index": "C", "name": "Manipulating History", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 7829}, {"contestId": 1688, "index": "B", "name": "Patchouli's Magical Talisman", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["bitmasks", "constructive algorithms", "greedy", "sortings"], "solvedCount": 17770}, {"contestId": 1687, "index": "E", "name": "Become Big For Me", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 208}, {"contestId": 1687, "index": "B", "name": "Railway System", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "greedy", "interactive", "sortings"], "solvedCount": 3446}, {"contestId": 1685, "index": "D2", "name": "Permutation Weight (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 3500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 98}, {"contestId": 1685, "index": "D1", "name": "Permutation Weight (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "dsu"], "solvedCount": 412}, {"contestId": 1685, "index": "C", "name": "Bring Balance", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 893}, {"contestId": 1685, "index": "A", "name": "Circular Local MiniMax", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 16365}, {"contestId": 1684, "index": "H", "name": "Hard Cut", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "math"], "solvedCount": 228}, {"contestId": 1684, "index": "G", "name": "Euclid Guess", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "flows", "graph matchings", "math", "number theory"], "solvedCount": 562}, {"contestId": 1684, "index": "E", "name": "MEX vs DIFF", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 3006}, {"contestId": 1684, "index": "D", "name": "Traps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 9212}, {"contestId": 1684, "index": "C", "name": "Column Swapping", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 11939}, {"contestId": 1684, "index": "B", "name": "Z mod X = C", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 20514}, {"contestId": 1684, "index": "A", "name": "Digit Minimization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "games", "math", "strings"], "solvedCount": 23372}, {"contestId": 1682, "index": "E", "name": "Unordered Swaps", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 551}, {"contestId": 1682, "index": "D", "name": "Circular Spanning Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 3144}, {"contestId": 1682, "index": "C", "name": "LIS or Reverse LIS?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 13990}, {"contestId": 1682, "index": "B", "name": "AND Sorting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "constructive algorithms", "sortings"], "solvedCount": 16872}, {"contestId": 1677, "index": "C", "name": "Tokitsukaze and Two Colorful Tapes", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 3364}, {"contestId": 1674, "index": "E", "name": "Breaking the Wall", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 6062}, {"contestId": 1674, "index": "D", "name": "A-B-C Sort", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 15621}, {"contestId": 1674, "index": "A", "name": "Number Transformation", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 25456}, {"contestId": 1673, "index": "F", "name": "Anti-Theft Road Planning", "type": "PROGRAMMING", "points": 3250.0, "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "interactive", "math"], "solvedCount": 762}, {"contestId": 1672, "index": "H", "name": "Zigu Zagu", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 901}, {"contestId": 1672, "index": "G", "name": "Cross Xor", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["constructive algorithms", "graphs", "math", "matrices"], "solvedCount": 307}, {"contestId": 1672, "index": "F2", "name": "Checker for Array Shuffling", "type": "PROGRAMMING", "points": 1250.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 750}, {"contestId": 1672, "index": "F1", "name": "Array Shuffling", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 2927}, {"contestId": 1672, "index": "E", "name": "notepad.exe", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "greedy", "interactive"], "solvedCount": 2061}, {"contestId": 1672, "index": "D", "name": "Cyclic Rotation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "two pointers"], "solvedCount": 5918}, {"contestId": 1672, "index": "C", "name": "Unequal Array", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 12817}, {"contestId": 1672, "index": "B", "name": "I love AAAB", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 15482}, {"contestId": 1671, "index": "D", "name": "Insert a Progression", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 7180}, {"contestId": 1670, "index": "E", "name": "Hemose on the Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "trees"], "solvedCount": 1652}, {"contestId": 1667, "index": "D", "name": "Edge Elimination", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "solvedCount": 626}, {"contestId": 1667, "index": "C", "name": "Half Queen Cover", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "math"], "solvedCount": 1444}, {"contestId": 1666, "index": "J", "name": "Job Lookup", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dp", "shortest paths", "trees"], "solvedCount": 1275}, {"contestId": 1666, "index": "I", "name": "Interactive Treasure Hunt", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "geometry", "interactive", "math"], "solvedCount": 1357}, {"contestId": 1666, "index": "E", "name": "Even Split", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "solvedCount": 662}, {"contestId": 1666, "index": "C", "name": "Connect the Points", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "constructive algorithms", "geometry"], "solvedCount": 3031}, {"contestId": 1665, "index": "D", "name": "GCD Guess", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "games", "interactive", "math", "number theory"], "solvedCount": 3648}, {"contestId": 1665, "index": "B", "name": "Array Cloning Technique", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 18262}, {"contestId": 1665, "index": "A", "name": "GCD vs LCM", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 22843}, {"contestId": 1663, "index": "H", "name": "Cross-Language Program", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms"], "solvedCount": 1231}, {"contestId": 1663, "index": "G", "name": "Six Characters", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "strings"], "solvedCount": 199}, {"contestId": 1662, "index": "M", "name": "Bottle Arrangements", "type": "PROGRAMMING", "tags": ["constructive algorithms"], "solvedCount": 3254}, {"contestId": 1660, "index": "E", "name": "Matrix and Shifts", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 6899}, {"contestId": 1659, "index": "E", "name": "AND-MEX Walk", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 1426}, {"contestId": 1659, "index": "D", "name": "Reverse Sort Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math", "two pointers"], "solvedCount": 3832}, {"contestId": 1659, "index": "B", "name": "Bit Flipping", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "greedy", "strings"], "solvedCount": 10483}, {"contestId": 1659, "index": "A", "name": "Red Versus Blue", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 16513}, {"contestId": 1658, "index": "F", "name": "Juju and Binary String", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 712}, {"contestId": 1658, "index": "C", "name": "Shinju and the Lost Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 9020}, {"contestId": 1658, "index": "A", "name": "Marin and Photoshoot", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 20074}, {"contestId": 1656, "index": "I", "name": "Neighbour Ordering", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["constructive algorithms", "graphs"], "solvedCount": 92}, {"contestId": 1656, "index": "G", "name": "Cycle Palindrome", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 264}, {"contestId": 1656, "index": "F", "name": "Parametric MST", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["binary search", "constructive algorithms", "graphs", "greedy", "math", "sortings"], "solvedCount": 974}, {"contestId": 1656, "index": "E", "name": "Equal Tree Sums", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "math", "trees"], "solvedCount": 3254}, {"contestId": 1656, "index": "D", "name": "K-good", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 6524}, {"contestId": 1656, "index": "C", "name": "Make Equal With Mod", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["constructive algorithms", "math", "number theory", "sortings"], "solvedCount": 18286}, {"contestId": 1654, "index": "H", "name": "Three Minimums", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "divide and conquer", "dp", "fft", "math"], "solvedCount": 68}, {"contestId": 1651, "index": "E", "name": "Sum of Matchings", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "graph matchings", "greedy", "math"], "solvedCount": 485}, {"contestId": 1651, "index": "B", "name": "Prove Him Wrong", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19302}, {"contestId": 1650, "index": "D", "name": "Twist the Permutation", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 12572}, {"contestId": 1648, "index": "B", "name": "Integral Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "data structures", "math"], "solvedCount": 6097}, {"contestId": 1647, "index": "D", "name": "Madoka and the Best School in Russia", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "dp", "math", "number theory"], "solvedCount": 5065}, {"contestId": 1647, "index": "C", "name": "Madoka and Childish Pranks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy"], "solvedCount": 12302}, {"contestId": 1647, "index": "B", "name": "Madoka and the Elegant Gift", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "graphs", "implementation"], "solvedCount": 14984}, {"contestId": 1646, "index": "F", "name": "Playing Around the Table", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 384}, {"contestId": 1646, "index": "D", "name": "Weight the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 3488}, {"contestId": 1646, "index": "C", "name": "Factorials and Powers of Two", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "math"], "solvedCount": 12905}, {"contestId": 1646, "index": "B", "name": "Quality vs Quantity", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 20768}, {"contestId": 1644, "index": "B", "name": "Anti-Fibonacci Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 20375}, {"contestId": 1641, "index": "B", "name": "Repetitions Decoding", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 3707}, {"contestId": 1638, "index": "D", "name": "Big Brush", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 4007}, {"contestId": 1638, "index": "A", "name": "Reverse", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 21145}, {"contestId": 1637, "index": "G", "name": "Birthday", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 437}, {"contestId": 1637, "index": "F", "name": "Towers", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1669}, {"contestId": 1635, "index": "E", "name": "Cars ", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "solvedCount": 2123}, {"contestId": 1635, "index": "C", "name": "Differential Sorting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 16089}, {"contestId": 1634, "index": "E", "name": "Fair Share", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graph matchings", "graphs"], "solvedCount": 1585}, {"contestId": 1634, "index": "D", "name": "Finding Zero", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 4193}, {"contestId": 1634, "index": "C", "name": "OKEA", "type": "PROGRAMMING", "points": 1500.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 17859}, {"contestId": 1632, "index": "B", "name": "Roof Construction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 20380}, {"contestId": 1630, "index": "D", "name": "Flipping Range", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "greedy", "number theory"], "solvedCount": 1494}, {"contestId": 1630, "index": "B", "name": "Range and Partition", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 5446}, {"contestId": 1630, "index": "A", "name": "And Matching", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 13953}, {"contestId": 1628, "index": "C", "name": "Grid Xor", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "implementation", "interactive", "math"], "solvedCount": 3057}, {"contestId": 1628, "index": "A", "name": "Meximum Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "two pointers"], "solvedCount": 15081}, {"contestId": 1627, "index": "C", "name": "Not Assigning", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "dfs and similar", "number theory", "trees"], "solvedCount": 13893}, {"contestId": 1627, "index": "A", "name": "Not Shading", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 23720}, {"contestId": 1626, "index": "A", "name": "Equidistant Letters", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 28180}, {"contestId": 1624, "index": "F", "name": "Interacdive Problem", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 3145}, {"contestId": 1624, "index": "E", "name": "Masha-forgetful", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "constructive algorithms", "dp", "hashing", "implementation", "strings"], "solvedCount": 3886}, {"contestId": 1624, "index": "C", "name": "Division by Two and Permutation", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "flows", "graph matchings", "greedy", "math"], "solvedCount": 23799}, {"contestId": 1622, "index": "F", "name": "Quadratic Set", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "hashing", "math", "number theory"], "solvedCount": 578}, {"contestId": 1621, "index": "D", "name": "The Winter Hike", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 3939}, {"contestId": 1621, "index": "A", "name": "Stable Arrangement of Rooks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 23488}, {"contestId": 1620, "index": "E", "name": "Replace the Numbers", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures", "dsu", "implementation"], "solvedCount": 7642}, {"contestId": 1620, "index": "D", "name": "Exact Change", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 3951}, {"contestId": 1620, "index": "A", "name": "Equal or Not Equal", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "dsu", "implementation"], "solvedCount": 21095}, {"contestId": 1619, "index": "F", "name": "Let's Play the Hat?", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 1974}, {"contestId": 1619, "index": "E", "name": "MEX and Increments", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation", "math", "sortings"], "solvedCount": 8540}, {"contestId": 1618, "index": "F", "name": "Reverse", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "implementation", "math", "strings"], "solvedCount": 3971}, {"contestId": 1618, "index": "E", "name": "Singers' Tour", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 6878}, {"contestId": 1617, "index": "D2", "name": "Too Many Impostors (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["constructive algorithms", "implementation", "interactive", "math"], "solvedCount": 1687}, {"contestId": 1617, "index": "D1", "name": "Too Many Impostors (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "implementation", "interactive"], "solvedCount": 4492}, {"contestId": 1617, "index": "B", "name": "GCD Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 22100}, {"contestId": 1617, "index": "A", "name": "Forbidden Subsequence", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 16053}, {"contestId": 1615, "index": "H", "name": "Reindeer Games", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "flows", "graphs", "shortest paths"], "solvedCount": 304}, {"contestId": 1615, "index": "G", "name": "Maximum Adjacent Pairs", "type": "PROGRAMMING", "points": 3750.0, "rating": 3300, "tags": ["constructive algorithms", "graph matchings"], "solvedCount": 145}, {"contestId": 1614, "index": "C", "name": "Divan and bitwise operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "math"], "solvedCount": 9839}, {"contestId": 1614, "index": "B", "name": "Divan and a New Project ", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 17564}, {"contestId": 1614, "index": "A", "name": "Divan and a Store", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 22976}, {"contestId": 1612, "index": "G", "name": "Max Sum Array", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "constructive algorithms", "greedy", "sortings"], "solvedCount": 808}, {"contestId": 1612, "index": "B", "name": "Special Permutation", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 16790}, {"contestId": 1612, "index": "A", "name": "Distance", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 17419}, {"contestId": 1611, "index": "D", "name": "Weights Assignment For Tree Edges", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 9405}, {"contestId": 1611, "index": "C", "name": "Polycarp Recovers the Permutation", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 17794}, {"contestId": 1611, "index": "B", "name": "Team Composition: Programmers and Mathematicians", "type": "PROGRAMMING", "rating": 800, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 28174}, {"contestId": 1611, "index": "A", "name": "Make Even", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 30313}, {"contestId": 1610, "index": "F", "name": "Mashtali: a Space Oddysey", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 485}, {"contestId": 1608, "index": "B", "name": "Build the Permutation", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 11354}, {"contestId": 1608, "index": "A", "name": "Find Array", "type": "PROGRAMMING", "points": 250.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 18627}, {"contestId": 1606, "index": "D", "name": "Red-Blue Matrix", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "solvedCount": 1390}, {"contestId": 1605, "index": "D", "name": "Treelabeling", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "games", "greedy", "implementation", "trees"], "solvedCount": 2819}, {"contestId": 1603, "index": "B", "name": "Moderate Modular Mode", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 12960}, {"contestId": 1603, "index": "A", "name": "Di-visible Confusion", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 15990}, {"contestId": 1602, "index": "B", "name": "Divine Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13761}, {"contestId": 1599, "index": "A", "name": "Weights", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "greedy", "two pointers"], "solvedCount": 628}, {"contestId": 1594, "index": "F", "name": "Ideal Farm", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "math"], "solvedCount": 1253}, {"contestId": 1594, "index": "D", "name": "The Number of Imposters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "graphs"], "solvedCount": 7014}, {"contestId": 1593, "index": "G", "name": "Changing Brackets", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "data structures", "dp", "greedy"], "solvedCount": 1602}, {"contestId": 1592, "index": "F2", "name": "Alice and Recoloring 2", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["constructive algorithms", "flows", "graph matchings", "greedy"], "solvedCount": 649}, {"contestId": 1592, "index": "F1", "name": "Alice and Recoloring 1", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 753}, {"contestId": 1592, "index": "C", "name": "Bakry and Partitioning", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 7475}, {"contestId": 1592, "index": "B", "name": "Hemose Shopping", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "dsu", "math", "sortings"], "solvedCount": 15491}, {"contestId": 1586, "index": "I", "name": "Omkar and Mosaic", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 121}, {"contestId": 1583, "index": "F", "name": "Defender of Childhood Dreams", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "divide and conquer"], "solvedCount": 1207}, {"contestId": 1583, "index": "E", "name": "Moment of Bloom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy", "trees"], "solvedCount": 2149}, {"contestId": 1583, "index": "D", "name": "Omkar and the Meaning of Life", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "interactive"], "solvedCount": 5197}, {"contestId": 1583, "index": "B", "name": "Omkar and Heavenly Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "trees"], "solvedCount": 11870}, {"contestId": 1582, "index": "D", "name": "Vupsen, Pupsen and 0", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["constructive algorithms", "math"], "solvedCount": 10017}, {"contestId": 1581, "index": "B", "name": "Diameter of Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "graphs", "greedy", "math"], "solvedCount": 10958}, {"contestId": 1580, "index": "E", "name": "Railway Construction", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["brute force", "constructive algorithms", "data structures", "graphs", "shortest paths"], "solvedCount": 63}, {"contestId": 1579, "index": "E1", "name": "Permutation Minimization by Deque", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 20680}, {"contestId": 1579, "index": "D", "name": "Productive Meeting", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 15092}, {"contestId": 1578, "index": "M", "name": "The Mind", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "interactive", "probabilities"], "solvedCount": 432}, {"contestId": 1578, "index": "A", "name": "Anti-Tetris", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 323}, {"contestId": 1574, "index": "E", "name": "Coloring", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "constructive algorithms", "implementation", "math"], "solvedCount": 854}, {"contestId": 1574, "index": "A", "name": "Regular Bracket Sequences", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 21189}, {"contestId": 1572, "index": "B", "name": "Xor of 3", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "greedy", "two pointers"], "solvedCount": 1727}, {"contestId": 1571, "index": "F", "name": "Kotlinforces", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "constructive algorithms", "dp"], "solvedCount": 175}, {"contestId": 1571, "index": "D", "name": "Sweepstake", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 313}, {"contestId": 1569, "index": "B", "name": "Chess Tournament", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 18512}, {"contestId": 1567, "index": "F", "name": "One-Four Overload", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["2-sat", "constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation"], "solvedCount": 719}, {"contestId": 1567, "index": "D", "name": "Expression Evaluation Error", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 4369}, {"contestId": 1566, "index": "H", "name": "Xor-quiz", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["constructive algorithms", "dp", "interactive", "math", "number theory"], "solvedCount": 104}, {"contestId": 1566, "index": "G", "name": "Four Vertices", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 323}, {"contestId": 1566, "index": "E", "name": "Buds Re-hanging", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 3984}, {"contestId": 1566, "index": "C", "name": "MAX-MEX Cut", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "solvedCount": 16854}, {"contestId": 1566, "index": "B", "name": "MIN-MEX Cut", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "solvedCount": 18925}, {"contestId": 1562, "index": "C", "name": "Rings", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "math"], "solvedCount": 12827}, {"contestId": 1562, "index": "B", "name": "Scenes From a Memory", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 19098}, {"contestId": 1560, "index": "F2", "name": "Nearest Beautiful Number (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "greedy"], "solvedCount": 4164}, {"contestId": 1560, "index": "F1", "name": "Nearest Beautiful Number (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "dfs and similar", "greedy"], "solvedCount": 5856}, {"contestId": 1559, "index": "D2", "name": "Mocha and Diana (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees", "two pointers"], "solvedCount": 2505}, {"contestId": 1559, "index": "D1", "name": "Mocha and Diana (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "trees"], "solvedCount": 13091}, {"contestId": 1559, "index": "C", "name": "Mocha and Hiking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "graphs"], "solvedCount": 19511}, {"contestId": 1559, "index": "A", "name": "Mocha and Math", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 27809}, {"contestId": 1558, "index": "C", "name": "Bottom-Tier Reversals", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3118}, {"contestId": 1557, "index": "E", "name": "Assiut Chess", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "interactive"], "solvedCount": 684}, {"contestId": 1556, "index": "D", "name": "Take a Guess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 6385}, {"contestId": 1555, "index": "D", "name": "Say No to Palindromes", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "dp", "strings"], "solvedCount": 11612}, {"contestId": 1555, "index": "C", "name": "Coin Rows", "type": "PROGRAMMING", "rating": 1300, "tags": ["brute force", "constructive algorithms", "dp", "implementation"], "solvedCount": 20649}, {"contestId": 1554, "index": "D", "name": "Diane", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 8993}, {"contestId": 1553, "index": "G", "name": "Common Divisor Graph", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "hashing", "math", "number theory"], "solvedCount": 965}, {"contestId": 1553, "index": "E", "name": "Permutation Shift", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs", "math"], "solvedCount": 3215}, {"contestId": 1552, "index": "E", "name": "Colors and Intervals", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 1759}, {"contestId": 1552, "index": "D", "name": "Array Differentiation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "brute force", "constructive algorithms", "dfs and similar", "dp", "graphs", "math"], "solvedCount": 6635}, {"contestId": 1552, "index": "C", "name": "Maximize the Intersections", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "constructive algorithms", "geometry", "greedy", "sortings"], "solvedCount": 5745}, {"contestId": 1551, "index": "D2", "name": "Domino (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 2630}, {"contestId": 1551, "index": "D1", "name": "Domino (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 6796}, {"contestId": 1551, "index": "B2", "name": "Wonderful Coloring - 2", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 14919}, {"contestId": 1550, "index": "D", "name": "Excellent Arrays", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation", "math", "sortings", "two pointers"], "solvedCount": 1772}, {"contestId": 1547, "index": "D", "name": "Co-growing Sequence", "type": "PROGRAMMING", "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 15851}, {"contestId": 1545, "index": "D", "name": "AquaMoon and Wrong Coordinate", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 454}, {"contestId": 1545, "index": "C", "name": "AquaMoon and Permutations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["2-sat", "brute force", "combinatorics", "constructive algorithms", "graph matchings", "graphs"], "solvedCount": 574}, {"contestId": 1543, "index": "E", "name": "The Final Pursuit", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "graphs", "greedy", "math"], "solvedCount": 390}, {"contestId": 1543, "index": "D2", "name": "RPD and Rap Sheet (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "interactive", "math"], "solvedCount": 1929}, {"contestId": 1543, "index": "D1", "name": "RPD and Rap Sheet (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 7401}, {"contestId": 1542, "index": "B", "name": "Plus and Multiply", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 21756}, {"contestId": 1541, "index": "A", "name": "Pretty Permutations", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 28847}, {"contestId": 1540, "index": "A", "name": "Great Graphs", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "sortings"], "solvedCount": 13604}, {"contestId": 1539, "index": "E", "name": "Game with Cards", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 908}, {"contestId": 1538, "index": "D", "name": "Another Problem About Dividing Numbers", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 12883}, {"contestId": 1537, "index": "F", "name": "Figure Fixing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "math"], "solvedCount": 2344}, {"contestId": 1537, "index": "C", "name": "Challenging Cliffs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 26027}, {"contestId": 1537, "index": "B", "name": "Bad Boy", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 27459}, {"contestId": 1536, "index": "F", "name": "Omkar and Akmar", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["chinese remainder theorem", "combinatorics", "constructive algorithms", "fft", "games", "geometry", "math", "meet-in-the-middle", "string suffix structures"], "solvedCount": 901}, {"contestId": 1536, "index": "B", "name": "Prinzessin der Verurteilung", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "strings"], "solvedCount": 17488}, {"contestId": 1536, "index": "A", "name": "Omkar and Bad Story", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 19990}, {"contestId": 1534, "index": "H", "name": "Lost Nodes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "graphs", "interactive", "sortings", "trees"], "solvedCount": 141}, {"contestId": 1534, "index": "D", "name": "Lost Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "interactive", "trees"], "solvedCount": 5710}, {"contestId": 1533, "index": "I", "name": "Excursions", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "flows", "graph matchings", "graphs"], "solvedCount": 47}, {"contestId": 1533, "index": "G", "name": "Biome Map", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 85}, {"contestId": 1531, "index": "C", "name": "\u0421\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u0447\u043d\u044b\u0439 \u0430\u043c\u0444\u0438\u0442\u0435\u0430\u0442\u0440", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dp"], "solvedCount": 643}, {"contestId": 1530, "index": "G", "name": "What a Reversal", "type": "PROGRAMMING", "points": 3750.0, "rating": 3300, "tags": ["constructive algorithms"], "solvedCount": 122}, {"contestId": 1530, "index": "E", "name": "Minimax", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 2858}, {"contestId": 1530, "index": "D", "name": "Secret Santa", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "flows", "graphs", "greedy", "math"], "solvedCount": 8841}, {"contestId": 1530, "index": "B", "name": "Putting Plates", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 15547}, {"contestId": 1529, "index": "A", "name": "Eshag Loves Big Arrays", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 29259}, {"contestId": 1528, "index": "D", "name": "It's a bird! No, it's a plane! No, it's AaParsa!", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 1361}, {"contestId": 1527, "index": "B2", "name": "Palindrome Game (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "games"], "solvedCount": 7465}, {"contestId": 1527, "index": "B1", "name": "Palindrome Game (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "games"], "solvedCount": 23803}, {"contestId": 1526, "index": "F", "name": "Median Queries", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["constructive algorithms", "interactive", "probabilities"], "solvedCount": 247}, {"contestId": 1526, "index": "E", "name": "Oolimry and Suffix Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 1013}, {"contestId": 1526, "index": "D", "name": "Kill Anton", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "data structures", "math", "strings"], "solvedCount": 2341}, {"contestId": 1526, "index": "A", "name": "Mean Inequality", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 23768}, {"contestId": 1525, "index": "B", "name": "Permutation Sort", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 24061}, {"contestId": 1523, "index": "B", "name": "Lord of the Values", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms"], "solvedCount": 11931}, {"contestId": 1521, "index": "E", "name": "Nastia and a Beautiful Matrix", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "constructive algorithms", "dp", "greedy"], "solvedCount": 638}, {"contestId": 1521, "index": "D", "name": "Nastia Plays with a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "solvedCount": 1782}, {"contestId": 1521, "index": "C", "name": "Nastia and a Hidden Permutation", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "interactive"], "solvedCount": 4252}, {"contestId": 1521, "index": "B", "name": "Nastia and a Good Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 20574}, {"contestId": 1521, "index": "A", "name": "Nastia and Nearly Good Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 34923}, {"contestId": 1520, "index": "F2", "name": "Guess the K-th Zero (Hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "data structures", "interactive"], "solvedCount": 2864}, {"contestId": 1520, "index": "C", "name": "Not Adjacent Matrix", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 30339}, {"contestId": 1519, "index": "E", "name": "Off by One", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "geometry", "graphs", "sortings", "trees"], "solvedCount": 786}, {"contestId": 1517, "index": "G", "name": "Starry Night Camping", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms", "flows", "graphs"], "solvedCount": 407}, {"contestId": 1517, "index": "C", "name": "Fillomino 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "dfs and similar", "greedy", "implementation"], "solvedCount": 12995}, {"contestId": 1517, "index": "B", "name": "Morning Jogging", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 13021}, {"contestId": 1516, "index": "C", "name": "Baby Ehab Partitions Again", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "solvedCount": 11411}, {"contestId": 1515, "index": "F", "name": "Phoenix and Earthquake", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1648}, {"contestId": 1515, "index": "C", "name": "Phoenix and Towers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 16336}, {"contestId": 1515, "index": "A", "name": "Phoenix and Gold", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 19942}, {"contestId": 1513, "index": "F", "name": "Swapping Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "data structures", "sortings"], "solvedCount": 1182}, {"contestId": 1513, "index": "E", "name": "Cost Equilibrium", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["combinatorics", "constructive algorithms", "math", "sortings"], "solvedCount": 1404}, {"contestId": 1513, "index": "D", "name": "GCD and MST", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "number theory", "sortings"], "solvedCount": 4952}, {"contestId": 1513, "index": "B", "name": "AND Sequences", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "math"], "solvedCount": 13500}, {"contestId": 1513, "index": "A", "name": "Array and Peaks", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 19138}, {"contestId": 1512, "index": "D", "name": "Corrupted Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 21480}, {"contestId": 1512, "index": "C", "name": "A-B Palindrome", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 19283}, {"contestId": 1511, "index": "D", "name": "Min Cost String", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "strings"], "solvedCount": 10950}, {"contestId": 1511, "index": "B", "name": "GCD Length", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 21788}, {"contestId": 1510, "index": "J", "name": "Japanese Game", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "math"], "solvedCount": 503}, {"contestId": 1509, "index": "A", "name": "Average Height", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 25556}, {"contestId": 1508, "index": "E", "name": "Tree Calendar", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["brute force", "constructive algorithms", "data structures", "dfs and similar", "sortings", "trees"], "solvedCount": 321}, {"contestId": 1508, "index": "D", "name": "Swap Pass", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["constructive algorithms", "geometry", "sortings"], "solvedCount": 520}, {"contestId": 1508, "index": "B", "name": "Almost Sorted", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "combinatorics", "constructive algorithms", "implementation"], "solvedCount": 3790}, {"contestId": 1508, "index": "A", "name": "Binary Literature", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "implementation", "strings", "two pointers"], "solvedCount": 5936}, {"contestId": 1506, "index": "F", "name": "Triangular Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "graphs", "math", "shortest paths", "sortings"], "solvedCount": 3074}, {"contestId": 1506, "index": "E", "name": "Restoring the Permutation", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 12497}, {"contestId": 1506, "index": "D", "name": "Epic Transformation", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 20471}, {"contestId": 1504, "index": "B", "name": "Flip the Bits", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 16989}, {"contestId": 1504, "index": "A", "name": " D\u00e9j\u00e0 Vu", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "strings"], "solvedCount": 21317}, {"contestId": 1503, "index": "F", "name": "Balance the Cards", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation"], "solvedCount": 124}, {"contestId": 1503, "index": "D", "name": "Flip the Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["2-sat", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 959}, {"contestId": 1503, "index": "B", "name": "3-Coloring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "games", "interactive"], "solvedCount": 6804}, {"contestId": 1503, "index": "A", "name": "Balance the Bits", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 12920}, {"contestId": 1500, "index": "C", "name": "Matrix Sorting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "constructive algorithms", "greedy", "two pointers"], "solvedCount": 756}, {"contestId": 1499, "index": "A", "name": "Domino on Windowsill", "type": "PROGRAMMING", "rating": 800, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 20974}, {"contestId": 1497, "index": "C2", "name": "k-LCM (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "math"], "solvedCount": 16267}, {"contestId": 1497, "index": "C1", "name": "k-LCM (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 24236}, {"contestId": 1497, "index": "B", "name": "M-arrays", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 18222}, {"contestId": 1496, "index": "A", "name": "Split it!", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "solvedCount": 20175}, {"contestId": 1495, "index": "F", "name": "Squares", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "graphs", "trees"], "solvedCount": 273}, {"contestId": 1495, "index": "C", "name": "Garden of the Sun", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "graphs"], "solvedCount": 2488}, {"contestId": 1494, "index": "F", "name": "Delete The Edges", "type": "PROGRAMMING", "rating": 2900, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation"], "solvedCount": 323}, {"contestId": 1494, "index": "E", "name": "A-Z Graph", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "data structures", "graphs", "hashing"], "solvedCount": 1645}, {"contestId": 1494, "index": "D", "name": "Dogeforces", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "sortings", "trees"], "solvedCount": 2473}, {"contestId": 1493, "index": "E", "name": "Enormous XOR", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["bitmasks", "constructive algorithms", "greedy", "math", "strings", "two pointers"], "solvedCount": 853}, {"contestId": 1493, "index": "C", "name": "K-beautiful Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "strings"], "solvedCount": 4417}, {"contestId": 1493, "index": "A", "name": "Anti-knapsack", "type": "PROGRAMMING", "points": 750.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 19029}, {"contestId": 1492, "index": "E", "name": "Almost Fault-Tolerant Database", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "greedy", "implementation"], "solvedCount": 1156}, {"contestId": 1492, "index": "D", "name": "Genius's Gambit", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "greedy", "math"], "solvedCount": 5905}, {"contestId": 1491, "index": "G", "name": "Switch and Flip", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 705}, {"contestId": 1491, "index": "F", "name": "Magnets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 890}, {"contestId": 1491, "index": "D", "name": "Zookeeper and The Infinite Zoo", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "math"], "solvedCount": 6804}, {"contestId": 1490, "index": "B", "name": "Balanced Remainders", "type": "PROGRAMMING", "rating": 1000, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 25405}, {"contestId": 1487, "index": "C", "name": "Minimum Ties", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "math"], "solvedCount": 13598}, {"contestId": 1486, "index": "E", "name": "Paired Payment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "brute force", "constructive algorithms", "dp", "flows", "graphs", "shortest paths"], "solvedCount": 2768}, {"contestId": 1485, "index": "D", "name": "Multiples and Power Differences", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["constructive algorithms", "graphs", "math", "number theory"], "solvedCount": 4903}, {"contestId": 1482, "index": "C", "name": "Basic Diplomacy", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 9045}, {"contestId": 1481, "index": "D", "name": "AB Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 4358}, {"contestId": 1481, "index": "C", "name": "Fence Painting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 11213}, {"contestId": 1479, "index": "C", "name": "Continuous City", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 1233}, {"contestId": 1479, "index": "B2", "name": "Painting the Array II", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 3868}, {"contestId": 1479, "index": "B1", "name": "Painting the Array I", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 6689}, {"contestId": 1477, "index": "D", "name": "Nezzar and Hidden Permutations", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 527}, {"contestId": 1477, "index": "C", "name": "Nezzar and Nice Beatmap", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "geometry", "greedy", "math", "sortings"], "solvedCount": 2184}, {"contestId": 1477, "index": "A", "name": "Nezzar and Board", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 5622}, {"contestId": 1476, "index": "A", "name": "K-divisible Sum", "type": "PROGRAMMING", "rating": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "solvedCount": 34478}, {"contestId": 1475, "index": "F", "name": "Unusual Matrix", "type": "PROGRAMMING", "rating": 1900, "tags": ["2-sat", "brute force", "constructive algorithms"], "solvedCount": 5037}, {"contestId": 1474, "index": "E", "name": "What Is It?", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1284}, {"contestId": 1474, "index": "C", "name": "Array Destruction", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 12090}, {"contestId": 1474, "index": "B", "name": "Different Divisors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 25902}, {"contestId": 1473, "index": "C", "name": "No More Inversions", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "math"], "solvedCount": 12291}, {"contestId": 1470, "index": "D", "name": "Strange Housing", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy"], "solvedCount": 3552}, {"contestId": 1470, "index": "C", "name": "Strange Shuffle", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["binary search", "brute force", "constructive algorithms", "interactive"], "solvedCount": 1291}, {"contestId": 1469, "index": "D", "name": "Ceil Divisions", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 9082}, {"contestId": 1469, "index": "A", "name": "Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 26284}, {"contestId": 1468, "index": "H", "name": "K and Medians", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1694}, {"contestId": 1467, "index": "C", "name": "Three Bags", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 6179}, {"contestId": 1467, "index": "A", "name": "Wizard of Orz", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 23763}, {"contestId": 1463, "index": "E", "name": "Plan of Lectures", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation", "sortings", "trees"], "solvedCount": 1424}, {"contestId": 1463, "index": "D", "name": "Pairs", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "greedy", "two pointers"], "solvedCount": 4209}, {"contestId": 1463, "index": "B", "name": "Find The Array", "type": "PROGRAMMING", "rating": 1400, "tags": ["bitmasks", "constructive algorithms", "greedy"], "solvedCount": 18574}, {"contestId": 1461, "index": "F", "name": "Mathematical Expression", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 521}, {"contestId": 1461, "index": "A", "name": "String Generation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18369}, {"contestId": 1455, "index": "E", "name": "Four Points", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "flows", "geometry", "greedy", "implementation", "math", "ternary search"], "solvedCount": 1418}, {"contestId": 1455, "index": "C", "name": "Ping-pong", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "games", "math"], "solvedCount": 19158}, {"contestId": 1455, "index": "B", "name": "Jumps", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 21135}, {"contestId": 1454, "index": "D", "name": "Number into Sequence", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 19563}, {"contestId": 1454, "index": "A", "name": "Special Permutation", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "probabilities"], "solvedCount": 38704}, {"contestId": 1453, "index": "D", "name": "Checkpoints", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy", "math", "probabilities"], "solvedCount": 4064}, {"contestId": 1453, "index": "B", "name": "Suffix Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13075}, {"contestId": 1452, "index": "F", "name": "Divide Powers", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 295}, {"contestId": 1451, "index": "F", "name": "Nullify The Matrix", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "games"], "solvedCount": 886}, {"contestId": 1451, "index": "E2", "name": "Bitwise Queries (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 2812}, {"contestId": 1451, "index": "E1", "name": "Bitwise Queries (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 4155}, {"contestId": 1450, "index": "F", "name": "The Struggling Contestant", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1251}, {"contestId": 1450, "index": "E", "name": "Capitalism", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 962}, {"contestId": 1450, "index": "C2", "name": "Errich-Tac-Toe (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["constructive algorithms", "math"], "solvedCount": 3489}, {"contestId": 1450, "index": "C1", "name": "Errich-Tac-Toe (Easy Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "math"], "solvedCount": 5277}, {"contestId": 1450, "index": "A", "name": "Avoid Trygub", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 17435}, {"contestId": 1447, "index": "A", "name": "Add Candies", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 13619}, {"contestId": 1446, "index": "E", "name": "Long Recovery", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "dfs and similar"], "solvedCount": 73}, {"contestId": 1446, "index": "A", "name": "Knapsack", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 14789}, {"contestId": 1444, "index": "D", "name": "Rectangular Polyline", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms", "dp", "geometry"], "solvedCount": 529}, {"contestId": 1443, "index": "A", "name": "Kids Seating", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 16056}, {"contestId": 1442, "index": "E", "name": "Black, White and Grey Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 545}, {"contestId": 1442, "index": "A", "name": "Extreme Subtraction", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 8488}, {"contestId": 1439, "index": "B", "name": "Graph Subset Problem", "type": "PROGRAMMING", "points": 1250.0, "rating": 2600, "tags": ["constructive algorithms", "data structures", "graphs"], "solvedCount": 1344}, {"contestId": 1439, "index": "A2", "name": "Binary Table (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 4928}, {"contestId": 1439, "index": "A1", "name": "Binary Table (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9119}, {"contestId": 1438, "index": "E", "name": "Yurii Can Do Everything", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "divide and conquer", "two pointers"], "solvedCount": 1282}, {"contestId": 1438, "index": "D", "name": "Powerful Ksenia", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 4030}, {"contestId": 1438, "index": "C", "name": "Engineer Artem", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["2-sat", "chinese remainder theorem", "constructive algorithms", "fft", "flows"], "solvedCount": 10074}, {"contestId": 1438, "index": "B", "name": "Valerii Against Everyone", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 18126}, {"contestId": 1438, "index": "A", "name": "Specific Tastes of Andre ", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 19060}, {"contestId": 1437, "index": "E", "name": "Make It Increasing", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "implementation"], "solvedCount": 3304}, {"contestId": 1437, "index": "B", "name": "Reverse Binary Strings", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 18580}, {"contestId": 1437, "index": "A", "name": "Marketing Scheme", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 17798}, {"contestId": 1436, "index": "B", "name": "Prime Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 20106}, {"contestId": 1433, "index": "D", "name": "Districts Connection", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "dfs and similar"], "solvedCount": 21466}, {"contestId": 1433, "index": "C", "name": "Dominant Piranha", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 26168}, {"contestId": 1430, "index": "C", "name": "Numbers on Whiteboard", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "solvedCount": 23108}, {"contestId": 1430, "index": "A", "name": "Number of Apartments", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 20382}, {"contestId": 1428, "index": "D", "name": "Bouncing Boomerangs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 4386}, {"contestId": 1427, "index": "E", "name": "Xum", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "math", "matrices", "number theory"], "solvedCount": 1250}, {"contestId": 1427, "index": "D", "name": "Unshuffling a Deck", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3350}, {"contestId": 1426, "index": "E", "name": "Rock, Paper, Scissors", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "constructive algorithms", "flows", "greedy", "math"], "solvedCount": 7176}, {"contestId": 1426, "index": "D", "name": "Non-zero Segments", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 15337}, {"contestId": 1426, "index": "C", "name": "Increase and Copy", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 18940}, {"contestId": 1425, "index": "H", "name": "Huge Boxes of Animal Toys", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms"], "solvedCount": 4065}, {"contestId": 1423, "index": "J", "name": "Bubble Cup hypothesis", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "dp", "math"], "solvedCount": 718}, {"contestId": 1421, "index": "D", "name": "Hexagons", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math", "shortest paths"], "solvedCount": 4039}, {"contestId": 1421, "index": "C", "name": "Palindromifier", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "strings"], "solvedCount": 12427}, {"contestId": 1421, "index": "B", "name": "Putting Bricks in the Wall", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 12862}, {"contestId": 1420, "index": "C1", "name": "Pok\u00e9mon Army (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 16919}, {"contestId": 1419, "index": "E", "name": "Decryption", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["constructive algorithms", "implementation", "math", "number theory"], "solvedCount": 3114}, {"contestId": 1419, "index": "D2", "name": "Sage's Birthday (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "sortings", "two pointers"], "solvedCount": 14521}, {"contestId": 1419, "index": "D1", "name": "Sage's Birthday (easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["binary search", "constructive algorithms", "greedy", "sortings"], "solvedCount": 23355}, {"contestId": 1419, "index": "B", "name": "Stairs", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 15907}, {"contestId": 1416, "index": "B", "name": "Make Them Equal", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 5869}, {"contestId": 1415, "index": "E", "name": "New Game Plus!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 2558}, {"contestId": 1415, "index": "D", "name": "XOR-gun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "constructive algorithms"], "solvedCount": 5116}, {"contestId": 1413, "index": "A", "name": "Finding Sasuke", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 14563}, {"contestId": 1408, "index": "F", "name": "Two Different", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 2244}, {"contestId": 1408, "index": "B", "name": "Arrays Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 9711}, {"contestId": 1408, "index": "A", "name": "Circle Coloring", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 12371}, {"contestId": 1407, "index": "E", "name": "Egor in the Republic of Dagestan", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 1593}, {"contestId": 1407, "index": "C", "name": "Chocolate Bunny", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "interactive", "math", "two pointers"], "solvedCount": 11308}, {"contestId": 1407, "index": "A", "name": "Ahahahahahahahaha", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 20005}, {"contestId": 1406, "index": "D", "name": "Three Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 3336}, {"contestId": 1406, "index": "C", "name": "Link Cut Centroids", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 9736}, {"contestId": 1405, "index": "B", "name": "Array Cancellation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 20778}, {"contestId": 1405, "index": "A", "name": "Permutation Forgery", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 21198}, {"contestId": 1404, "index": "D", "name": "Game of Pairs", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "interactive", "math", "number theory"], "solvedCount": 975}, {"contestId": 1404, "index": "C", "name": "Fixed Point Removal", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 2466}, {"contestId": 1401, "index": "C", "name": "Mere Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "math", "number theory", "sortings"], "solvedCount": 23267}, {"contestId": 1401, "index": "B", "name": "Ternary Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 20684}, {"contestId": 1401, "index": "A", "name": "Distance and Axis", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "math"], "solvedCount": 26779}, {"contestId": 1400, "index": "C", "name": "Binary String Reconstruction", "type": "PROGRAMMING", "rating": 1500, "tags": ["2-sat", "brute force", "constructive algorithms", "greedy"], "solvedCount": 16633}, {"contestId": 1400, "index": "A", "name": "String Similarity", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "strings"], "solvedCount": 26446}, {"contestId": 1399, "index": "D", "name": "Binary String To Subsequences", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 17512}, {"contestId": 1396, "index": "E", "name": "Distance Matching", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 316}, {"contestId": 1396, "index": "B", "name": "Stoned Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "games", "greedy"], "solvedCount": 10775}, {"contestId": 1396, "index": "A", "name": "Multiples of Length", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 14842}, {"contestId": 1395, "index": "B", "name": "Boboniu Plays Chess", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["constructive algorithms"], "solvedCount": 15754}, {"contestId": 1393, "index": "C", "name": "Pinkie Pie Eats Patty-cakes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 10216}, {"contestId": 1393, "index": "B", "name": "Applejack and Storages", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 16170}, {"contestId": 1392, "index": "F", "name": "Omkar and Landslide", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 1917}, {"contestId": 1392, "index": "E", "name": "Omkar and Duck", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "interactive", "math"], "solvedCount": 3211}, {"contestId": 1391, "index": "E", "name": "Pairs of Pairs", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1416}, {"contestId": 1391, "index": "D", "name": "505", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "greedy", "implementation"], "solvedCount": 4892}, {"contestId": 1391, "index": "A", "name": "Suborrays", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 23949}, {"contestId": 1389, "index": "A", "name": "LCM Problem", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 37870}, {"contestId": 1386, "index": "A", "name": "Colors", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "binary search", "constructive algorithms", "interactive"], "solvedCount": 243}, {"contestId": 1385, "index": "E", "name": "Directing Edges", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 6661}, {"contestId": 1384, "index": "B2", "name": "Koa and the Beach (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2200, "tags": ["constructive algorithms", "dp", "greedy", "implementation"], "solvedCount": 2427}, {"contestId": 1384, "index": "A", "name": "Common Prefixes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 18316}, {"contestId": 1383, "index": "D", "name": "Rearrange", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "sortings"], "solvedCount": 629}, {"contestId": 1383, "index": "B", "name": "GameGame", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "dp", "games", "greedy", "math"], "solvedCount": 4723}, {"contestId": 1381, "index": "C", "name": "Mastermind", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "graph matchings", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 1384}, {"contestId": 1381, "index": "A2", "name": "Prefix Flip (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "implementation", "strings", "two pointers"], "solvedCount": 12687}, {"contestId": 1381, "index": "A1", "name": "Prefix Flip (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "data structures", "strings"], "solvedCount": 19747}, {"contestId": 1380, "index": "D", "name": "Berserk And Fireball", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation", "math", "two pointers"], "solvedCount": 4593}, {"contestId": 1379, "index": "E", "name": "Inverse Genealogy", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "divide and conquer", "dp", "math", "trees"], "solvedCount": 383}, {"contestId": 1375, "index": "H", "name": "Set Merging", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 382}, {"contestId": 1375, "index": "G", "name": "Tree Modification", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graph matchings", "graphs", "trees"], "solvedCount": 1621}, {"contestId": 1375, "index": "F", "name": "Integer Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["constructive algorithms", "games", "interactive", "math"], "solvedCount": 1914}, {"contestId": 1375, "index": "E", "name": "Inversion SwapSort", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 2747}, {"contestId": 1375, "index": "D", "name": "Replace by MEX", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "sortings"], "solvedCount": 8646}, {"contestId": 1375, "index": "C", "name": "Element Extermination", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 20292}, {"contestId": 1375, "index": "B", "name": "Neighbor Grid", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 16857}, {"contestId": 1375, "index": "A", "name": "Sign Flipping", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 17978}, {"contestId": 1374, "index": "F", "name": "Cyclic Shifts Sorting", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "implementation", "sortings"], "solvedCount": 1247}, {"contestId": 1373, "index": "F", "name": "Network Coverage", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 1602}, {"contestId": 1373, "index": "E", "name": "Sum of Digits", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "greedy"], "solvedCount": 2671}, {"contestId": 1372, "index": "C", "name": "Omkar and Baseball", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "math"], "solvedCount": 17269}, {"contestId": 1372, "index": "A", "name": "Omkar and Completion", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 31274}, {"contestId": 1371, "index": "D", "name": "Grid-00100", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 12751}, {"contestId": 1370, "index": "E", "name": "Binary Subsequence Rotation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 4588}, {"contestId": 1370, "index": "B", "name": "GCD Compression", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 22982}, {"contestId": 1368, "index": "E", "name": "Ski Accidents", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 1927}, {"contestId": 1368, "index": "C", "name": "Even Picture", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms"], "solvedCount": 12953}, {"contestId": 1368, "index": "B", "name": "Codeforces Subsequences", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "greedy", "math", "strings"], "solvedCount": 18864}, {"contestId": 1367, "index": "D", "name": "Task On The Board", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 7931}, {"contestId": 1367, "index": "C", "name": "Social Distance", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 22485}, {"contestId": 1366, "index": "E", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "brute force", "combinatorics", "constructive algorithms", "dp", "two pointers"], "solvedCount": 3929}, {"contestId": 1366, "index": "D", "name": "Two Divisors", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 9779}, {"contestId": 1365, "index": "G", "name": "Secure Password", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "interactive", "math"], "solvedCount": 896}, {"contestId": 1365, "index": "F", "name": "Swaps Again", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 4276}, {"contestId": 1365, "index": "E", "name": "Maximum Subsequence Value", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms"], "solvedCount": 7454}, {"contestId": 1365, "index": "D", "name": "Solve The Maze", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 15888}, {"contestId": 1365, "index": "C", "name": "Rotation Matching", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 22069}, {"contestId": 1365, "index": "B", "name": "Trouble Sort", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 25849}, {"contestId": 1364, "index": "E", "name": "X-OR", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "interactive", "probabilities"], "solvedCount": 1089}, {"contestId": 1364, "index": "D", "name": "Ehab's Last Corollary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "solvedCount": 3992}, {"contestId": 1364, "index": "C", "name": "Ehab and Prefix MEXs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 12608}, {"contestId": 1361, "index": "C", "name": "Johnny and Megan's Necklace", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 1362}, {"contestId": 1361, "index": "A", "name": "Johnny and Contribution", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "greedy", "sortings"], "solvedCount": 8115}, {"contestId": 1360, "index": "H", "name": "Binary Median", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms"], "solvedCount": 4267}, {"contestId": 1360, "index": "G", "name": "A/B Matrix", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 7343}, {"contestId": 1360, "index": "F", "name": "Spy-string", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp", "hashing", "strings"], "solvedCount": 11740}, {"contestId": 1360, "index": "C", "name": "Similar Pairs", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "graph matchings", "greedy", "sortings"], "solvedCount": 31424}, {"contestId": 1358, "index": "F", "name": "Tasty Cookie", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "constructive algorithms", "greedy", "implementation"], "solvedCount": 430}, {"contestId": 1358, "index": "E", "name": "Are You Fired?", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 2067}, {"contestId": 1355, "index": "F", "name": "Guess Divisors Count", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "interactive", "number theory"], "solvedCount": 788}, {"contestId": 1355, "index": "D", "name": "Game With Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 17334}, {"contestId": 1354, "index": "F", "name": "Summoning Minions", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "dp", "flows", "graph matchings", "greedy", "sortings"], "solvedCount": 969}, {"contestId": 1353, "index": "D", "name": "Constructing the Array", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "data structures", "sortings"], "solvedCount": 17207}, {"contestId": 1353, "index": "A", "name": "Most Unstable Array", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 38659}, {"contestId": 1352, "index": "G", "name": "Special Permutation", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 19524}, {"contestId": 1352, "index": "F", "name": "Binary String Reconstruction", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "math"], "solvedCount": 16030}, {"contestId": 1352, "index": "B", "name": "Same Parity Summands", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 34770}, {"contestId": 1349, "index": "E", "name": "Slime and Hats", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 80}, {"contestId": 1349, "index": "B", "name": "Orac and Medians", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 7654}, {"contestId": 1348, "index": "D", "name": "Phoenix and Science", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 8436}, {"contestId": 1348, "index": "C", "name": "Phoenix and Distribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 14137}, {"contestId": 1348, "index": "B", "name": "Phoenix and Beauty", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 24407}, {"contestId": 1344, "index": "B", "name": "Monopole Magnets", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 5745}, {"contestId": 1343, "index": "F", "name": "Restore the Permutation by Sorted Segments", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 1223}, {"contestId": 1343, "index": "B", "name": "Balanced Array", "type": "PROGRAMMING", "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 53073}, {"contestId": 1342, "index": "D", "name": "Multiple Testcases", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 5811}, {"contestId": 1342, "index": "B", "name": "Binary Period", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "strings"], "solvedCount": 23087}, {"contestId": 1340, "index": "D", "name": "Nastya and Time Machine", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 790}, {"contestId": 1339, "index": "B", "name": "Sorted Adjacent Differences", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "sortings"], "solvedCount": 25401}, {"contestId": 1338, "index": "D", "name": "Nested Rubber Bands", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "dp", "math", "trees"], "solvedCount": 790}, {"contestId": 1338, "index": "C", "name": "Perfect Triples", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "math"], "solvedCount": 2939}, {"contestId": 1338, "index": "B", "name": "Edge Weight Assignment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "greedy", "math", "trees"], "solvedCount": 7987}, {"contestId": 1337, "index": "A", "name": "Ichihime and Triangle", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 35593}, {"contestId": 1336, "index": "D", "name": "Yui and Mahjong Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["constructive algorithms", "interactive"], "solvedCount": 449}, {"contestId": 1335, "index": "D", "name": "Anti-Sudoku", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 26422}, {"contestId": 1335, "index": "B", "name": "Construct the String", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms"], "solvedCount": 36645}, {"contestId": 1334, "index": "D", "name": "Minimum Euler Cycle", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 6956}, {"contestId": 1334, "index": "C", "name": "Circle of Monsters", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 15969}, {"contestId": 1333, "index": "E", "name": "Road to 1600", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "constructive algorithms"], "solvedCount": 1400}, {"contestId": 1333, "index": "D", "name": "Challenges in school \u211641", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "games", "graphs", "greedy", "implementation", "sortings"], "solvedCount": 3622}, {"contestId": 1333, "index": "A", "name": "Little Artem", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 24005}, {"contestId": 1332, "index": "E", "name": "Height All the Same", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "math", "matrices"], "solvedCount": 3540}, {"contestId": 1332, "index": "D", "name": "Walk on Matrix", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 7790}, {"contestId": 1332, "index": "B", "name": "Composite Coloring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 16949}, {"contestId": 1329, "index": "D", "name": "Dreamoon Likes Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["constructive algorithms", "data structures"], "solvedCount": 334}, {"contestId": 1329, "index": "C", "name": "Drazil Likes Heap", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 1497}, {"contestId": 1329, "index": "A", "name": "Dreamoon Likes Coloring", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 8735}, {"contestId": 1328, "index": "D", "name": "Carousel", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "solvedCount": 12394}, {"contestId": 1327, "index": "C", "name": "Game with Chips", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "implementation"], "solvedCount": 12996}, {"contestId": 1326, "index": "A", "name": "Bad Ugly Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "number theory"], "solvedCount": 29195}, {"contestId": 1325, "index": "F", "name": "Ehab's Last Theorem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 1651}, {"contestId": 1325, "index": "D", "name": "Ehab the Xorcist", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "greedy", "number theory"], "solvedCount": 11448}, {"contestId": 1325, "index": "C", "name": "Ehab and Path-etic MEXs", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 12760}, {"contestId": 1325, "index": "A", "name": "EhAb AnD gCd", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 37644}, {"contestId": 1322, "index": "B", "name": "Present", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures", "math", "sortings"], "solvedCount": 3867}, {"contestId": 1321, "index": "C", "name": "Remove Adjacent", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "solvedCount": 9419}, {"contestId": 1316, "index": "D", "name": "Nash Matrix", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "implementation"], "solvedCount": 3145}, {"contestId": 1316, "index": "C", "name": "Primitive Primes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "math", "ternary search"], "solvedCount": 6947}, {"contestId": 1316, "index": "B", "name": "String Modification", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "implementation", "sortings", "strings"], "solvedCount": 10891}, {"contestId": 1313, "index": "B", "name": "Different Rules", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 6395}, {"contestId": 1312, "index": "B", "name": "Bogosort", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 24016}, {"contestId": 1311, "index": "E", "name": "Construct the Binary Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "trees"], "solvedCount": 2088}, {"contestId": 1305, "index": "E", "name": "Kuroni and the Score Distribution", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 2850}, {"contestId": 1305, "index": "D", "name": "Kuroni and the Celebration", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "solvedCount": 4686}, {"contestId": 1305, "index": "B", "name": "Kuroni and Simple Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "strings", "two pointers"], "solvedCount": 11213}, {"contestId": 1305, "index": "A", "name": "Kuroni and the Gifts", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "greedy", "sortings"], "solvedCount": 13699}, {"contestId": 1304, "index": "D", "name": "Shortest and Longest LIS", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "graphs", "greedy", "two pointers"], "solvedCount": 5995}, {"contestId": 1304, "index": "B", "name": "Longest Palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 17290}, {"contestId": 1302, "index": "B", "name": "DAG", "type": "PROGRAMMING", "tags": ["constructive algorithms"], "solvedCount": 143}, {"contestId": 1301, "index": "D", "name": "Time to Run", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 3745}, {"contestId": 1296, "index": "F", "name": "Berland Beauty", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "greedy", "sortings", "trees"], "solvedCount": 2606}, {"contestId": 1296, "index": "E1", "name": "String Coloring (easy version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "sortings"], "solvedCount": 6998}, {"contestId": 1292, "index": "E", "name": "Rin and The Unknown Flower", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms", "greedy", "interactive", "math"], "solvedCount": 321}, {"contestId": 1292, "index": "B", "name": "Aroma's Search", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "geometry", "greedy", "implementation"], "solvedCount": 5936}, {"contestId": 1290, "index": "D", "name": "Coffee Varieties (hard version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "graphs", "interactive"], "solvedCount": 611}, {"contestId": 1290, "index": "B", "name": "Irreducible Anagrams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "strings", "two pointers"], "solvedCount": 4795}, {"contestId": 1288, "index": "F", "name": "Red-Blue Graph", "type": "PROGRAMMING", "rating": 2900, "tags": ["constructive algorithms", "flows"], "solvedCount": 435}, {"contestId": 1286, "index": "F", "name": "Harry The Potter", "type": "PROGRAMMING", "points": 2750.0, "rating": 3100, "tags": ["brute force", "constructive algorithms", "dp", "fft", "implementation", "math"], "solvedCount": 228}, {"contestId": 1286, "index": "C2", "name": "Madhouse (Hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "hashing", "interactive", "math"], "solvedCount": 603}, {"contestId": 1286, "index": "C1", "name": "Madhouse (Easy version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "interactive", "math"], "solvedCount": 1198}, {"contestId": 1286, "index": "B", "name": "Numbers on Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 4315}, {"contestId": 1285, "index": "E", "name": "Delete a Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "sortings", "trees", "two pointers"], "solvedCount": 1603}, {"contestId": 1283, "index": "F", "name": "DIY Garland", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy", "trees"], "solvedCount": 1562}, {"contestId": 1283, "index": "C", "name": "Friends and Gifts", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "math"], "solvedCount": 12678}, {"contestId": 1282, "index": "E", "name": "The Cake Is a Lie", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs"], "solvedCount": 935}, {"contestId": 1282, "index": "D", "name": "Enchanted Artifact", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "interactive", "strings"], "solvedCount": 2003}, {"contestId": 1280, "index": "F", "name": "Intergalactic Sliding Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 54}, {"contestId": 1278, "index": "E", "name": "Tests for problem D", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "trees"], "solvedCount": 1685}, {"contestId": 1276, "index": "E", "name": "Four Stones", "type": "PROGRAMMING", "points": 2250.0, "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 76}, {"contestId": 1276, "index": "C", "name": "Beautiful Rectangle", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 1400}, {"contestId": 1272, "index": "B", "name": "Snow Walking Robot", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 13388}, {"contestId": 1270, "index": "I", "name": "Xor on Figures", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["constructive algorithms", "fft", "math"], "solvedCount": 222}, {"contestId": 1270, "index": "G", "name": "Subset with Zero Sum", "type": "PROGRAMMING", "points": 3750.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"], "solvedCount": 2005}, {"contestId": 1270, "index": "E", "name": "Divide Points", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["constructive algorithms", "geometry", "math"], "solvedCount": 2148}, {"contestId": 1270, "index": "D", "name": "Strange Device", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "interactive", "math", "sortings"], "solvedCount": 4355}, {"contestId": 1270, "index": "C", "name": "Make Good", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["bitmasks", "constructive algorithms", "math"], "solvedCount": 13461}, {"contestId": 1270, "index": "B", "name": "Interesting Subarray", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 15849}, {"contestId": 1268, "index": "A", "name": "Long Beautiful Integer", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 8209}, {"contestId": 1267, "index": "L", "name": "Lexicography", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "strings"], "solvedCount": 2790}, {"contestId": 1267, "index": "I", "name": "Intriguing Selection", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "constructive algorithms", "implementation", "interactive", "sortings"], "solvedCount": 670}, {"contestId": 1267, "index": "H", "name": "Help BerLine", "type": "PROGRAMMING", "rating": 3200, "tags": ["constructive algorithms"], "solvedCount": 99}, {"contestId": 1267, "index": "D", "name": "DevOps Best Practices", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms"], "solvedCount": 205}, {"contestId": 1267, "index": "C", "name": "Cactus Revenge", "type": "PROGRAMMING", "rating": 3500, "tags": ["constructive algorithms"], "solvedCount": 377}, {"contestId": 1266, "index": "D", "name": "Decreasing Debts", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "math", "two pointers"], "solvedCount": 3351}, {"contestId": 1266, "index": "C", "name": "Diverse Matrix", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 9273}, {"contestId": 1266, "index": "B", "name": "Dice Tower", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 14164}, {"contestId": 1265, "index": "A", "name": "Beautiful String", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 14695}, {"contestId": 1264, "index": "F", "name": "Beautiful Fibonacci Problem", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["constructive algorithms", "number theory"], "solvedCount": 802}, {"contestId": 1264, "index": "E", "name": "Beautiful League", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms", "flows", "graph matchings"], "solvedCount": 728}, {"contestId": 1264, "index": "B", "name": "Beautiful Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 5518}, {"contestId": 1256, "index": "F", "name": "Equalizing Two Strings", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "sortings", "strings"], "solvedCount": 3022}, {"contestId": 1255, "index": "C", "name": "League of Leesins", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation"], "solvedCount": 6427}, {"contestId": 1254, "index": "C", "name": "Point Ordering", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "geometry", "interactive", "math"], "solvedCount": 1207}, {"contestId": 1254, "index": "B2", "name": "Send Boxes to Alice (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "solvedCount": 2878}, {"contestId": 1254, "index": "B1", "name": "Send Boxes to Alice (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "math", "number theory", "ternary search", "two pointers"], "solvedCount": 4344}, {"contestId": 1254, "index": "A", "name": "Feeding Chicken", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 4939}, {"contestId": 1253, "index": "D", "name": "Harmonious Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "solvedCount": 8748}, {"contestId": 1250, "index": "M", "name": "SmartGarden", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 350}, {"contestId": 1250, "index": "B", "name": "The Feast and the Bus", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 2549}, {"contestId": 1245, "index": "B", "name": "Restricted RPS", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 13404}, {"contestId": 1244, "index": "G", "name": "Running in Pairs", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1258}, {"contestId": 1244, "index": "F", "name": "Chips", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1347}, {"contestId": 1244, "index": "E", "name": "Minimizing Difference", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "greedy", "sortings", "ternary search", "two pointers"], "solvedCount": 4732}, {"contestId": 1244, "index": "D", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "trees"], "solvedCount": 7168}, {"contestId": 1242, "index": "E", "name": "Planar Perimeter", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "graphs"], "solvedCount": 126}, {"contestId": 1242, "index": "A", "name": "Tile Painting", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 12211}, {"contestId": 1237, "index": "H", "name": "Balanced Reversals", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["constructive algorithms"], "solvedCount": 297}, {"contestId": 1237, "index": "C2", "name": "Balanced Removals (Harder)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "divide and conquer", "greedy", "implementation", "sortings"], "solvedCount": 4114}, {"contestId": 1237, "index": "C1", "name": "Balanced Removals (Easier)", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "geometry", "greedy"], "solvedCount": 5839}, {"contestId": 1236, "index": "C", "name": "Labs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 9770}, {"contestId": 1231, "index": "E", "name": "Middle-Out", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 672}, {"contestId": 1228, "index": "F", "name": "One Node is Gone", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 414}, {"contestId": 1228, "index": "D", "name": "Complete Tripartite", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "graphs", "hashing", "implementation"], "solvedCount": 4958}, {"contestId": 1227, "index": "G", "name": "Not Same", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 943}, {"contestId": 1227, "index": "C", "name": "Messy", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["constructive algorithms"], "solvedCount": 5262}, {"contestId": 1227, "index": "B", "name": "Box", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 9169}, {"contestId": 1225, "index": "G", "name": "To Make 1", "type": "PROGRAMMING", "points": 3750.0, "rating": 3100, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "number theory"], "solvedCount": 520}, {"contestId": 1225, "index": "F", "name": "Tree Factory", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["constructive algorithms", "greedy", "trees"], "solvedCount": 861}, {"contestId": 1221, "index": "B", "name": "Knights", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 11544}, {"contestId": 1218, "index": "G", "name": "Alpha planetary system", "type": "PROGRAMMING", "rating": 3000, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 83}, {"contestId": 1217, "index": "D", "name": "Coloring Edges", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 4903}, {"contestId": 1215, "index": "C", "name": "Swap Letters", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 10748}, {"contestId": 1214, "index": "H", "name": "Tiles Placement", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 367}, {"contestId": 1214, "index": "E", "name": "Petya and Construction Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "math", "sortings", "trees"], "solvedCount": 2489}, {"contestId": 1213, "index": "E", "name": "Two Small Strings", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "constructive algorithms"], "solvedCount": 4864}, {"contestId": 1209, "index": "C", "name": "Paint the Digits", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 7194}, {"contestId": 1208, "index": "C", "name": "Magic Grid", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 5755}, {"contestId": 1207, "index": "B", "name": "Square Filling", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 12892}, {"contestId": 1205, "index": "F", "name": "Beauty of a Permutation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["constructive algorithms", "math"], "solvedCount": 119}, {"contestId": 1205, "index": "D", "name": "Almost All", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "trees"], "solvedCount": 608}, {"contestId": 1205, "index": "A", "name": "Almost Equal", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 13776}, {"contestId": 1202, "index": "D", "name": "Print a 1337-string...", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "math", "strings"], "solvedCount": 4829}, {"contestId": 1198, "index": "C", "name": "Matching vs  Independent Set", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "greedy", "sortings"], "solvedCount": 3230}, {"contestId": 1196, "index": "F", "name": "K-th Path", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "shortest paths", "sortings"], "solvedCount": 2290}, {"contestId": 1196, "index": "E", "name": "Connected Component on a Chessboard", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3482}, {"contestId": 1196, "index": "B", "name": "Odd Sum Segments", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 16060}, {"contestId": 1196, "index": "A", "name": "Three Piles of Candies", "type": "PROGRAMMING", "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 26996}, {"contestId": 1193, "index": "C", "name": "Scissors and Tape", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "geometry"], "solvedCount": 35}, {"contestId": 1188, "index": "A2", "name": "Add on a Tree: Revolution", "type": "PROGRAMMING", "points": 750.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "implementation", "trees"], "solvedCount": 1064}, {"contestId": 1187, "index": "C", "name": "Vasya And Array", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 6040}, {"contestId": 1186, "index": "D", "name": "Vus the Cossack and Numbers", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 8682}, {"contestId": 1182, "index": "D", "name": "Complete Mirror", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dp", "hashing", "implementation", "trees"], "solvedCount": 776}, {"contestId": 1179, "index": "B", "name": "Tolik and His Uncle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 4282}, {"contestId": 1178, "index": "E", "name": "Archaeology", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "greedy", "strings"], "solvedCount": 4095}, {"contestId": 1178, "index": "D", "name": "Prime Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 7115}, {"contestId": 1174, "index": "F", "name": "Ehab and the Big Finale", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "divide and conquer", "graphs", "implementation", "interactive", "trees"], "solvedCount": 1426}, {"contestId": 1174, "index": "D", "name": "Ehab and the Expected XOR Problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 4574}, {"contestId": 1174, "index": "C", "name": "Ehab and a Special Coloring Problem", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "number theory"], "solvedCount": 11756}, {"contestId": 1174, "index": "A", "name": "Ehab Fails to Be Thanos", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 17098}, {"contestId": 1173, "index": "B", "name": "Nauuo and Chess", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 8736}, {"contestId": 1172, "index": "D", "name": "Nauuo and Portals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2900, "tags": ["constructive algorithms"], "solvedCount": 470}, {"contestId": 1170, "index": "H", "name": "Longest Saw", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms"], "solvedCount": 43}, {"contestId": 1168, "index": "E", "name": "Xor Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms", "math"], "solvedCount": 346}, {"contestId": 1167, "index": "D", "name": "Bicolored RBS", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 6674}, {"contestId": 1166, "index": "E", "name": "The LCMs Must be Large", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 2632}, {"contestId": 1166, "index": "B", "name": "All the Vowels Please", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 11090}, {"contestId": 1163, "index": "E", "name": "Magical Permutation", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "brute force", "constructive algorithms", "data structures", "graphs", "math"], "solvedCount": 636}, {"contestId": 1158, "index": "D", "name": "Winding polygonal line", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["constructive algorithms", "geometry", "greedy", "math"], "solvedCount": 655}, {"contestId": 1158, "index": "C", "name": "Permutation recovery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "math", "sortings"], "solvedCount": 1667}, {"contestId": 1158, "index": "B", "name": "The minimal unique substring", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "math", "strings"], "solvedCount": 2047}, {"contestId": 1158, "index": "A", "name": "The Party and Sweets", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math", "sortings", "two pointers"], "solvedCount": 6682}, {"contestId": 1157, "index": "G", "name": "Inverse of Rows and Columns", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms"], "solvedCount": 861}, {"contestId": 1157, "index": "F", "name": "Maximum Balanced Circle", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dp", "greedy", "two pointers"], "solvedCount": 2344}, {"contestId": 1157, "index": "D", "name": "N Problems During K Days", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 3456}, {"contestId": 1153, "index": "B", "name": "Serval and Toy Bricks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 8803}, {"contestId": 1152, "index": "E", "name": "Neko and Flashback", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 927}, {"contestId": 1152, "index": "B", "name": "Neko Performs Cat Furrier Transform", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "math"], "solvedCount": 8650}, {"contestId": 1151, "index": "C", "name": "Problem for Nazar", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["constructive algorithms", "math"], "solvedCount": 5089}, {"contestId": 1151, "index": "B", "name": "Dima and a Bad XOR", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"], "solvedCount": 10472}, {"contestId": 1149, "index": "A", "name": "Prefix Sum Primes", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 14452}, {"contestId": 1148, "index": "G", "name": "Gold Experience", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["constructive algorithms", "graphs", "math", "number theory", "probabilities"], "solvedCount": 311}, {"contestId": 1148, "index": "F", "name": "Foo Fighters", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 962}, {"contestId": 1148, "index": "E", "name": "Earth Wind and Fire", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "math", "sortings", "two pointers"], "solvedCount": 1646}, {"contestId": 1148, "index": "C", "name": "Crazy Diamond", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "sortings"], "solvedCount": 5003}, {"contestId": 1144, "index": "D", "name": "Equalize Them All", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 9866}, {"contestId": 1144, "index": "C", "name": "Two Shuffled Sequences", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 14725}, {"contestId": 1141, "index": "G", "name": "Privatization of Roads in Treeland", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 2170}, {"contestId": 1137, "index": "D", "name": "Cooperative Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "interactive", "number theory"], "solvedCount": 1428}, {"contestId": 1136, "index": "C", "name": "Nastya Is Transposing Matrices", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "sortings"], "solvedCount": 7470}, {"contestId": 1136, "index": "B", "name": "Nastya Is Playing Computer Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 11496}, {"contestId": 1133, "index": "F2", "name": "Spanning Tree with One Fixed Degree", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 2935}, {"contestId": 1131, "index": "F", "name": "Asya And Kittens", "type": "PROGRAMMING", "points": 3000.0, "rating": 1700, "tags": ["constructive algorithms", "dsu"], "solvedCount": 6149}, {"contestId": 1129, "index": "B", "name": "Wrong Answer", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms"], "solvedCount": 2130}, {"contestId": 1120, "index": "B", "name": "Once in a casino", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 401}, {"contestId": 1119, "index": "G", "name": "Get Ready for the Battle", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 405}, {"contestId": 1119, "index": "C", "name": "Ramesses and Corner Inversion", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 6543}, {"contestId": 1118, "index": "E", "name": "Yet Another Ball Problem", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3881}, {"contestId": 1118, "index": "C", "name": "Palindromic Matrix", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 5484}, {"contestId": 1117, "index": "E", "name": "Decypher the String", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "chinese remainder theorem", "constructive algorithms", "interactive", "math"], "solvedCount": 1438}, {"contestId": 1114, "index": "B", "name": "Yet Another Array Partitioning Task", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 8829}, {"contestId": 1110, "index": "G", "name": "Tree-Tac-Toe ", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "games", "trees"], "solvedCount": 571}, {"contestId": 1110, "index": "E", "name": "Magic Stones", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "math", "sortings"], "solvedCount": 3775}, {"contestId": 1110, "index": "C", "name": "Meaningless Operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 8875}, {"contestId": 1109, "index": "B", "name": "Sasha and One More Name", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["constructive algorithms", "hashing", "strings"], "solvedCount": 4235}, {"contestId": 1108, "index": "D", "name": "Diverse Garland", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 14623}, {"contestId": 1107, "index": "G", "name": "Vasya and Maximum Profit", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "dsu"], "solvedCount": 982}, {"contestId": 1104, "index": "A", "name": "Splitting into digits", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 15139}, {"contestId": 1103, "index": "C", "name": "Johnny Solving", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math"], "solvedCount": 769}, {"contestId": 1103, "index": "B", "name": "Game with modulo", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 3150}, {"contestId": 1103, "index": "A", "name": "Grid game", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9532}, {"contestId": 1100, "index": "D", "name": "Dasha and Chess", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "games", "interactive"], "solvedCount": 826}, {"contestId": 1099, "index": "C", "name": "Postcard", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9213}, {"contestId": 1099, "index": "B", "name": "Squares and Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 10818}, {"contestId": 1098, "index": "C", "name": "Construct a tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 860}, {"contestId": 1098, "index": "B", "name": "Nice table", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 1463}, {"contestId": 1098, "index": "A", "name": "Sum in the tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 8318}, {"contestId": 1097, "index": "E", "name": "Egor and an RPG game", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["constructive algorithms", "greedy"], "solvedCount": 452}, {"contestId": 1093, "index": "B", "name": "Letters Rearranging", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "greedy", "sortings", "strings"], "solvedCount": 15909}, {"contestId": 1092, "index": "E", "name": "Minimal Diameter Forest", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1603}, {"contestId": 1091, "index": "F", "name": "New Year and the Mallard Expedition", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 777}, {"contestId": 1091, "index": "B", "name": "New Year and the Treasure Geolocation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 10342}, {"contestId": 1090, "index": "F", "name": "How to Learn You Score", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "interactive"], "solvedCount": 295}, {"contestId": 1090, "index": "D", "name": "Similar Arrays", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 1979}, {"contestId": 1090, "index": "C", "name": "New Year Presents", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "data structures"], "solvedCount": 477}, {"contestId": 1089, "index": "M", "name": "Minegraphed", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "graphs"], "solvedCount": 584}, {"contestId": 1089, "index": "E", "name": "Easy Chess", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms"], "solvedCount": 1956}, {"contestId": 1088, "index": "D", "name": "Ehab and another another xor problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["bitmasks", "constructive algorithms", "implementation", "interactive"], "solvedCount": 2734}, {"contestId": 1088, "index": "C", "name": "Ehab and a 2-operation task", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 7912}, {"contestId": 1088, "index": "A", "name": "Ehab and another construction problem", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms"], "solvedCount": 16347}, {"contestId": 1085, "index": "D", "name": "Minimum Diameter Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 5273}, {"contestId": 1082, "index": "D", "name": "Maximum Diameter Graph", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 3531}, {"contestId": 1081, "index": "F", "name": "Tricky Interactor", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["constructive algorithms", "implementation", "interactive"], "solvedCount": 443}, {"contestId": 1081, "index": "E", "name": "Missing Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 2516}, {"contestId": 1081, "index": "B", "name": "Farewell Party", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 4368}, {"contestId": 1081, "index": "A", "name": "Definite Game", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 11846}, {"contestId": 1080, "index": "D", "name": "Olya and magical square", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 1501}, {"contestId": 1078, "index": "E", "name": "Negative Time Summation", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["constructive algorithms"], "solvedCount": 85}, {"contestId": 1070, "index": "M", "name": "Algoland and Berland", "type": "PROGRAMMING", "rating": 3000, "tags": ["constructive algorithms", "divide and conquer", "geometry"], "solvedCount": 63}, {"contestId": 1070, "index": "L", "name": "Odd Federalization", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 279}, {"contestId": 1068, "index": "C", "name": "Colored Rooks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs"], "solvedCount": 3099}, {"contestId": 1067, "index": "C", "name": "Knights", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 607}, {"contestId": 1065, "index": "B", "name": "Vasya and Isolated Vertices", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "graphs"], "solvedCount": 10701}, {"contestId": 1063, "index": "E", "name": "Lasers and Mirrors", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["constructive algorithms", "math"], "solvedCount": 327}, {"contestId": 1063, "index": "C", "name": "Dwarves, Hats and Extrasensory Abilities", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "geometry", "interactive"], "solvedCount": 2772}, {"contestId": 1063, "index": "A", "name": "Oh Those Palindromes", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "strings"], "solvedCount": 10183}, {"contestId": 1060, "index": "H", "name": "Sophisticated Device", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms"], "solvedCount": 201}, {"contestId": 1059, "index": "C", "name": "Sequence Transformation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "math"], "solvedCount": 6954}, {"contestId": 1056, "index": "D", "name": "Decorate Apple Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "solvedCount": 5554}, {"contestId": 1054, "index": "G", "name": "New Road Network", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 248}, {"contestId": 1054, "index": "E", "name": "Chips Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 474}, {"contestId": 1054, "index": "C", "name": "Candies Distribution", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 4214}, {"contestId": 1053, "index": "E", "name": "Euler tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "trees"], "solvedCount": 188}, {"contestId": 1045, "index": "E", "name": "Ancient civilizations", "type": "PROGRAMMING", "rating": 3200, "tags": ["constructive algorithms", "geometry"], "solvedCount": 117}, {"contestId": 1043, "index": "E", "name": "Train Hard, Win Easy", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math", "sortings"], "solvedCount": 2675}, {"contestId": 1043, "index": "C", "name": "Smallest Word", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 6759}, {"contestId": 1042, "index": "C", "name": "Array Product", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 4616}, {"contestId": 1041, "index": "E", "name": "Tree Reconstruction", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "graphs", "greedy"], "solvedCount": 3484}, {"contestId": 1039, "index": "A", "name": "Timetable", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 770}, {"contestId": 1038, "index": "B", "name": "Non-Coprime Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "math"], "solvedCount": 13010}, {"contestId": 1037, "index": "A", "name": "Packets", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 10838}, {"contestId": 1034, "index": "B", "name": "Little C Loves 3 II", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "flows", "graph matchings"], "solvedCount": 2066}, {"contestId": 1033, "index": "E", "name": "Hidden Bipartite Graph", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "interactive"], "solvedCount": 570}, {"contestId": 1032, "index": "C", "name": "Playing Piano", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dp"], "solvedCount": 3862}, {"contestId": 1031, "index": "E", "name": "Triple Flips", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 425}, {"contestId": 1028, "index": "E", "name": "Restore Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms"], "solvedCount": 1119}, {"contestId": 1028, "index": "B", "name": "Unnatural Conditions", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 8700}, {"contestId": 1025, "index": "G", "name": "Company Acquisitions", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "math"], "solvedCount": 580}, {"contestId": 1025, "index": "E", "name": "Colored Cubes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms", "implementation", "matrices"], "solvedCount": 544}, {"contestId": 1025, "index": "C", "name": "Plasticine zebra", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation"], "solvedCount": 5873}, {"contestId": 1023, "index": "E", "name": "Down or Right", "type": "PROGRAMMING", "points": 2750.0, "rating": 2100, "tags": ["constructive algorithms", "interactive", "matrices"], "solvedCount": 1944}, {"contestId": 1023, "index": "D", "name": "Array Restoration", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "data structures"], "solvedCount": 3935}, {"contestId": 1019, "index": "C", "name": "Sergey's problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["constructive algorithms", "graphs"], "solvedCount": 1066}, {"contestId": 1017, "index": "C", "name": "The Phone Number", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 5871}, {"contestId": 1016, "index": "D", "name": "Vasya And The Matrix", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "flows", "math"], "solvedCount": 4361}, {"contestId": 1015, "index": "D", "name": "Walking Between Houses", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 7827}, {"contestId": 1012, "index": "D", "name": "AB-Strings", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["constructive algorithms", "strings"], "solvedCount": 313}, {"contestId": 1012, "index": "B", "name": "Chemical table", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "matrices"], "solvedCount": 3634}, {"contestId": 1009, "index": "D", "name": "Relatively Prime Graph", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "graphs", "greedy", "math"], "solvedCount": 6118}, {"contestId": 1004, "index": "D", "name": "Sonya and Matrix", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 1371}, {"contestId": 1004, "index": "C", "name": "Sonya and Robots", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7391}, {"contestId": 1004, "index": "B", "name": "Sonya and Exhibition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 9186}, {"contestId": 1003, "index": "E", "name": "Tree Constructing", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "graphs"], "solvedCount": 2411}, {"contestId": 1003, "index": "B", "name": "Binary String Constructing", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms"], "solvedCount": 10937}, {"contestId": 998, "index": "A", "name": "Balloons", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9105}, {"contestId": 995, "index": "A", "name": "Tesla", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1489}, {"contestId": 990, "index": "D", "name": "Graph And Its Complement", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 3745}, {"contestId": 989, "index": "C", "name": "A Mist of Florescence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "graphs"], "solvedCount": 3636}, {"contestId": 989, "index": "B", "name": "A Tide of Riverscape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "strings"], "solvedCount": 6961}, {"contestId": 985, "index": "D", "name": "Sand Fortress", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 2221}, {"contestId": 982, "index": "A", "name": "Row", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "constructive algorithms"], "solvedCount": 8913}, {"contestId": 980, "index": "B", "name": "Marlin", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 4609}, {"contestId": 976, "index": "D", "name": "Degree Set", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 662}, {"contestId": 963, "index": "B", "name": "Destruction of a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2680}, {"contestId": 962, "index": "E", "name": "Byteland, Berland and Disputed Cities", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 1040}, {"contestId": 962, "index": "B", "name": "Students in Railway Carriage", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 7570}, {"contestId": 960, "index": "C", "name": "Subsequence Counting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "greedy", "implementation"], "solvedCount": 3801}, {"contestId": 959, "index": "D", "name": "Mahmoud and Ehab and another array construction task", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math", "number theory"], "solvedCount": 3037}, {"contestId": 959, "index": "C", "name": "Mahmoud and Ehab and the wrong algorithm", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 5659}, {"contestId": 952, "index": "G", "name": "Puzzling Language", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms"], "solvedCount": 222}, {"contestId": 949, "index": "B", "name": "A Leapfrog in the Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 3633}, {"contestId": 940, "index": "C", "name": "Phone Numbers", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 5581}, {"contestId": 938, "index": "C", "name": "Constructing Tests", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "constructive algorithms"], "solvedCount": 3264}, {"contestId": 936, "index": "C", "name": "Lock Puzzle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 1147}, {"contestId": 934, "index": "B", "name": "A Prosperous Lot", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 8482}, {"contestId": 933, "index": "E", "name": "A Preponderant Reunion", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "dp"], "solvedCount": 184}, {"contestId": 932, "index": "C", "name": "Permutation Cycle", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms"], "solvedCount": 3951}, {"contestId": 932, "index": "A", "name": "Palindromic Supersequence", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms"], "solvedCount": 10116}, {"contestId": 931, "index": "B", "name": "World Cup", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7013}, {"contestId": 926, "index": "E", "name": "Merge Equal Elements", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures"], "solvedCount": 905}, {"contestId": 925, "index": "D", "name": "Aztec Catacombs", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 470}, {"contestId": 925, "index": "C", "name": "Big Secret", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "math"], "solvedCount": 1276}, {"contestId": 923, "index": "F", "name": "Public Service", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 69}, {"contestId": 923, "index": "D", "name": "Picking Strings", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 1149}, {"contestId": 922, "index": "F", "name": "Divisibility", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "greedy", "number theory"], "solvedCount": 611}, {"contestId": 916, "index": "C", "name": "Jamie and Interesting Graph", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 4893}, {"contestId": 912, "index": "B", "name": "New Year's Eve", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["bitmasks", "constructive algorithms", "number theory"], "solvedCount": 11227}, {"contestId": 911, "index": "F", "name": "Tree Destruction", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1490}, {"contestId": 911, "index": "E", "name": "Stack Sorting", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 2440}, {"contestId": 911, "index": "C", "name": "Three Garlands", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms"], "solvedCount": 6935}, {"contestId": 910, "index": "C", "name": "Minimum Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1713}, {"contestId": 909, "index": "F", "name": "AND-permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 511}, {"contestId": 909, "index": "B", "name": "Segments", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "math"], "solvedCount": 6184}, {"contestId": 906, "index": "B", "name": "Seating of Students", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 1115}, {"contestId": 901, "index": "D", "name": "Weighting a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 425}, {"contestId": 901, "index": "B", "name": "GCD of Polynomials", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "math"], "solvedCount": 1368}, {"contestId": 901, "index": "A", "name": "Hashing Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 4992}, {"contestId": 899, "index": "D", "name": "Shovel Sale", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["constructive algorithms", "math"], "solvedCount": 2662}, {"contestId": 899, "index": "C", "name": "Dividing the numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 8221}, {"contestId": 899, "index": "A", "name": "Splitting in Teams", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 10036}, {"contestId": 898, "index": "E", "name": "Squares and not squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 4466}, {"contestId": 896, "index": "B", "name": "Ithea Plays With Chtholly", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "games", "greedy", "interactive"], "solvedCount": 2034}, {"contestId": 894, "index": "C", "name": "Marco and GCD Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "math"], "solvedCount": 4262}, {"contestId": 894, "index": "B", "name": "Ralph And His Magic Field", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "constructive algorithms", "math", "number theory"], "solvedCount": 4352}, {"contestId": 891, "index": "B", "name": "Gluttony", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 2879}, {"contestId": 888, "index": "G", "name": "Xor-MST", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "data structures"], "solvedCount": 3811}, {"contestId": 886, "index": "D", "name": "Restoration of string", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 1715}, {"contestId": 883, "index": "K", "name": "Road Widening", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 1064}, {"contestId": 883, "index": "J", "name": "Renovation", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 553}, {"contestId": 883, "index": "B", "name": "Berland Army", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 320}, {"contestId": 878, "index": "A", "name": "Short Program", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 5232}, {"contestId": 877, "index": "C", "name": "Slava and tanks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 5537}, {"contestId": 873, "index": "D", "name": "Merge Sort", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 2977}, {"contestId": 868, "index": "C", "name": "Qualification Rounds", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["bitmasks", "brute force", "constructive algorithms", "dp"], "solvedCount": 4502}, {"contestId": 865, "index": "D", "name": "Buy Low Sell High", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 4631}, {"contestId": 865, "index": "A", "name": "Save the problem!", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms"], "solvedCount": 4131}, {"contestId": 862, "index": "C", "name": "Mahmoud and Ehab and the xor", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 3909}, {"contestId": 858, "index": "F", "name": "Wizard's Tour", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 1438}, {"contestId": 856, "index": "A", "name": "Set Theory", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "constructive algorithms"], "solvedCount": 1350}, {"contestId": 854, "index": "B", "name": "Maxim Buys an Apartment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "math"], "solvedCount": 8107}, {"contestId": 854, "index": "A", "name": "Fraction", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 13194}, {"contestId": 850, "index": "D", "name": "Tournament Construction", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["constructive algorithms", "dp", "graphs", "greedy", "math"], "solvedCount": 365}, {"contestId": 848, "index": "B", "name": "Rooter's Song", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "geometry", "implementation", "sortings", "two pointers"], "solvedCount": 1809}, {"contestId": 848, "index": "A", "name": "From Y to Y", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms"], "solvedCount": 5006}, {"contestId": 847, "index": "L", "name": "Berland SU Computer Network", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "hashing", "trees"], "solvedCount": 313}, {"contestId": 847, "index": "D", "name": "Dog Show", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 1002}, {"contestId": 847, "index": "C", "name": "Sum of Nestings", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 2313}, {"contestId": 843, "index": "C", "name": "Upgrading Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math", "trees"], "solvedCount": 343}, {"contestId": 840, "index": "B", "name": "Leha and another game about graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "graphs"], "solvedCount": 2227}, {"contestId": 835, "index": "E", "name": "The penguin's game", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 1117}, {"contestId": 831, "index": "C", "name": "Jury Marks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "constructive algorithms"], "solvedCount": 4341}, {"contestId": 830, "index": "E", "name": "Perpetual Motion Machine", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["constructive algorithms", "dp", "graphs", "implementation", "math", "trees"], "solvedCount": 269}, {"contestId": 827, "index": "B", "name": "High Load", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "trees"], "solvedCount": 3429}, {"contestId": 822, "index": "F", "name": "Madness", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 285}, {"contestId": 820, "index": "B", "name": "Mister B and Angle in Polygon", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "geometry", "math"], "solvedCount": 5075}, {"contestId": 819, "index": "E", "name": "Mister B and Flight to the Moon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "graphs"], "solvedCount": 495}, {"contestId": 815, "index": "E", "name": "Karen and Neighborhood", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["binary search", "constructive algorithms", "implementation"], "solvedCount": 216}, {"contestId": 815, "index": "B", "name": "Karen and Test", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "combinatorics", "constructive algorithms", "math"], "solvedCount": 1358}, {"contestId": 814, "index": "B", "name": "An express train to reveries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms"], "solvedCount": 5540}, {"contestId": 814, "index": "A", "name": "An abandoned sentiment from past", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 10074}, {"contestId": 811, "index": "D", "name": "Vladik and Favorite Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "interactive"], "solvedCount": 1520}, {"contestId": 808, "index": "C", "name": "Tea Party", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 5928}, {"contestId": 805, "index": "B", "name": "3-palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms"], "solvedCount": 15827}, {"contestId": 804, "index": "E", "name": "The same permutation ", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 405}, {"contestId": 804, "index": "C", "name": "Ice cream coloring", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "greedy"], "solvedCount": 1608}, {"contestId": 804, "index": "A", "name": "Find Amir", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 14986}, {"contestId": 803, "index": "C", "name": "Maximal GCD", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 4882}, {"contestId": 803, "index": "B", "name": "Distances to Zero", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 6373}, {"contestId": 803, "index": "A", "name": "Maximal Binary Matrix", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms"], "solvedCount": 4726}, {"contestId": 802, "index": "H", "name": "Fake News (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "strings"], "solvedCount": 419}, {"contestId": 801, "index": "B", "name": "Valued Keys", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 9960}, {"contestId": 798, "index": "E", "name": "Mike and code of a permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "data structures", "graphs", "sortings"], "solvedCount": 449}, {"contestId": 798, "index": "D", "name": "Mike and distribution", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "sortings"], "solvedCount": 1829}, {"contestId": 798, "index": "A", "name": "Mike and palindrome", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "strings"], "solvedCount": 20782}, {"contestId": 796, "index": "D", "name": "Police Stations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths", "trees"], "solvedCount": 5032}, {"contestId": 796, "index": "C", "name": "Bank Hacking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 2956}, {"contestId": 793, "index": "E", "name": "Problem of offices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "solvedCount": 238}, {"contestId": 788, "index": "D", "name": "Finding lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["constructive algorithms", "divide and conquer", "interactive"], "solvedCount": 355}, {"contestId": 788, "index": "B", "name": "Weird journey", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "dfs and similar", "dsu", "graphs"], "solvedCount": 2268}, {"contestId": 780, "index": "E", "name": "Underground Lab", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 2279}, {"contestId": 779, "index": "C", "name": "Dishonest Sellers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 11437}, {"contestId": 779, "index": "A", "name": "Pupils Redistribution", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 9115}, {"contestId": 778, "index": "D", "name": "Parquet Re-laying", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["constructive algorithms"], "solvedCount": 477}, {"contestId": 777, "index": "A", "name": "Shell Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 9882}, {"contestId": 776, "index": "F", "name": "Sherlock's bet to Moriarty", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation", "trees"], "solvedCount": 406}, {"contestId": 776, "index": "B", "name": "Sherlock and his girlfriend", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "number theory"], "solvedCount": 18921}, {"contestId": 774, "index": "H", "name": "Repairing Of String", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "constructive algorithms"], "solvedCount": 252}, {"contestId": 774, "index": "D", "name": "Lie or Truth", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "constructive algorithms", "implementation", "sortings"], "solvedCount": 1891}, {"contestId": 774, "index": "C", "name": "Maximum Number", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "constructive algorithms", "greedy", "implementation"], "solvedCount": 3869}, {"contestId": 773, "index": "C", "name": "Prairie Partition", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "greedy", "math"], "solvedCount": 934}, {"contestId": 772, "index": "C", "name": "Vulnerable Kerbals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dp", "graphs", "math", "number theory"], "solvedCount": 1179}, {"contestId": 771, "index": "B", "name": "Bear and Different Names", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 6612}, {"contestId": 768, "index": "B", "name": "Code For 1", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer"], "solvedCount": 5784}, {"contestId": 768, "index": "A", "name": "Oath of the Night's Watch", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "sortings"], "solvedCount": 25828}, {"contestId": 766, "index": "E", "name": "Mahmoud and a xor trip", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "dp", "math", "trees"], "solvedCount": 2768}, {"contestId": 766, "index": "B", "name": "Mahmoud and a Triangle", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "geometry", "greedy", "math", "number theory", "sortings"], "solvedCount": 30534}, {"contestId": 766, "index": "A", "name": "Mahmoud and Longest Uncommon Subsequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "strings"], "solvedCount": 28413}, {"contestId": 765, "index": "D", "name": "Artsem and Saunders", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "dsu", "math"], "solvedCount": 2388}, {"contestId": 764, "index": "B", "name": "Timofey and cubes", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "implementation"], "solvedCount": 11558}, {"contestId": 763, "index": "B", "name": "Timofey and rectangles", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "geometry"], "solvedCount": 2566}, {"contestId": 761, "index": "E", "name": "Dasha and Puzzle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1886}, {"contestId": 761, "index": "D", "name": "Dasha and Very Difficult Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "brute force", "constructive algorithms", "greedy", "sortings"], "solvedCount": 3931}, {"contestId": 761, "index": "A", "name": "Dasha and Stairs", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 14277}, {"contestId": 758, "index": "D", "name": "Ability To Convert", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "dp", "greedy", "math", "strings"], "solvedCount": 2678}, {"contestId": 758, "index": "C", "name": "Unfair Poll", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "constructive algorithms", "implementation", "math"], "solvedCount": 3814}, {"contestId": 756, "index": "A", "name": "Pavel and barbecue", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar"], "solvedCount": 2957}, {"contestId": 755, "index": "E", "name": "PolandBall and White-Red graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 806}, {"contestId": 754, "index": "C", "name": "Vladik and chat", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dp", "implementation", "strings"], "solvedCount": 892}, {"contestId": 754, "index": "A", "name": "Lesha and array splitting", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 8388}, {"contestId": 753, "index": "C", "name": "Interactive Bulls and Cows (Hard)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "interactive"], "solvedCount": 278}, {"contestId": 753, "index": "B", "name": "Interactive Bulls and Cows (Easy)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 1163}, {"contestId": 750, "index": "F", "name": "New Year and Finding Roots", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "implementation", "interactive", "trees"], "solvedCount": 460}, {"contestId": 749, "index": "B", "name": "Parallelogram is Back", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "geometry"], "solvedCount": 8231}, {"contestId": 748, "index": "F", "name": "Santa Clauses and a Soccer Championship", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 629}, {"contestId": 748, "index": "D", "name": "Santa Claus and a Palindrome", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 1801}, {"contestId": 748, "index": "C", "name": "Santa Claus and Robot", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 4530}, {"contestId": 746, "index": "G", "name": "New Roads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 1298}, {"contestId": 746, "index": "D", "name": "Green and Black Tea", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 4958}, {"contestId": 746, "index": "C", "name": "Tram", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 3672}, {"contestId": 743, "index": "C", "name": "Vladik and fractions", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 11729}, {"contestId": 743, "index": "B", "name": "Chloe and the sequence ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "bitmasks", "constructive algorithms", "implementation"], "solvedCount": 14122}, {"contestId": 743, "index": "A", "name": "Vladik and flights", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 10826}, {"contestId": 741, "index": "C", "name": "Arpa\u2019s overnight party and Mehrdad\u2019s silent entering", "type": "PROGRAMMING", "points": 1250.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 2342}, {"contestId": 740, "index": "B", "name": "Alyona and flowers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 7935}, {"contestId": 739, "index": "A", "name": "Alyona and mex", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy"], "solvedCount": 7543}, {"contestId": 737, "index": "F", "name": "Dirty plates", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["constructive algorithms", "math"], "solvedCount": 68}, {"contestId": 736, "index": "E", "name": "Chess Championship", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["constructive algorithms", "flows", "greedy", "math"], "solvedCount": 176}, {"contestId": 735, "index": "C", "name": "Tennis Championship", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "solvedCount": 7303}, {"contestId": 734, "index": "F", "name": "Anton and School", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "implementation", "math"], "solvedCount": 1270}, {"contestId": 733, "index": "E", "name": "Sleep in Class", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "math", "two pointers"], "solvedCount": 830}, {"contestId": 733, "index": "C", "name": "Epidemic in Monstropolis", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy", "two pointers"], "solvedCount": 3285}, {"contestId": 732, "index": "C", "name": "Sanatorium", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["binary search", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 9445}, {"contestId": 732, "index": "A", "name": "Buy a Shovel", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "constructive algorithms", "implementation", "math"], "solvedCount": 66067}, {"contestId": 731, "index": "B", "name": "Coupons and Discounts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 7736}, {"contestId": 730, "index": "H", "name": "Delete Them", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 2900}, {"contestId": 730, "index": "B", "name": "Minimum and Maximum", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "interactive"], "solvedCount": 2370}, {"contestId": 729, "index": "E", "name": "Subordinates", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "sortings"], "solvedCount": 2126}, {"contestId": 729, "index": "D", "name": "Sea Battle", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 3597}, {"contestId": 727, "index": "D", "name": "T-shirts Distribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "flows", "greedy"], "solvedCount": 1790}, {"contestId": 727, "index": "C", "name": "Guess the Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 6795}, {"contestId": 725, "index": "C", "name": "Hidden Word", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation", "strings"], "solvedCount": 2571}, {"contestId": 723, "index": "E", "name": "One-Way Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "flows", "graphs", "greedy"], "solvedCount": 1873}, {"contestId": 721, "index": "D", "name": "Maxim and Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 2248}, {"contestId": 720, "index": "C", "name": "Homework", "type": "PROGRAMMING", "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 96}, {"contestId": 715, "index": "D", "name": "Create a Maze", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["constructive algorithms"], "solvedCount": 231}, {"contestId": 715, "index": "B", "name": "Complete The Graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["binary search", "constructive algorithms", "graphs", "shortest paths"], "solvedCount": 2624}, {"contestId": 715, "index": "A", "name": "Plus and Square Root", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "math"], "solvedCount": 5529}, {"contestId": 713, "index": "B", "name": "Searching Rectangles", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["binary search", "constructive algorithms", "interactive"], "solvedCount": 1414}, {"contestId": 711, "index": "B", "name": "Chris and Magic Square", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 8339}, {"contestId": 710, "index": "C", "name": "Magic Odd Square", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "math"], "solvedCount": 4954}, {"contestId": 708, "index": "B", "name": "Recover the String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 3188}, {"contestId": 708, "index": "A", "name": "Letters Cyclic Shift", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "implementation", "strings"], "solvedCount": 8811}, {"contestId": 698, "index": "B", "name": "Fix a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 5579}, {"contestId": 690, "index": "F2", "name": "Tree of Life (medium)", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "hashing", "trees"], "solvedCount": 76}, {"contestId": 689, "index": "A", "name": "Mike and Cellphone", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 5174}, {"contestId": 688, "index": "B", "name": "Lovely Palindromes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "math"], "solvedCount": 29834}, {"contestId": 686, "index": "B", "name": "Little Robber Girl's Zoo", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 7583}, {"contestId": 686, "index": "A", "name": "Free Ice Cream", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 34974}, {"contestId": 682, "index": "A", "name": "Alyona and Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 20201}, {"contestId": 681, "index": "D", "name": "Gifts by the List", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 1711}, {"contestId": 681, "index": "C", "name": "Heap Operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 7090}, {"contestId": 680, "index": "B", "name": "Bear and Finding Criminals", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 23155}, {"contestId": 680, "index": "A", "name": "Bear and Five Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 12106}, {"contestId": 679, "index": "A", "name": "Bear and Prime 100", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["constructive algorithms", "interactive", "math"], "solvedCount": 11968}, {"contestId": 676, "index": "A", "name": "Nicholas and Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13579}, {"contestId": 675, "index": "C", "name": "Money Transfers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 3409}, {"contestId": 675, "index": "B", "name": "Restoring Painting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 7259}, {"contestId": 672, "index": "B", "name": "Different is Good", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation", "strings"], "solvedCount": 16968}, {"contestId": 670, "index": "F", "name": "Restore a Number", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "strings"], "solvedCount": 843}, {"contestId": 670, "index": "A", "name": "Holidays", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 16331}, {"contestId": 667, "index": "B", "name": "Coat of Anticubism", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "geometry"], "solvedCount": 5446}, {"contestId": 665, "index": "D", "name": "Simple Subset", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 3165}, {"contestId": 663, "index": "A", "name": "Rebus", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "expression parsing", "greedy", "math"], "solvedCount": 3214}, {"contestId": 662, "index": "D", "name": "International Olympiad", "type": "PROGRAMMING", "points": 250.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 1614}, {"contestId": 659, "index": "B", "name": "Qualifying Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "sortings"], "solvedCount": 6169}, {"contestId": 652, "index": "F", "name": "Ants on a Circle", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms", "math"], "solvedCount": 515}, {"contestId": 649, "index": "D", "name": "\u0414\u0435\u0444\u0440\u0430\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0430\u043c\u044f\u0442\u0438", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 341}, {"contestId": 649, "index": "C", "name": "\u041f\u0435\u0447\u0430\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0439", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 435}, {"contestId": 649, "index": "B", "name": "\u042d\u0442\u0430\u0436\u0438", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms"], "solvedCount": 516}, {"contestId": 649, "index": "A", "name": "\u041b\u044e\u0431\u0438\u043c\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u041f\u043e\u043b\u0438\u043a\u0430\u0440\u043f\u0430", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1073}, {"contestId": 648, "index": "C", "name": "\u041f\u0443\u0442\u044c \u0420\u043e\u0431\u043e\u0442\u0430", "type": "PROGRAMMING", "points": 1500.0, "rating": 1100, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 804}, {"contestId": 648, "index": "B", "name": "\u0421\u043e\u0431\u0435\u0440\u0438 \u0441\u0442\u043e\u043b", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "sortings"], "solvedCount": 1162}, {"contestId": 648, "index": "A", "name": "\u041d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043f\u043e\u0434\u044a\u0435\u043c", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "implementation"], "solvedCount": 557}, {"contestId": 645, "index": "A", "name": "Amity Assessment", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 3348}, {"contestId": 644, "index": "B", "name": "Processing Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["*special", "constructive algorithms", "data structures", "two pointers"], "solvedCount": 2590}, {"contestId": 644, "index": "A", "name": "Parliament of Berland", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["*special", "constructive algorithms"], "solvedCount": 4361}, {"contestId": 643, "index": "B", "name": "Bear and Two Paths", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "graphs"], "solvedCount": 3131}, {"contestId": 641, "index": "C", "name": "Little Artem and Dance", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 2833}, {"contestId": 639, "index": "B", "name": "Bear and Forgotten Tree 3", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 6367}, {"contestId": 638, "index": "A", "name": "Home Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["*special", "constructive algorithms", "math"], "solvedCount": 3740}, {"contestId": 637, "index": "C", "name": "Promocodes with Mistakes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "brute force", "constructive algorithms", "implementation"], "solvedCount": 2406}, {"contestId": 637, "index": "B", "name": "Chat Order", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["*special", "binary search", "constructive algorithms", "data structures", "sortings"], "solvedCount": 14817}, {"contestId": 637, "index": "A", "name": "Voting for Photos", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["*special", "constructive algorithms", "implementation"], "solvedCount": 5268}, {"contestId": 634, "index": "A", "name": "Island Puzzle", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3074}, {"contestId": 633, "index": "E", "name": "Startup Funding", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "probabilities", "two pointers"], "solvedCount": 566}, {"contestId": 633, "index": "B", "name": "A Trivial Problem", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["brute force", "constructive algorithms", "math", "number theory"], "solvedCount": 6496}, {"contestId": 632, "index": "B", "name": "Alice, Bob, Two Teams", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "constructive algorithms"], "solvedCount": 3872}, {"contestId": 631, "index": "B", "name": "Print Check", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7228}, {"contestId": 629, "index": "A", "name": "Far Relative\u2019s Birthday Cake", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "combinatorics", "constructive algorithms", "implementation"], "solvedCount": 13040}, {"contestId": 626, "index": "B", "name": "Cards", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 6482}, {"contestId": 625, "index": "D", "name": "Finals in arithmetic", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 620}, {"contestId": 625, "index": "C", "name": "K-special Tables", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 6630}, {"contestId": 625, "index": "B", "name": "War of the Corporations", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 9807}, {"contestId": 623, "index": "A", "name": "Graph and String", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "graphs"], "solvedCount": 4302}, {"contestId": 622, "index": "D", "name": "Optimal Number Permutation", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 2780}, {"contestId": 621, "index": "D", "name": "Rat Kwesh and Cheese", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 959}, {"contestId": 618, "index": "F", "name": "Double Knapsack", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["constructive algorithms", "two pointers"], "solvedCount": 1296}, {"contestId": 618, "index": "B", "name": "Guess the Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms"], "solvedCount": 7796}, {"contestId": 617, "index": "D", "name": "Polyline", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 4120}, {"contestId": 613, "index": "C", "name": "Necklace", "type": "PROGRAMMING", "points": 1250.0, "rating": 2500, "tags": ["constructive algorithms", "math"], "solvedCount": 970}, {"contestId": 612, "index": "E", "name": "Square Root of Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "constructive algorithms", "dfs and similar", "graphs", "math"], "solvedCount": 1569}, {"contestId": 611, "index": "H", "name": "New Year  and Forgotten Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "flows", "graphs"], "solvedCount": 574}, {"contestId": 610, "index": "D", "name": "Vika and Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "geometry", "two pointers"], "solvedCount": 1415}, {"contestId": 610, "index": "C", "name": "Harmony Analysis", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 2775}, {"contestId": 610, "index": "B", "name": "Vika and Squares", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7013}, {"contestId": 609, "index": "B", "name": "The Best Gift", "type": "PROGRAMMING", "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 8727}, {"contestId": 605, "index": "B", "name": "Lazy Student", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "graphs"], "solvedCount": 3375}, {"contestId": 605, "index": "A", "name": "Sorting Railway Cars", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 7010}, {"contestId": 600, "index": "C", "name": "Make Palindrome", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 5597}, {"contestId": 595, "index": "A", "name": "Vitaly and Night", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 14233}, {"contestId": 593, "index": "C", "name": "Beautiful Function", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "math"], "solvedCount": 271}, {"contestId": 584, "index": "E", "name": "Anton and Ira", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1392}, {"contestId": 584, "index": "C", "name": "Marina and Vasya", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "strings"], "solvedCount": 6049}, {"contestId": 582, "index": "B", "name": "Once Again...", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["constructive algorithms", "dp", "matrices"], "solvedCount": 3291}, {"contestId": 582, "index": "A", "name": "GCD Table", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "number theory"], "solvedCount": 7489}, {"contestId": 581, "index": "D", "name": "Three Logos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["bitmasks", "brute force", "constructive algorithms", "geometry", "implementation", "math"], "solvedCount": 3388}, {"contestId": 578, "index": "E", "name": "Walking!", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "greedy"], "solvedCount": 603}, {"contestId": 576, "index": "C", "name": "Points on Plane", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "divide and conquer", "geometry", "greedy", "sortings"], "solvedCount": 3191}, {"contestId": 576, "index": "B", "name": "Invariance of Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1569}, {"contestId": 575, "index": "D", "name": "Tablecity", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1802}, {"contestId": 573, "index": "C", "name": "Bear and Drawing", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 949}, {"contestId": 571, "index": "C", "name": "CNF 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 608}, {"contestId": 570, "index": "D", "name": "Tree Requests", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 6521}, {"contestId": 570, "index": "C", "name": "Replacement", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 8809}, {"contestId": 570, "index": "B", "name": "Simple Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "games", "greedy", "implementation", "math"], "solvedCount": 15686}, {"contestId": 566, "index": "E", "name": "Restoring Map", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["bitmasks", "constructive algorithms", "trees"], "solvedCount": 597}, {"contestId": 566, "index": "B", "name": "Replicating Processes", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 252}, {"contestId": 560, "index": "B", "name": "Gerald is into Art", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7741}, {"contestId": 557, "index": "B", "name": "Pasha and Tea", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "math", "sortings"], "solvedCount": 7061}, {"contestId": 553, "index": "B", "name": "Kyoya and Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["binary search", "combinatorics", "constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 2092}, {"contestId": 551, "index": "B", "name": "ZgukistringZ", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation", "strings"], "solvedCount": 3746}, {"contestId": 550, "index": "E", "name": "Brackets in Implications", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 1371}, {"contestId": 550, "index": "D", "name": "Regular Bridge", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 3227}, {"contestId": 549, "index": "G", "name": "Happy Line", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 2386}, {"contestId": 549, "index": "B", "name": "Looksery Party", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy"], "solvedCount": 1472}, {"contestId": 547, "index": "D", "name": "Mike and Fish", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 2379}, {"contestId": 546, "index": "D", "name": "Soldier and Number Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dp", "math", "number theory"], "solvedCount": 11100}, {"contestId": 544, "index": "B", "name": "Sea and Islands", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7777}, {"contestId": 543, "index": "E", "name": "Listening to Music", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "data structures"], "solvedCount": 271}, {"contestId": 543, "index": "B", "name": "Destroying Roads", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "graphs", "shortest paths"], "solvedCount": 3818}, {"contestId": 542, "index": "C", "name": "Idempotent functions", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 1092}, {"contestId": 538, "index": "G", "name": "Berserk Robot ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "math", "sortings"], "solvedCount": 438}, {"contestId": 538, "index": "D", "name": "Weird Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 2403}, {"contestId": 538, "index": "B", "name": "Quasi Binary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "dp", "greedy", "implementation"], "solvedCount": 17495}, {"contestId": 534, "index": "E", "name": "Berland Local Positioning System", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "hashing", "implementation"], "solvedCount": 339}, {"contestId": 534, "index": "D", "name": "Handshakes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 2362}, {"contestId": 534, "index": "A", "name": "Exam", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 11977}, {"contestId": 533, "index": "E", "name": "Correcting Mistakes", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms", "dp", "greedy", "hashing", "strings", "two pointers"], "solvedCount": 2154}, {"contestId": 525, "index": "D", "name": "Arthur and Walls", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "shortest paths"], "solvedCount": 1625}, {"contestId": 525, "index": "B", "name": "Pasha and String", "type": "PROGRAMMING", "points": 750.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "math", "strings"], "solvedCount": 9135}, {"contestId": 518, "index": "C", "name": "Anya and Smartphone", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 5909}, {"contestId": 518, "index": "A", "name": "Vitaly and Strings", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "strings"], "solvedCount": 8926}, {"contestId": 515, "index": "D", "name": "Drazil and Tiles", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 2754}, {"contestId": 513, "index": "D2", "name": "Constrained Tree", "type": "PROGRAMMING", "points": 8.0, "rating": 2600, "tags": ["constructive algorithms", "data structures"], "solvedCount": 358}, {"contestId": 513, "index": "A", "name": "Game", "type": "PROGRAMMING", "points": 3.0, "rating": 800, "tags": ["constructive algorithms", "math"], "solvedCount": 19869}, {"contestId": 512, "index": "E", "name": "Fox And Polygon", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 498}, {"contestId": 509, "index": "D", "name": "Restoring Numbers", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "math"], "solvedCount": 728}, {"contestId": 509, "index": "B", "name": "Painting Pebbles", "type": "PROGRAMMING", "rating": 1300, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 9469}, {"contestId": 508, "index": "C", "name": "Anya and Ghosts", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 4391}, {"contestId": 501, "index": "C", "name": "Misha and Forest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "sortings", "trees"], "solvedCount": 5496}, {"contestId": 500, "index": "C", "name": "New Year Book Reading", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy", "implementation", "math"], "solvedCount": 5728}, {"contestId": 496, "index": "C", "name": "Removing Columns", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 7536}, {"contestId": 496, "index": "B", "name": "Secret Combination", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 5777}, {"contestId": 493, "index": "D", "name": "Vasya and Chess", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "games", "math"], "solvedCount": 9446}, {"contestId": 491, "index": "A", "name": "Up the hill", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 2795}, {"contestId": 488, "index": "B", "name": "Candy Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 2073}, {"contestId": 487, "index": "C", "name": "Prefix Product Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 2493}, {"contestId": 484, "index": "E", "name": "Sign on Fence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures"], "solvedCount": 2145}, {"contestId": 484, "index": "A", "name": "Bits", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms"], "solvedCount": 10575}, {"contestId": 482, "index": "B", "name": "Interesting Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "trees"], "solvedCount": 6113}, {"contestId": 482, "index": "A", "name": "Diverse Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 9450}, {"contestId": 479, "index": "B", "name": "Towers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 7511}, {"contestId": 478, "index": "B", "name": "Random Teams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["combinatorics", "constructive algorithms", "greedy", "math"], "solvedCount": 34902}, {"contestId": 476, "index": "D", "name": "Dreamoon and Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 4298}, {"contestId": 475, "index": "C", "name": "Kamal-ol-molk's Painting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 775}, {"contestId": 472, "index": "F", "name": "Design Tutorial: Change the Goal", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "math", "matrices"], "solvedCount": 247}, {"contestId": 472, "index": "E", "name": "Design Tutorial: Learn from a Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 127}, {"contestId": 468, "index": "C", "name": "Hack it!", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "math"], "solvedCount": 2224}, {"contestId": 468, "index": "A", "name": "24 Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 7725}, {"contestId": 467, "index": "B", "name": "Fedor and New Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["bitmasks", "brute force", "constructive algorithms", "implementation"], "solvedCount": 35307}, {"contestId": 460, "index": "D", "name": "Little Victor and Set", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "math"], "solvedCount": 968}, {"contestId": 459, "index": "C", "name": "Pashmak and Buses", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "math"], "solvedCount": 6045}, {"contestId": 457, "index": "E", "name": "Flow Optimality", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "flows", "math"], "solvedCount": 80}, {"contestId": 453, "index": "C", "name": "Little Pony and Summer Sun Celebration", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 1563}, {"contestId": 452, "index": "B", "name": "4-point polyline", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "geometry", "trees"], "solvedCount": 1968}, {"contestId": 449, "index": "C", "name": "Jzzhu and Apples", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms", "number theory"], "solvedCount": 2185}, {"contestId": 443, "index": "A", "name": "Anton and Letters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 82581}, {"contestId": 441, "index": "D", "name": "Valera and Swaps", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dsu", "graphs", "implementation", "math", "string suffix structures"], "solvedCount": 1054}, {"contestId": 441, "index": "C", "name": "Valera and Tubes ", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "implementation"], "solvedCount": 10786}, {"contestId": 439, "index": "C", "name": "Devu and Partitioning of the Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "implementation", "number theory"], "solvedCount": 3786}, {"contestId": 432, "index": "E", "name": "Square Tiling", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "greedy"], "solvedCount": 652}, {"contestId": 430, "index": "A", "name": "Points and Segments (easy)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "sortings"], "solvedCount": 2211}, {"contestId": 429, "index": "C", "name": "Guess the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "trees"], "solvedCount": 896}, {"contestId": 424, "index": "D", "name": "Biathlon Track", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp"], "solvedCount": 550}, {"contestId": 421, "index": "A", "name": "Pasha and Hamsters", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 5746}, {"contestId": 417, "index": "E", "name": "Square Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "math", "probabilities"], "solvedCount": 759}, {"contestId": 417, "index": "C", "name": "Football", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 4596}, {"contestId": 414, "index": "A", "name": "Mashmokh and Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "number theory"], "solvedCount": 9597}, {"contestId": 409, "index": "H", "name": "A + B Strikes Back", "type": "PROGRAMMING", "rating": 1500, "tags": ["*special", "brute force", "constructive algorithms", "dsu", "implementation"], "solvedCount": 8533}, {"contestId": 402, "index": "C", "name": "Searching for Graph", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["brute force", "constructive algorithms", "graphs"], "solvedCount": 5641}, {"contestId": 401, "index": "C", "name": "Team", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 19031}, {"contestId": 398, "index": "C", "name": "Tree and Array", "type": "PROGRAMMING", "points": 1500.0, "tags": ["constructive algorithms"], "solvedCount": 207}, {"contestId": 398, "index": "A", "name": "Cards", "type": "PROGRAMMING", "points": 500.0, "tags": ["constructive algorithms", "implementation"], "solvedCount": 910}, {"contestId": 397, "index": "B", "name": "On Corruption and Numbers", "type": "PROGRAMMING", "points": 1000.0, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 735}, {"contestId": 394, "index": "C", "name": "Dominoes", "type": "PROGRAMMING", "points": 1500.0, "tags": ["constructive algorithms", "greedy"], "solvedCount": 511}, {"contestId": 390, "index": "D", "name": "Inna and Sweet Matrix", "type": "PROGRAMMING", "points": 2000.0, "tags": ["constructive algorithms"], "solvedCount": 504}, {"contestId": 388, "index": "B", "name": "Fox and Minimal path", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "graphs", "implementation", "math"], "solvedCount": 2427}, {"contestId": 379, "index": "B", "name": "New Year Present", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7012}, {"contestId": 370, "index": "D", "name": "Broken Monitor", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "greedy", "implementation"], "solvedCount": 603}, {"contestId": 370, "index": "C", "name": "Mittens", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 1497}, {"contestId": 369, "index": "B", "name": "Valera and Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 6256}, {"contestId": 361, "index": "B", "name": "Levko and Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 7851}, {"contestId": 361, "index": "A", "name": "Levko and Table", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "implementation"], "solvedCount": 16111}, {"contestId": 359, "index": "E", "name": "Neatness", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar"], "solvedCount": 456}, {"contestId": 359, "index": "B", "name": "Permutation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 7653}, {"contestId": 359, "index": "A", "name": "Table", "type": "PROGRAMMING", "points": 500.0, "rating": 1000, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 8341}, {"contestId": 358, "index": "C", "name": "Dima and Containers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 1933}, {"contestId": 357, "index": "B", "name": "Flag Day", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "implementation"], "solvedCount": 7994}, {"contestId": 356, "index": "D", "name": "Bags and Coins", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy"], "solvedCount": 924}, {"contestId": 356, "index": "C", "name": "Compartments", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation"], "solvedCount": 1226}, {"contestId": 355, "index": "A", "name": "Vasya and Digital Root", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "implementation"], "solvedCount": 9233}, {"contestId": 354, "index": "E", "name": "Lucky Number Representation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "dp"], "solvedCount": 864}, {"contestId": 353, "index": "D", "name": "Queue", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "dp"], "solvedCount": 2696}, {"contestId": 353, "index": "B", "name": "Two Heaps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation", "math", "sortings"], "solvedCount": 2167}, {"contestId": 350, "index": "E", "name": "Wrong Floyd", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 738}, {"contestId": 347, "index": "A", "name": "Difference Row", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 8735}, {"contestId": 341, "index": "E", "name": "Candies Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 426}, {"contestId": 339, "index": "E", "name": "Three Swaps", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "greedy"], "solvedCount": 534}, {"contestId": 339, "index": "C", "name": "Xenia and Weights", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 8099}, {"contestId": 335, "index": "B", "name": "Palindrome", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "dp"], "solvedCount": 1954}, {"contestId": 335, "index": "A", "name": "Banana", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["binary search", "constructive algorithms", "greedy"], "solvedCount": 2493}, {"contestId": 333, "index": "C", "name": "Lucky Tickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["brute force", "constructive algorithms"], "solvedCount": 372}, {"contestId": 331, "index": "E2", "name": "Deja Vu", "type": "PROGRAMMING", "points": 50.0, "rating": 3100, "tags": ["constructive algorithms", "dp"], "solvedCount": 215}, {"contestId": 331, "index": "E1", "name": "Deja Vu", "type": "PROGRAMMING", "points": 50.0, "rating": 2900, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 161}, {"contestId": 330, "index": "B", "name": "Road Construction", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["constructive algorithms", "graphs"], "solvedCount": 16091}, {"contestId": 329, "index": "D", "name": "The Evil Temple and the Moving Rocks", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 386}, {"contestId": 329, "index": "C", "name": "Graph Reconstruction", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms"], "solvedCount": 873}, {"contestId": 329, "index": "A", "name": "Purification", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 4578}, {"contestId": 327, "index": "E", "name": "Axis Walking", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "dp", "meet-in-the-middle"], "solvedCount": 1324}, {"contestId": 327, "index": "D", "name": "Block Tower", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "graphs"], "solvedCount": 2175}, {"contestId": 323, "index": "B", "name": "Tournament-graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "graphs"], "solvedCount": 358}, {"contestId": 323, "index": "A", "name": "Black-and-White Cube", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "constructive algorithms"], "solvedCount": 711}, {"contestId": 321, "index": "C", "name": "Ciel the Commander", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "greedy", "trees"], "solvedCount": 6633}, {"contestId": 317, "index": "E", "name": "Princess and Her Shadow", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "shortest paths"], "solvedCount": 150}, {"contestId": 317, "index": "C", "name": "Balance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 486}, {"contestId": 316, "index": "F3", "name": "Suns and Rays", "type": "PROGRAMMING", "points": 30.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "implementation"], "solvedCount": 161}, {"contestId": 313, "index": "E", "name": "Ilya and Two Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "dsu", "greedy"], "solvedCount": 537}, {"contestId": 313, "index": "C", "name": "Ilya and Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "greedy", "implementation", "sortings"], "solvedCount": 5504}, {"contestId": 311, "index": "A", "name": "The Closest Pair", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 3985}, {"contestId": 306, "index": "D", "name": "Polygon", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"], "solvedCount": 256}, {"contestId": 305, "index": "A", "name": "Strange Addition", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 4560}, {"contestId": 303, "index": "A", "name": "Lucky Permutation Triple", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 7618}, {"contestId": 301, "index": "C", "name": "Yaroslav and Algorithm", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 458}, {"contestId": 301, "index": "A", "name": "Yaroslav and Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 2983}, {"contestId": 300, "index": "A", "name": "Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 21694}, {"contestId": 297, "index": "D", "name": "Color the Carpet", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 494}, {"contestId": 297, "index": "C", "name": "Splitting the Uniqueness", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms"], "solvedCount": 926}, {"contestId": 297, "index": "B", "name": "Fish Weight", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3424}, {"contestId": 297, "index": "A", "name": "Parity Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms"], "solvedCount": 3569}, {"contestId": 290, "index": "E", "name": "HQ", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "constructive algorithms"], "solvedCount": 190}, {"contestId": 286, "index": "E", "name": "Ladies' Shop", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "fft", "math"], "solvedCount": 812}, {"contestId": 286, "index": "A", "name": "Lucky Permutation", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["constructive algorithms", "math"], "solvedCount": 3088}, {"contestId": 283, "index": "A", "name": "Cows and Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 6439}, {"contestId": 282, "index": "C", "name": "XOR and OR", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 9045}, {"contestId": 277, "index": "B", "name": "Set of Points", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"], "solvedCount": 772}, {"contestId": 275, "index": "B", "name": "Convex Shape", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "implementation"], "solvedCount": 2777}, {"contestId": 272, "index": "E", "name": "Dima and Horses", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["combinatorics", "constructive algorithms", "graphs"], "solvedCount": 1168}, {"contestId": 271, "index": "E", "name": "Three Horses", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 475}, {"contestId": 271, "index": "C", "name": "Secret", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 2893}, {"contestId": 269, "index": "C", "name": "Flawed Flow", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "flows", "graphs", "greedy"], "solvedCount": 1587}, {"contestId": 268, "index": "C", "name": "Beautiful Sets of Points", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "implementation"], "solvedCount": 13197}, {"contestId": 266, "index": "C", "name": "Below the Diagonal", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["constructive algorithms", "greedy", "math"], "solvedCount": 1327}, {"contestId": 266, "index": "B", "name": "Queue at the School", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["constructive algorithms", "graph matchings", "implementation", "shortest paths"], "solvedCount": 125031}, {"contestId": 264, "index": "A", "name": "Escape from Stones", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "data structures", "implementation", "two pointers"], "solvedCount": 10560}, {"contestId": 261, "index": "C", "name": "Maxim and Matrix", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 753}, {"contestId": 260, "index": "D", "name": "Black and White Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1305}, {"contestId": 260, "index": "C", "name": "Balls and Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 2911}, {"contestId": 254, "index": "A", "name": "Cards with Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "sortings"], "solvedCount": 6798}, {"contestId": 246, "index": "C", "name": "Beauty Pageant", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy"], "solvedCount": 2587}, {"contestId": 246, "index": "A", "name": "Buggy Sorting", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 8994}, {"contestId": 245, "index": "D", "name": "Restoring Table", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 2194}, {"contestId": 241, "index": "G", "name": "Challenging Balloons", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 531}, {"contestId": 238, "index": "B", "name": "Boring Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 1258}, {"contestId": 238, "index": "A", "name": "Not Wool Sequences", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "math"], "solvedCount": 2003}, {"contestId": 234, "index": "H", "name": "Merging Two Decks", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 555}, {"contestId": 234, "index": "G", "name": "Practice", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "divide and conquer", "implementation"], "solvedCount": 1443}, {"contestId": 232, "index": "C", "name": "Doe Graphs", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["constructive algorithms", "divide and conquer", "dp", "graphs", "shortest paths"], "solvedCount": 278}, {"contestId": 232, "index": "A", "name": "Cycles", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["binary search", "constructive algorithms", "graphs", "greedy"], "solvedCount": 2412}, {"contestId": 231, "index": "B", "name": "Magic, Wizardry and Wonders", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3542}, {"contestId": 226, "index": "D", "name": "The table", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 942}, {"contestId": 225, "index": "A", "name": "Dice Tower", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 10920}, {"contestId": 220, "index": "B", "name": "Little Elephant and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures"], "solvedCount": 9237}, {"contestId": 218, "index": "A", "name": "Mountain Scenery", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 8773}, {"contestId": 214, "index": "B", "name": "Hometask", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["brute force", "constructive algorithms", "greedy", "math"], "solvedCount": 4856}, {"contestId": 213, "index": "D", "name": "Stars", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "geometry"], "solvedCount": 332}, {"contestId": 209, "index": "C", "name": "Trails and Glades", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["constructive algorithms", "dsu", "graphs", "greedy"], "solvedCount": 678}, {"contestId": 209, "index": "B", "name": "Pixels", "type": "PROGRAMMING", "points": 500.0, "rating": 2100, "tags": ["constructive algorithms", "math"], "solvedCount": 351}, {"contestId": 201, "index": "A", "name": "Clear Symmetry", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "dp", "math"], "solvedCount": 2951}, {"contestId": 199, "index": "A", "name": "Hexadecimal's theorem", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["brute force", "constructive algorithms", "implementation", "number theory"], "solvedCount": 24646}, {"contestId": 198, "index": "D", "name": "Cube Snake", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms"], "solvedCount": 97}, {"contestId": 197, "index": "A", "name": "Plate Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "games", "math"], "solvedCount": 5998}, {"contestId": 196, "index": "C", "name": "Paint Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "divide and conquer", "geometry", "sortings", "trees"], "solvedCount": 737}, {"contestId": 193, "index": "C", "name": "Hamming Distance", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "greedy", "math", "matrices"], "solvedCount": 493}, {"contestId": 193, "index": "A", "name": "Cutting Figure", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 3724}, {"contestId": 183, "index": "A", "name": "Headquarters", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 521}, {"contestId": 180, "index": "F", "name": "Mathematical Analysis Rocks!", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 2439}, {"contestId": 176, "index": "C", "name": "Playing with Superglue", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "constructive algorithms"], "solvedCount": 459}, {"contestId": 173, "index": "D", "name": "Deputies", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms", "graphs", "greedy", "implementation"], "solvedCount": 245}, {"contestId": 171, "index": "A", "name": "Mysterious numbers - 1", "type": "PROGRAMMING", "rating": 1200, "tags": ["*special", "constructive algorithms"], "solvedCount": 4191}, {"contestId": 161, "index": "B", "name": "Discounts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 1917}, {"contestId": 156, "index": "B", "name": "Suspects", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 2168}, {"contestId": 148, "index": "C", "name": "Terse princess", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "greedy"], "solvedCount": 3046}, {"contestId": 148, "index": "A", "name": "Insomnia cure", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 85862}, {"contestId": 145, "index": "B", "name": "Lucky Number 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 2136}, {"contestId": 142, "index": "B", "name": "Help General", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 2121}, {"contestId": 141, "index": "E", "name": "Clearing Up", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "dp", "dsu", "graphs"], "solvedCount": 777}, {"contestId": 141, "index": "C", "name": "Queue", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "sortings"], "solvedCount": 2358}, {"contestId": 135, "index": "C", "name": "Zero-One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "games", "greedy"], "solvedCount": 1311}, {"contestId": 134, "index": "C", "name": "Swaps", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 455}, {"contestId": 132, "index": "D", "name": "Constants in the language of Shakespeare", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dp", "greedy"], "solvedCount": 598}, {"contestId": 128, "index": "D", "name": "Numbers", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1081}, {"contestId": 128, "index": "B", "name": "String", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["brute force", "constructive algorithms", "hashing", "implementation", "string suffix structures", "strings"], "solvedCount": 2437}, {"contestId": 126, "index": "C", "name": "E-reader Display", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 702}, {"contestId": 125, "index": "D", "name": "Two progressions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 388}, {"contestId": 125, "index": "C", "name": "Hobbits' Party", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "greedy"], "solvedCount": 884}, {"contestId": 119, "index": "B", "name": "Before Exam", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "implementation", "sortings"], "solvedCount": 1059}, {"contestId": 118, "index": "B", "name": "Present from Lena", "type": "PROGRAMMING", "points": 1000.0, "rating": 1000, "tags": ["constructive algorithms", "implementation"], "solvedCount": 27998}, {"contestId": 110, "index": "B", "name": "Lucky String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["constructive algorithms", "strings"], "solvedCount": 9877}, {"contestId": 109, "index": "D", "name": "Lucky Sorting", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "sortings"], "solvedCount": 612}, {"contestId": 103, "index": "C", "name": "Russian Roulette", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 928}, {"contestId": 98, "index": "D", "name": "Help Monks", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["constructive algorithms"], "solvedCount": 178}, {"contestId": 97, "index": "B", "name": "Superset", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 795}, {"contestId": 91, "index": "D", "name": "Grocer's Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 259}, {"contestId": 86, "index": "B", "name": "Tetris revisited", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["constructive algorithms", "graph matchings", "greedy", "math"], "solvedCount": 397}, {"contestId": 85, "index": "A", "name": "Domino", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "implementation"], "solvedCount": 1745}, {"contestId": 82, "index": "B", "name": "Sets", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "hashing", "implementation"], "solvedCount": 2007}, {"contestId": 81, "index": "D", "name": "Polycarp's Picture Gallery", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "greedy"], "solvedCount": 626}, {"contestId": 78, "index": "B", "name": "Easter Eggs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "implementation"], "solvedCount": 12552}, {"contestId": 74, "index": "E", "name": "Shift It!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms"], "solvedCount": 136}, {"contestId": 66, "index": "D", "name": "Petya and His Friends", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "math", "number theory"], "solvedCount": 3019}, {"contestId": 63, "index": "D", "name": "Dividing Island", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms"], "solvedCount": 1194}, {"contestId": 59, "index": "D", "name": "Team Arrangement", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "greedy", "implementation"], "solvedCount": 597}, {"contestId": 53, "index": "C", "name": "Little Frog", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["constructive algorithms"], "solvedCount": 6173}, {"contestId": 49, "index": "C", "name": "Disposition", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "math"], "solvedCount": 1632}, {"contestId": 48, "index": "H", "name": "Black and White", "type": "PROGRAMMING", "rating": 2800, "tags": ["constructive algorithms"], "solvedCount": 131}, {"contestId": 45, "index": "J", "name": "Planting Trees", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms"], "solvedCount": 876}, {"contestId": 45, "index": "E", "name": "Director", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 517}, {"contestId": 44, "index": "J", "name": "Triminoes", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "greedy"], "solvedCount": 550}, {"contestId": 43, "index": "D", "name": "Journey", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "implementation"], "solvedCount": 1039}, {"contestId": 42, "index": "D", "name": "Strange town", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["constructive algorithms", "math"], "solvedCount": 381}, {"contestId": 42, "index": "C", "name": "Safe cracking", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["brute force", "constructive algorithms"], "solvedCount": 441}, {"contestId": 41, "index": "E", "name": "3-cycles", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["constructive algorithms", "graphs", "greedy"], "solvedCount": 1877}, {"contestId": 40, "index": "A", "name": "Find Color", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "geometry", "implementation", "math"], "solvedCount": 3826}, {"contestId": 36, "index": "E", "name": "Two Paths", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["constructive algorithms", "dsu", "graphs", "implementation"], "solvedCount": 470}, {"contestId": 30, "index": "E", "name": "Tricky and Clever Password", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "hashing", "strings"], "solvedCount": 663}, {"contestId": 29, "index": "D", "name": "Ant on the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 2266}, {"contestId": 27, "index": "C", "name": "Unordered Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["constructive algorithms", "greedy"], "solvedCount": 2663}, {"contestId": 26, "index": "E", "name": "Multithreading", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms"], "solvedCount": 350}, {"contestId": 26, "index": "C", "name": "Parquet", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["combinatorics", "constructive algorithms", "greedy", "implementation"], "solvedCount": 810}, {"contestId": 23, "index": "C", "name": "Oranges and Apples", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "sortings"], "solvedCount": 1349}, {"contestId": 23, "index": "B", "name": "Party", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "graphs", "math"], "solvedCount": 3171}, {"contestId": 14, "index": "C", "name": "Four Segments", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "constructive algorithms", "geometry", "implementation", "math"], "solvedCount": 3018}, {"contestId": 12, "index": "E", "name": "Start of the session", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms"], "solvedCount": 1149}, {"contestId": 11, "index": "A", "name": "Increasing Sequence", "type": "PROGRAMMING", "rating": 900, "tags": ["constructive algorithms", "implementation", "math"], "solvedCount": 12239}, {"contestId": 10, "index": "E", "name": "Greedy Change", "type": "PROGRAMMING", "rating": 2600, "tags": ["constructive algorithms"], "solvedCount": 788}, {"contestId": 8, "index": "B", "name": "Obsession with Robots", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "graphs", "implementation"], "solvedCount": 3987}, {"contestId": 7, "index": "A", "name": "Kalevitch and Chess", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "constructive algorithms"], "solvedCount": 6746}, {"contestId": 5, "index": "C", "name": "Longest Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings", "strings"], "solvedCount": 12416}, {"contestId": 4, "index": "B", "name": "Before an Exam", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "greedy"], "solvedCount": 23224}]