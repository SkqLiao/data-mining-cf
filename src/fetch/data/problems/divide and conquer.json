[{"contestId": 1940, "index": "C", "name": "Burenka and Pether", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "sortings", "trees"], "solvedCount": 24}, {"contestId": 1936, "index": "E", "name": "Yet Yet Another Permutation Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["divide and conquer", "fft", "math"], "solvedCount": 76}, {"contestId": 1930, "index": "D2", "name": "Sum over all Substrings (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["bitmasks", "divide and conquer", "dp", "dsu", "greedy", "implementation", "strings"], "solvedCount": 2253}, {"contestId": 1922, "index": "E", "name": "Increasing Subsequences", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "math"], "solvedCount": 6794}, {"contestId": 1921, "index": "G", "name": "Mischievous Shooter", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "data structures", "divide and conquer", "dp", "implementation"], "solvedCount": 1056}, {"contestId": 1919, "index": "G", "name": "Tree LGM", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "divide and conquer", "games", "trees"], "solvedCount": 143}, {"contestId": 1918, "index": "E", "name": "ace5 and Task Order", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "divide and conquer", "implementation", "interactive", "probabilities", "sortings"], "solvedCount": 1417}, {"contestId": 1916, "index": "G", "name": "Optimizations From Chelsu", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["divide and conquer", "dp", "number theory", "trees"], "solvedCount": 126}, {"contestId": 1915, "index": "F", "name": "Greetings", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 11001}, {"contestId": 1913, "index": "D", "name": "Array Collapse", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "trees"], "solvedCount": 2566}, {"contestId": 1912, "index": "B", "name": "Blueprint for Seating", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "divide and conquer", "math"], "solvedCount": 851}, {"contestId": 1906, "index": "K", "name": "Deck-Building Game", "type": "PROGRAMMING", "rating": 2500, "tags": ["divide and conquer", "math"], "solvedCount": 247}, {"contestId": 1905, "index": "F", "name": "Field Should Not Be Empty", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["brute force", "data structures", "divide and conquer"], "solvedCount": 426}, {"contestId": 1904, "index": "D2", "name": "Set To Max (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "implementation", "sortings"], "solvedCount": 3615}, {"contestId": 1903, "index": "D2", "name": "Maximum And Queries (hard version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "divide and conquer", "dp", "greedy"], "solvedCount": 676}, {"contestId": 1902, "index": "F", "name": "Trees and XOR Queries Again", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "implementation", "math", "trees"], "solvedCount": 852}, {"contestId": 1898, "index": "F", "name": "Vova Escapes the Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "dfs and similar", "divide and conquer", "shortest paths"], "solvedCount": 715}, {"contestId": 1896, "index": "H1", "name": "Cyclic Hamming (Easy Version)", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["brute force", "divide and conquer", "dp", "fft", "math", "number theory"], "solvedCount": 74}, {"contestId": 1896, "index": "D", "name": "Ones and Twos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "divide and conquer", "math", "two pointers"], "solvedCount": 4963}, {"contestId": 1887, "index": "D", "name": "Split", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["binary search", "data structures", "divide and conquer", "dsu", "math", "trees", "two pointers"], "solvedCount": 782}, {"contestId": 1879, "index": "D", "name": "Sum of XOR Functions", "type": "PROGRAMMING", "rating": 1700, "tags": ["bitmasks", "combinatorics", "divide and conquer", "dp", "math"], "solvedCount": 6354}, {"contestId": 1874, "index": "D", "name": "Jellyfish and Miku", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["divide and conquer", "dp", "math", "probabilities"], "solvedCount": 621}, {"contestId": 1859, "index": "F", "name": "Teleportation in Byteland", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "shortest paths", "trees"], "solvedCount": 355}, {"contestId": 1857, "index": "G", "name": "Counting Graphs", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "divide and conquer", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 3966}, {"contestId": 1856, "index": "D", "name": "More Wrong", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["divide and conquer", "interactive"], "solvedCount": 3028}, {"contestId": 1849, "index": "F", "name": "XOR Partition", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "greedy", "trees"], "solvedCount": 612}, {"contestId": 1849, "index": "E", "name": "Max to the Right of Min", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "two pointers"], "solvedCount": 1464}, {"contestId": 1848, "index": "F", "name": "Vika and Wiki", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["binary search", "bitmasks", "combinatorics", "divide and conquer", "dp", "math"], "solvedCount": 1416}, {"contestId": 1843, "index": "F2", "name": "Omsk Metro (hard version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "math", "trees"], "solvedCount": 1429}, {"contestId": 1842, "index": "I", "name": "Tenzing and Necklace", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["divide and conquer", "dp", "greedy"], "solvedCount": 102}, {"contestId": 1817, "index": "E", "name": "Half-sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["brute force", "divide and conquer", "greedy"], "solvedCount": 241}, {"contestId": 1814, "index": "F", "name": "Communication Towers", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "divide and conquer", "dsu"], "solvedCount": 436}, {"contestId": 1808, "index": "E2", "name": "Minibuses on Venus (medium version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2500, "tags": ["combinatorics", "divide and conquer", "dp", "matrices"], "solvedCount": 625}, {"contestId": 1808, "index": "E1", "name": "Minibuses on Venus (easy version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 1219}, {"contestId": 1804, "index": "F", "name": "Approximate Diameter", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "divide and conquer", "graphs", "shortest paths"], "solvedCount": 837}, {"contestId": 1801, "index": "E", "name": "Gasoline prices", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "hashing", "trees"], "solvedCount": 423}, {"contestId": 1797, "index": "F", "name": "Li Hua and Path", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "trees"], "solvedCount": 321}, {"contestId": 1794, "index": "D", "name": "Counting Factorizations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "divide and conquer", "dp", "math", "number theory"], "solvedCount": 3283}, {"contestId": 1793, "index": "F", "name": "Rebrending", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["brute force", "data structures", "divide and conquer", "implementation"], "solvedCount": 1247}, {"contestId": 1792, "index": "F2", "name": "Graph Coloring (hard version)", "type": "PROGRAMMING", "rating": 2900, "tags": ["brute force", "combinatorics", "divide and conquer", "dp", "fft", "graphs"], "solvedCount": 368}, {"contestId": 1790, "index": "F", "name": "Timofey and Black-White Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dfs and similar", "divide and conquer", "graphs", "greedy", "math", "shortest paths", "trees"], "solvedCount": 3075}, {"contestId": 1787, "index": "I", "name": "Treasure Hunt", "type": "PROGRAMMING", "points": 3750.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "two pointers"], "solvedCount": 145}, {"contestId": 1783, "index": "G", "name": "Weighed Tree Radius", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 400}, {"contestId": 1777, "index": "F", "name": "Comfortably Numb", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "strings", "trees"], "solvedCount": 800}, {"contestId": 1773, "index": "B", "name": "BinCoin", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "divide and conquer", "hashing", "implementation", "probabilities", "trees"], "solvedCount": 716}, {"contestId": 1770, "index": "G", "name": "Koxia and Bracket", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["divide and conquer", "fft", "math"], "solvedCount": 141}, {"contestId": 1766, "index": "E", "name": "Decomposition", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 1113}, {"contestId": 1750, "index": "E", "name": "Bracket Cost", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy", "strings"], "solvedCount": 1325}, {"contestId": 1748, "index": "E", "name": "Yet Another Array Counting Problem", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "flows", "math", "trees"], "solvedCount": 1677}, {"contestId": 1741, "index": "D", "name": "Masha and a Beautiful Tree", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "divide and conquer", "graphs", "sortings", "trees"], "solvedCount": 14187}, {"contestId": 1740, "index": "I", "name": "Arranging Crystal Balls", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "divide and conquer", "dp", "geometry", "graphs", "number theory"], "solvedCount": 98}, {"contestId": 1734, "index": "F", "name": "Zeros and Ones", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["bitmasks", "divide and conquer", "dp", "math"], "solvedCount": 759}, {"contestId": 1730, "index": "E", "name": "Maximums and Minimums", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["combinatorics", "data structures", "divide and conquer", "number theory"], "solvedCount": 596}, {"contestId": 1721, "index": "D", "name": "Maximum AND", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "dfs and similar", "divide and conquer", "greedy", "sortings"], "solvedCount": 6185}, {"contestId": 1716, "index": "E", "name": "Swap and Maximum Block", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "data structures", "dfs and similar", "divide and conquer", "dp"], "solvedCount": 1008}, {"contestId": 1715, "index": "E", "name": "Long Way Home", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "dp", "geometry", "graphs", "greedy", "shortest paths"], "solvedCount": 1578}, {"contestId": 1706, "index": "E", "name": "Qpwoeirut and Vertices", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "trees"], "solvedCount": 2319}, {"contestId": 1696, "index": "D", "name": "Permutation Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "greedy", "shortest paths"], "solvedCount": 5113}, {"contestId": 1693, "index": "D", "name": "Decinc Dividing", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 757}, {"contestId": 1691, "index": "D", "name": "Max GEQ Sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "implementation", "two pointers"], "solvedCount": 5364}, {"contestId": 1684, "index": "H", "name": "Hard Cut", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "math"], "solvedCount": 228}, {"contestId": 1681, "index": "F", "name": "Unique Occurrences", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "solvedCount": 1510}, {"contestId": 1680, "index": "F", "name": "Lenient Vertex Cover", "type": "PROGRAMMING", "rating": 2600, "tags": ["dfs and similar", "divide and conquer", "dsu", "graphs", "trees"], "solvedCount": 611}, {"contestId": 1676, "index": "H2", "name": "Maximum Crossings (Hard Version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 9852}, {"contestId": 1673, "index": "F", "name": "Anti-Theft Road Planning", "type": "PROGRAMMING", "points": 3250.0, "rating": 2400, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "greedy", "interactive", "math"], "solvedCount": 762}, {"contestId": 1671, "index": "E", "name": "Preorder", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "divide and conquer", "dp", "dsu", "hashing", "sortings", "trees"], "solvedCount": 2617}, {"contestId": 1665, "index": "E", "name": "MinimizOR", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "brute force", "data structures", "divide and conquer", "greedy", "implementation", "two pointers"], "solvedCount": 1398}, {"contestId": 1663, "index": "B", "name": "Mike's Sequence", "type": "PROGRAMMING", "tags": ["*special", "divide and conquer", "implementation", "math"], "solvedCount": 3281}, {"contestId": 1654, "index": "H", "name": "Three Minimums", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["combinatorics", "constructive algorithms", "divide and conquer", "dp", "fft", "math"], "solvedCount": 68}, {"contestId": 1654, "index": "F", "name": "Minimal String Xoration", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "data structures", "divide and conquer", "greedy", "hashing", "sortings", "strings"], "solvedCount": 1022}, {"contestId": 1648, "index": "E", "name": "Air Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "implementation", "trees"], "solvedCount": 379}, {"contestId": 1648, "index": "D", "name": "Serious Business", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "dp", "implementation", "shortest paths"], "solvedCount": 761}, {"contestId": 1641, "index": "E", "name": "Special Positions", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["combinatorics", "divide and conquer", "fft", "math"], "solvedCount": 199}, {"contestId": 1633, "index": "F", "name": "Perfect Matching", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "divide and conquer", "interactive", "trees"], "solvedCount": 300}, {"contestId": 1625, "index": "E1", "name": "Cats on the Upgrade (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "dfs and similar", "divide and conquer", "dp", "graphs", "trees"], "solvedCount": 969}, {"contestId": 1619, "index": "H", "name": "Permutation and Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "data structures", "divide and conquer", "two pointers"], "solvedCount": 1045}, {"contestId": 1616, "index": "H", "name": "Keep XOR Low", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["bitmasks", "combinatorics", "data structures", "divide and conquer", "dp", "math"], "solvedCount": 749}, {"contestId": 1615, "index": "H", "name": "Reindeer Games", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "flows", "graphs", "shortest paths"], "solvedCount": 304}, {"contestId": 1613, "index": "F", "name": "Tree Coloring", "type": "PROGRAMMING", "rating": 2600, "tags": ["combinatorics", "divide and conquer", "fft"], "solvedCount": 630}, {"contestId": 1609, "index": "F", "name": "Interesting Sections", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "meet-in-the-middle", "two pointers"], "solvedCount": 716}, {"contestId": 1603, "index": "D", "name": "Artistic Partition", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["divide and conquer", "dp", "number theory"], "solvedCount": 598}, {"contestId": 1601, "index": "C", "name": "Optimal Insertion", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "divide and conquer", "dp", "greedy", "sortings"], "solvedCount": 1898}, {"contestId": 1583, "index": "H", "name": "Omkar and Tours", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "divide and conquer", "sortings", "trees"], "solvedCount": 306}, {"contestId": 1583, "index": "F", "name": "Defender of Childhood Dreams", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "divide and conquer"], "solvedCount": 1207}, {"contestId": 1580, "index": "D", "name": "Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "divide and conquer", "dp", "greedy", "trees"], "solvedCount": 745}, {"contestId": 1575, "index": "L", "name": "Longest Array Deconstruction", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "sortings"], "solvedCount": 1211}, {"contestId": 1567, "index": "E", "name": "Non-Decreasing Dilemma", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "math"], "solvedCount": 3475}, {"contestId": 1553, "index": "I", "name": "Stairs", "type": "PROGRAMMING", "points": 5250.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"], "solvedCount": 185}, {"contestId": 1553, "index": "H", "name": "XOR and Distance", "type": "PROGRAMMING", "points": 3750.0, "rating": 2900, "tags": ["bitmasks", "divide and conquer", "trees"], "solvedCount": 660}, {"contestId": 1550, "index": "F", "name": "Jumping Around", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "graphs", "shortest paths"], "solvedCount": 619}, {"contestId": 1548, "index": "E", "name": "Gregor and the Two Painters", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "graphs", "greedy", "math"], "solvedCount": 333}, {"contestId": 1548, "index": "B", "name": "Integers Have Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "data structures", "divide and conquer", "math", "number theory", "two pointers"], "solvedCount": 9172}, {"contestId": 1547, "index": "F", "name": "Array Stabilization (GCD version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "number theory", "two pointers"], "solvedCount": 5419}, {"contestId": 1543, "index": "E", "name": "The Final Pursuit", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "graphs", "greedy", "math"], "solvedCount": 390}, {"contestId": 1528, "index": "A", "name": "Parsa's Humongous Tree", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["dfs and similar", "divide and conquer", "dp", "greedy", "trees"], "solvedCount": 13640}, {"contestId": 1527, "index": "E", "name": "Partition Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "data structures", "divide and conquer", "dp"], "solvedCount": 2050}, {"contestId": 1523, "index": "G", "name": "Try Booking", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["data structures", "divide and conquer"], "solvedCount": 397}, {"contestId": 1503, "index": "F", "name": "Balance the Cards", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation"], "solvedCount": 124}, {"contestId": 1494, "index": "D", "name": "Dogeforces", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "sortings", "trees"], "solvedCount": 2473}, {"contestId": 1491, "index": "E", "name": "Fib-tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "dfs and similar", "divide and conquer", "number theory", "trees"], "solvedCount": 2007}, {"contestId": 1490, "index": "D", "name": "Permutation Transformation", "type": "PROGRAMMING", "rating": 1200, "tags": ["dfs and similar", "divide and conquer", "implementation"], "solvedCount": 18650}, {"contestId": 1482, "index": "E", "name": "Skyline Photo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 2896}, {"contestId": 1470, "index": "F", "name": "Strange Covering", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["divide and conquer"], "solvedCount": 110}, {"contestId": 1466, "index": "G", "name": "Song of the Sirens", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "divide and conquer", "hashing", "math", "string suffix structures", "strings"], "solvedCount": 837}, {"contestId": 1461, "index": "D", "name": "Divide and Summarize", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation", "sortings"], "solvedCount": 8818}, {"contestId": 1446, "index": "C", "name": "Xor Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "dp", "trees"], "solvedCount": 3362}, {"contestId": 1442, "index": "D", "name": "Sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 1896}, {"contestId": 1439, "index": "C", "name": "Greedy Shopping", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["binary search", "data structures", "divide and conquer", "greedy", "implementation"], "solvedCount": 1658}, {"contestId": 1438, "index": "E", "name": "Yurii Can Do Everything", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["binary search", "bitmasks", "brute force", "constructive algorithms", "divide and conquer", "two pointers"], "solvedCount": 1282}, {"contestId": 1428, "index": "F", "name": "Fruit Sequences", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 2147}, {"contestId": 1425, "index": "B", "name": "Blue and Red of Our Faculty!", "type": "PROGRAMMING", "rating": 2600, "tags": ["divide and conquer", "dp"], "solvedCount": 271}, {"contestId": 1423, "index": "H", "name": "Virus", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "dsu", "graphs"], "solvedCount": 493}, {"contestId": 1423, "index": "C", "name": "Du\u0161an's Railway", "type": "PROGRAMMING", "rating": 3500, "tags": ["divide and conquer", "graphs", "trees"], "solvedCount": 121}, {"contestId": 1420, "index": "C2", "name": "Pok\u00e9mon Army (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "greedy", "implementation"], "solvedCount": 4466}, {"contestId": 1418, "index": "G", "name": "Three Occurrences", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "hashing", "two pointers"], "solvedCount": 1414}, {"contestId": 1416, "index": "C", "name": "XOR Inverse", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "divide and conquer", "dp", "greedy", "math", "sortings", "strings", "trees"], "solvedCount": 4131}, {"contestId": 1408, "index": "F", "name": "Two Different", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 2244}, {"contestId": 1400, "index": "E", "name": "Clear the Multiset", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 4964}, {"contestId": 1386, "index": "C", "name": "Joker", "type": "PROGRAMMING", "rating": 2800, "tags": ["*special", "bitmasks", "data structures", "divide and conquer", "dsu"], "solvedCount": 421}, {"contestId": 1385, "index": "D", "name": "a-Good String", "type": "PROGRAMMING", "rating": 1500, "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "implementation"], "solvedCount": 18162}, {"contestId": 1379, "index": "F2", "name": "Chess Strikes Back (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 454}, {"contestId": 1379, "index": "E", "name": "Inverse Genealogy", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "divide and conquer", "dp", "math", "trees"], "solvedCount": 383}, {"contestId": 1375, "index": "H", "name": "Set Merging", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 382}, {"contestId": 1373, "index": "G", "name": "Pawns", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "greedy"], "solvedCount": 748}, {"contestId": 1373, "index": "D", "name": "Maximum Sum on Even Positions", "type": "PROGRAMMING", "rating": 1600, "tags": ["divide and conquer", "dp", "greedy", "implementation"], "solvedCount": 14805}, {"contestId": 1372, "index": "F", "name": "Omkar and Modes", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["binary search", "divide and conquer", "interactive"], "solvedCount": 419}, {"contestId": 1371, "index": "F", "name": "Raging Thunder", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation"], "solvedCount": 498}, {"contestId": 1364, "index": "E", "name": "X-OR", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["bitmasks", "constructive algorithms", "divide and conquer", "interactive", "probabilities"], "solvedCount": 1089}, {"contestId": 1338, "index": "C", "name": "Perfect Triples", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["bitmasks", "brute force", "constructive algorithms", "divide and conquer", "math"], "solvedCount": 2939}, {"contestId": 1336, "index": "F", "name": "Journey", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "graphs", "trees"], "solvedCount": 187}, {"contestId": 1316, "index": "F", "name": "Battalion Strength", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "probabilities"], "solvedCount": 503}, {"contestId": 1311, "index": "F", "name": "Moving Points", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "implementation", "sortings"], "solvedCount": 3849}, {"contestId": 1303, "index": "G", "name": "Sum of Prefix Sums", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "geometry", "trees"], "solvedCount": 699}, {"contestId": 1295, "index": "E", "name": "Permutation Separation", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer"], "solvedCount": 2278}, {"contestId": 1285, "index": "D", "name": "Dr. Evil Underscores", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dfs and similar", "divide and conquer", "dp", "greedy", "strings", "trees"], "solvedCount": 7225}, {"contestId": 1278, "index": "E", "name": "Tests for problem D", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "trees"], "solvedCount": 1685}, {"contestId": 1268, "index": "D", "name": "Invertation in Tournament", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["brute force", "divide and conquer", "graphs", "math"], "solvedCount": 478}, {"contestId": 1261, "index": "F", "name": "Xor-Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["bitmasks", "divide and conquer", "math"], "solvedCount": 367}, {"contestId": 1257, "index": "G", "name": "Divisor Set", "type": "PROGRAMMING", "rating": 2600, "tags": ["divide and conquer", "fft", "greedy", "math", "number theory"], "solvedCount": 558}, {"contestId": 1250, "index": "M", "name": "SmartGarden", "type": "PROGRAMMING", "rating": 2500, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 350}, {"contestId": 1237, "index": "C2", "name": "Balanced Removals (Harder)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "divide and conquer", "greedy", "implementation", "sortings"], "solvedCount": 4114}, {"contestId": 1223, "index": "F", "name": "Stack Exterminable Arrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "hashing"], "solvedCount": 1922}, {"contestId": 1218, "index": "E", "name": "Product Tuples", "type": "PROGRAMMING", "rating": 2500, "tags": ["divide and conquer", "fft"], "solvedCount": 351}, {"contestId": 1218, "index": "D", "name": "Xor Spanning Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "fft", "graphs"], "solvedCount": 307}, {"contestId": 1217, "index": "F", "name": "Forced Online Queries Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu", "graphs", "trees"], "solvedCount": 534}, {"contestId": 1213, "index": "G", "name": "Path Queries", "type": "PROGRAMMING", "rating": 1800, "tags": ["divide and conquer", "dsu", "graphs", "sortings", "trees"], "solvedCount": 6526}, {"contestId": 1192, "index": "B", "name": "Dynamic Diameter", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "trees"], "solvedCount": 980}, {"contestId": 1190, "index": "D", "name": "Tokitsukaze and Strange Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "divide and conquer", "sortings", "two pointers"], "solvedCount": 2203}, {"contestId": 1186, "index": "E", "name": "Vus the Cossack and a Field", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "implementation", "math"], "solvedCount": 552}, {"contestId": 1181, "index": "E1", "name": "A Story of One Country (Easy)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "divide and conquer", "sortings"], "solvedCount": 445}, {"contestId": 1179, "index": "E", "name": "Alesya and Discrete Math", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["divide and conquer", "interactive"], "solvedCount": 165}, {"contestId": 1177, "index": "B", "name": "Digits Sequence (Hard Edition)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "divide and conquer", "implementation"], "solvedCount": 2382}, {"contestId": 1175, "index": "G", "name": "Yet Another Partiton Problem", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "divide and conquer", "dp", "geometry", "two pointers"], "solvedCount": 410}, {"contestId": 1175, "index": "F", "name": "The Number of Subpermutations", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "divide and conquer", "hashing", "math"], "solvedCount": 1505}, {"contestId": 1175, "index": "E", "name": "Minimal Segment Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"], "solvedCount": 3130}, {"contestId": 1174, "index": "F", "name": "Ehab and the Big Finale", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "divide and conquer", "graphs", "implementation", "interactive", "trees"], "solvedCount": 1426}, {"contestId": 1167, "index": "B", "name": "Lost Numbers", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "divide and conquer", "interactive", "math"], "solvedCount": 10266}, {"contestId": 1156, "index": "E", "name": "Special Segments of Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer", "dsu", "two pointers"], "solvedCount": 2721}, {"contestId": 1156, "index": "D", "name": "0-1-Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "solvedCount": 3492}, {"contestId": 1155, "index": "D", "name": "Beautiful Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 6615}, {"contestId": 1146, "index": "E", "name": "Hot is Cold", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "implementation"], "solvedCount": 818}, {"contestId": 1140, "index": "G", "name": "Double Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "shortest paths", "trees"], "solvedCount": 434}, {"contestId": 1140, "index": "F", "name": "Extending Set of Points", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu"], "solvedCount": 1099}, {"contestId": 1140, "index": "E", "name": "Palindrome-less Arrays", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 1875}, {"contestId": 1139, "index": "F", "name": "Dish Shopping", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer"], "solvedCount": 362}, {"contestId": 1114, "index": "F", "name": "Please, another Queries on Array?", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "math", "number theory"], "solvedCount": 1786}, {"contestId": 1111, "index": "C", "name": "Creative Snap", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "divide and conquer", "math"], "solvedCount": 6054}, {"contestId": 1100, "index": "F", "name": "Ivan and Burgers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "greedy", "math"], "solvedCount": 2028}, {"contestId": 1096, "index": "G", "name": "Lucky Tickets", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "fft"], "solvedCount": 1355}, {"contestId": 1070, "index": "M", "name": "Algoland and Berland", "type": "PROGRAMMING", "rating": 3000, "tags": ["constructive algorithms", "divide and conquer", "geometry"], "solvedCount": 63}, {"contestId": 1043, "index": "G", "name": "Speckled Band", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "hashing", "string suffix structures", "strings"], "solvedCount": 212}, {"contestId": 1042, "index": "D", "name": "Petya and Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "divide and conquer", "two pointers"], "solvedCount": 5636}, {"contestId": 1041, "index": "F", "name": "Ray in the tube", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math"], "solvedCount": 1433}, {"contestId": 1019, "index": "E", "name": "Raining season", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 315}, {"contestId": 1004, "index": "F", "name": "Sonya and Bitwise OR", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "data structures", "divide and conquer"], "solvedCount": 677}, {"contestId": 1000, "index": "F", "name": "One Occurrence", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "divide and conquer"], "solvedCount": 3435}, {"contestId": 997, "index": "D", "name": "Cycles in product", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "divide and conquer", "trees"], "solvedCount": 422}, {"contestId": 995, "index": "E", "name": "Number Clicker", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["divide and conquer", "graphs", "meet-in-the-middle", "number theory"], "solvedCount": 602}, {"contestId": 990, "index": "G", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "dsu", "number theory", "trees"], "solvedCount": 1684}, {"contestId": 981, "index": "E", "name": "Addition on Segments", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "data structures", "divide and conquer", "dp"], "solvedCount": 1976}, {"contestId": 960, "index": "E", "name": "Alternating Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "divide and conquer", "dp", "probabilities", "trees"], "solvedCount": 1789}, {"contestId": 936, "index": "E", "name": "Iqea", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "shortest paths", "trees"], "solvedCount": 177}, {"contestId": 914, "index": "G", "name": "Sum the Fibonacci", "type": "PROGRAMMING", "points": 3500.0, "rating": 2600, "tags": ["bitmasks", "divide and conquer", "dp", "fft", "math"], "solvedCount": 886}, {"contestId": 914, "index": "E", "name": "Palindromes in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "trees"], "solvedCount": 1352}, {"contestId": 888, "index": "E", "name": "Maximum Subsequence", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "divide and conquer", "meet-in-the-middle"], "solvedCount": 6475}, {"contestId": 875, "index": "D", "name": "High Cry", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "combinatorics", "data structures", "divide and conquer"], "solvedCount": 1959}, {"contestId": 873, "index": "D", "name": "Merge Sort", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 2977}, {"contestId": 868, "index": "F", "name": "Yet Another Minimization Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "dp"], "solvedCount": 3345}, {"contestId": 865, "index": "F", "name": "Egg Roulette", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["bitmasks", "brute force", "divide and conquer", "math", "meet-in-the-middle"], "solvedCount": 66}, {"contestId": 862, "index": "D", "name": "Mahmoud and Ehab and the binary string", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["binary search", "divide and conquer", "interactive"], "solvedCount": 1641}, {"contestId": 850, "index": "E", "name": "Random Elections", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["bitmasks", "brute force", "divide and conquer", "fft", "math"], "solvedCount": 375}, {"contestId": 848, "index": "E", "name": "Days of Floral Colours", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math"], "solvedCount": 197}, {"contestId": 848, "index": "C", "name": "Goodbye Souvenir", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["data structures", "divide and conquer"], "solvedCount": 1231}, {"contestId": 842, "index": "E", "name": "Nikita and game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "dfs and similar", "divide and conquer", "graphs", "trees"], "solvedCount": 392}, {"contestId": 833, "index": "D", "name": "Red-Black Cobweb", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 361}, {"contestId": 833, "index": "B", "name": "The Bakery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 4398}, {"contestId": 817, "index": "D", "name": "Imbalanced Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "dsu", "sortings"], "solvedCount": 4347}, {"contestId": 809, "index": "E", "name": "Surprise me!", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["divide and conquer", "math", "number theory", "trees"], "solvedCount": 706}, {"contestId": 809, "index": "C", "name": "Find a car", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 722}, {"contestId": 793, "index": "G", "name": "Oleg and chess", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "flows", "graph matchings"], "solvedCount": 304}, {"contestId": 793, "index": "F", "name": "Julia the snail", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 498}, {"contestId": 788, "index": "D", "name": "Finding lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["constructive algorithms", "divide and conquer", "interactive"], "solvedCount": 355}, {"contestId": 786, "index": "C", "name": "Till I Collapse", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "divide and conquer"], "solvedCount": 2490}, {"contestId": 776, "index": "F", "name": "Sherlock's bet to Moriarty", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation", "trees"], "solvedCount": 406}, {"contestId": 773, "index": "F", "name": "Test Data Generation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"], "solvedCount": 177}, {"contestId": 772, "index": "E", "name": "Verifying Kingdom", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["binary search", "divide and conquer", "interactive", "trees"], "solvedCount": 121}, {"contestId": 768, "index": "B", "name": "Code For 1", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer"], "solvedCount": 5784}, {"contestId": 763, "index": "E", "name": "Timofey and our friends animals", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "dsu"], "solvedCount": 471}, {"contestId": 757, "index": "G", "name": "Can Bash Save the Day?", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "graphs", "trees"], "solvedCount": 469}, {"contestId": 755, "index": "G", "name": "PolandBall and Many Other Balls", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["combinatorics", "divide and conquer", "dp", "fft", "math", "number theory"], "solvedCount": 832}, {"contestId": 750, "index": "E", "name": "New Year and Old Subsequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "matrices"], "solvedCount": 1459}, {"contestId": 744, "index": "B", "name": "Hongcow's Game", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["bitmasks", "divide and conquer", "interactive"], "solvedCount": 1704}, {"contestId": 715, "index": "C", "name": "Digit Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["dfs and similar", "divide and conquer", "dsu", "trees"], "solvedCount": 1859}, {"contestId": 685, "index": "E", "name": "Travelling Through the Snow Queen's Kingdom", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "brute force", "divide and conquer", "graphs"], "solvedCount": 501}, {"contestId": 678, "index": "F", "name": "Lena and Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "geometry"], "solvedCount": 821}, {"contestId": 665, "index": "E", "name": "Beautiful Subarrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "strings", "trees"], "solvedCount": 2819}, {"contestId": 662, "index": "C", "name": "Binary Table", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["bitmasks", "brute force", "divide and conquer", "dp", "fft", "math"], "solvedCount": 1907}, {"contestId": 660, "index": "F", "name": "Bear and Bowling 4", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "divide and conquer", "geometry", "ternary search"], "solvedCount": 1478}, {"contestId": 632, "index": "F", "name": "Magic Matrix", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "divide and conquer", "graphs", "matrices", "trees"], "solvedCount": 1005}, {"contestId": 632, "index": "E", "name": "Thief in a Shop", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "fft", "math"], "solvedCount": 2508}, {"contestId": 627, "index": "C", "name": "Package Delivery", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "greedy"], "solvedCount": 1139}, {"contestId": 613, "index": "D", "name": "Kingdom and its Cities", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dfs and similar", "divide and conquer", "dp", "graphs", "sortings", "trees"], "solvedCount": 2594}, {"contestId": 603, "index": "E", "name": "Pastoral Oddities", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "math", "trees"], "solvedCount": 1143}, {"contestId": 576, "index": "C", "name": "Points on Plane", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "divide and conquer", "geometry", "greedy", "sortings"], "solvedCount": 3191}, {"contestId": 573, "index": "D", "name": "Bear and Cavalry", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 441}, {"contestId": 566, "index": "C", "name": "Logistical Questions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "divide and conquer", "trees"], "solvedCount": 687}, {"contestId": 559, "index": "B", "name": "Equivalent Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["divide and conquer", "hashing", "sortings", "strings"], "solvedCount": 10286}, {"contestId": 549, "index": "F", "name": "Yura and Developers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 846}, {"contestId": 536, "index": "E", "name": "Tavas on the Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 366}, {"contestId": 526, "index": "F", "name": "Pudding Monsters", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer"], "solvedCount": 2238}, {"contestId": 513, "index": "B2", "name": "Permutations", "type": "PROGRAMMING", "points": 4.0, "rating": 1800, "tags": ["bitmasks", "divide and conquer", "math"], "solvedCount": 2559}, {"contestId": 512, "index": "E", "name": "Fox And Polygon", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 498}, {"contestId": 500, "index": "F", "name": "New Year Shopping", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["divide and conquer", "dp"], "solvedCount": 683}, {"contestId": 480, "index": "E", "name": "Parking Lot", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 498}, {"contestId": 459, "index": "D", "name": "Pashmak and Parmida's problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 9399}, {"contestId": 452, "index": "F", "name": "Permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "hashing"], "solvedCount": 1312}, {"contestId": 448, "index": "C", "name": "Painting Fence", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["divide and conquer", "dp", "greedy"], "solvedCount": 7713}, {"contestId": 440, "index": "C", "name": "One-Based Arithmetic", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["brute force", "dfs and similar", "divide and conquer"], "solvedCount": 882}, {"contestId": 438, "index": "E", "name": "The Child and Binary Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["combinatorics", "divide and conquer", "fft", "number theory"], "solvedCount": 1746}, {"contestId": 434, "index": "E", "name": "Furukawa Nagisa's Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "divide and conquer", "sortings", "trees"], "solvedCount": 252}, {"contestId": 429, "index": "D", "name": "Tricky Function", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "geometry"], "solvedCount": 2556}, {"contestId": 414, "index": "C", "name": "Mashmokh and Reverse Operation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["combinatorics", "divide and conquer"], "solvedCount": 2161}, {"contestId": 413, "index": "E", "name": "Maze 2D", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "divide and conquer"], "solvedCount": 660}, {"contestId": 383, "index": "E", "name": "Vowels", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 2665}, {"contestId": 379, "index": "F", "name": "New Year Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 2092}, {"contestId": 372, "index": "B", "name": "Counting Rectangles is Fun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["brute force", "divide and conquer", "dp"], "solvedCount": 2498}, {"contestId": 364, "index": "E", "name": "Empty Rectangles", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["divide and conquer", "two pointers"], "solvedCount": 516}, {"contestId": 343, "index": "E", "name": "Pumping Stations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dfs and similar", "divide and conquer", "flows", "graphs", "greedy", "trees"], "solvedCount": 665}, {"contestId": 342, "index": "E", "name": "Xenia and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 7467}, {"contestId": 337, "index": "D", "name": "Book of Evil", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "divide and conquer", "dp", "trees"], "solvedCount": 5733}, {"contestId": 321, "index": "E", "name": "Ciel and Gondolas", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 4426}, {"contestId": 321, "index": "C", "name": "Ciel the Commander", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "greedy", "trees"], "solvedCount": 6633}, {"contestId": 293, "index": "E", "name": "Close Vertices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 1247}, {"contestId": 234, "index": "G", "name": "Practice", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "divide and conquer", "implementation"], "solvedCount": 1443}, {"contestId": 232, "index": "E", "name": "Quick Tortoise", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["bitmasks", "divide and conquer", "dp"], "solvedCount": 660}, {"contestId": 232, "index": "C", "name": "Doe Graphs", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["constructive algorithms", "divide and conquer", "dp", "graphs", "shortest paths"], "solvedCount": 278}, {"contestId": 217, "index": "C", "name": "Formurosa", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["divide and conquer", "dp", "expression parsing"], "solvedCount": 310}, {"contestId": 196, "index": "C", "name": "Paint Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "divide and conquer", "geometry", "sortings", "trees"], "solvedCount": 737}, {"contestId": 167, "index": "D", "name": "Wizards and Roads", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "graph matchings", "graphs", "greedy"], "solvedCount": 188}, {"contestId": 161, "index": "C", "name": "Abracadabra", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["divide and conquer"], "solvedCount": 636}, {"contestId": 150, "index": "E", "name": "Freezing with Style", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "divide and conquer", "trees"], "solvedCount": 770}, {"contestId": 120, "index": "J", "name": "Minimum Sum", "type": "PROGRAMMING", "rating": 1900, "tags": ["divide and conquer", "geometry", "sortings"], "solvedCount": 903}, {"contestId": 117, "index": "E", "name": "Tree or not Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 303}, {"contestId": 117, "index": "D", "name": "Not Quick Transformation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["divide and conquer", "math"], "solvedCount": 329}, {"contestId": 101, "index": "E", "name": "Candies and Stones", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["divide and conquer", "dp"], "solvedCount": 474}, {"contestId": 97, "index": "B", "name": "Superset", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "divide and conquer"], "solvedCount": 795}, {"contestId": 68, "index": "D", "name": "Half-decay tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math", "probabilities"], "solvedCount": 442}, {"contestId": 19, "index": "E", "name": "Fairy", "type": "PROGRAMMING", "rating": 2900, "tags": ["dfs and similar", "divide and conquer", "dsu"], "solvedCount": 1576}, {"contestId": 9, "index": "D", "name": "How many trees?", "type": "PROGRAMMING", "rating": 1900, "tags": ["combinatorics", "divide and conquer", "dp"], "solvedCount": 3633}]