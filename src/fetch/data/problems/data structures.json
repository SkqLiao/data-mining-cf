[{"contestId": 1946, "index": "F", "name": "Nobody is needed", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["brute force", "data structures", "dp", "math"], "solvedCount": 511}, {"contestId": 1945, "index": "H", "name": "GCD is Greater", "type": "PROGRAMMING", "rating": 2600, "tags": ["brute force", "data structures", "math", "number theory"], "solvedCount": 360}, {"contestId": 1945, "index": "G", "name": "Cook and Porridge", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures", "implementation"], "solvedCount": 479}, {"contestId": 1945, "index": "F", "name": "Kirill and Mushrooms", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "sortings"], "solvedCount": 2857}, {"contestId": 1941, "index": "E", "name": "Rudolf and k Bridges", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures", "dp", "two pointers"], "solvedCount": 7274}, {"contestId": 1940, "index": "D", "name": "Almost Certainly", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "data structures", "sortings"], "solvedCount": 109}, {"contestId": 1940, "index": "C", "name": "Burenka and Pether", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "sortings", "trees"], "solvedCount": 24}, {"contestId": 1936, "index": "D", "name": "Bitwise Paradox", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["binary search", "bitmasks", "data structures", "greedy", "two pointers"], "solvedCount": 355}, {"contestId": 1936, "index": "C", "name": "Pok\u00e9mon Arena", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "graphs", "greedy", "implementation", "shortest paths", "sortings"], "solvedCount": 942}, {"contestId": 1936, "index": "B", "name": "Pinball", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["binary search", "data structures", "implementation", "math", "two pointers"], "solvedCount": 2168}, {"contestId": 1935, "index": "F", "name": "Andrey's Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "dfs and similar", "dsu", "greedy", "implementation", "trees"], "solvedCount": 311}, {"contestId": 1935, "index": "E", "name": "Distance Learning Courses in MAC", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "brute force", "data structures", "greedy", "math"], "solvedCount": 1011}, {"contestId": 1935, "index": "C", "name": "Messenger in MAC", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp", "greedy", "sortings"], "solvedCount": 6506}, {"contestId": 1932, "index": "F", "name": "Feed Cats", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp", "sortings"], "solvedCount": 2986}, {"contestId": 1932, "index": "C", "name": "LR-remainders", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "data structures", "implementation", "math", "two pointers"], "solvedCount": 12672}, {"contestId": 1930, "index": "G", "name": "Prefix Max Set Counting", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "dp", "trees"], "solvedCount": 193}, {"contestId": 1930, "index": "C", "name": "Lexicographically Largest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 6087}, {"contestId": 1929, "index": "F", "name": "Sasha and the Wedding Binary Search Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "math", "trees"], "solvedCount": 1535}, {"contestId": 1928, "index": "F", "name": "Digital Patterns", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["combinatorics", "data structures", "implementation", "math"], "solvedCount": 195}, {"contestId": 1928, "index": "D", "name": "Lonely Mountain Dungeons", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "greedy", "math", "ternary search"], "solvedCount": 3534}, {"contestId": 1927, "index": "G", "name": "Paint Charges", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 1409}, {"contestId": 1927, "index": "F", "name": "Microcycle", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "sortings", "trees"], "solvedCount": 3529}, {"contestId": 1927, "index": "D", "name": "Find the Different Ones!", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "two pointers"], "solvedCount": 17419}, {"contestId": 1926, "index": "E", "name": "Vlad and an Odd Ordering", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "bitmasks", "data structures", "dp", "implementation", "math", "number theory"], "solvedCount": 9168}, {"contestId": 1924, "index": "B", "name": "Space Harbour", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["data structures", "implementation", "math", "sortings"], "solvedCount": 2174}, {"contestId": 1923, "index": "E", "name": "Count Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "solvedCount": 2873}, {"contestId": 1923, "index": "D", "name": "Slimes", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 5439}, {"contestId": 1922, "index": "D", "name": "Berserk Monsters", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "dsu", "implementation", "math"], "solvedCount": 4986}, {"contestId": 1921, "index": "G", "name": "Mischievous Shooter", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "data structures", "divide and conquer", "dp", "implementation"], "solvedCount": 1056}, {"contestId": 1921, "index": "F", "name": "Sum of Progression", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "dp", "implementation", "math"], "solvedCount": 3283}, {"contestId": 1921, "index": "D", "name": "Very Different Array", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy", "sortings", "two pointers"], "solvedCount": 19442}, {"contestId": 1920, "index": "F2", "name": "Smooth Sailing (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "data structures", "dsu", "geometry", "graphs", "trees"], "solvedCount": 381}, {"contestId": 1920, "index": "F1", "name": "Smooth Sailing (Easy Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "shortest paths"], "solvedCount": 845}, {"contestId": 1919, "index": "F2", "name": "Wine Factory (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "dp", "flows", "greedy", "matrices"], "solvedCount": 708}, {"contestId": 1919, "index": "F1", "name": "Wine Factory (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "greedy"], "solvedCount": 1956}, {"contestId": 1919, "index": "D", "name": "01 Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "sortings", "trees"], "solvedCount": 3503}, {"contestId": 1919, "index": "C", "name": "Grouping Increases", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["data structures", "dp", "greedy"], "solvedCount": 16262}, {"contestId": 1918, "index": "D", "name": "Blocking Elements", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation", "two pointers"], "solvedCount": 4048}, {"contestId": 1918, "index": "B", "name": "Minimize Inversions", "type": "PROGRAMMING", "points": 1000.0, "rating": 900, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 21506}, {"contestId": 1917, "index": "D", "name": "Yet Another Inversions Problem", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dp", "implementation", "math", "number theory"], "solvedCount": 1597}, {"contestId": 1917, "index": "B", "name": "Erase First or Second Letter", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "combinatorics", "data structures", "dp", "strings"], "solvedCount": 18592}, {"contestId": 1916, "index": "E", "name": "Happy Life in University", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 2036}, {"contestId": 1915, "index": "F", "name": "Greetings", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 11001}, {"contestId": 1915, "index": "E", "name": "Romantic Glasses", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "greedy", "math"], "solvedCount": 17633}, {"contestId": 1914, "index": "G2", "name": "Light Bulbs (Hard Version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "graphs", "hashing"], "solvedCount": 1153}, {"contestId": 1913, "index": "F", "name": "Palindromic Problem", "type": "PROGRAMMING", "rating": 2800, "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "solvedCount": 265}, {"contestId": 1913, "index": "D", "name": "Array Collapse", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "trees"], "solvedCount": 2566}, {"contestId": 1912, "index": "G", "name": "Great City Saint Petersburg", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 387}, {"contestId": 1912, "index": "A", "name": "Accumulator Apex", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 1707}, {"contestId": 1910, "index": "H", "name": "Sum of Digits of Sums", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special", "binary search", "data structures"], "solvedCount": 75}, {"contestId": 1909, "index": "H", "name": "Parallel Swaps Sort", "type": "PROGRAMMING", "points": 6000.0, "rating": 3500, "tags": ["constructive algorithms", "data structures"], "solvedCount": 54}, {"contestId": 1909, "index": "C", "name": "Heavy Intervals", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "math", "sortings"], "solvedCount": 9599}, {"contestId": 1907, "index": "B", "name": "YetnotherrokenKeoard", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "implementation", "strings"], "solvedCount": 22544}, {"contestId": 1906, "index": "F", "name": "Maximize The Value", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "sortings"], "solvedCount": 874}, {"contestId": 1905, "index": "F", "name": "Field Should Not Be Empty", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["brute force", "data structures", "divide and conquer"], "solvedCount": 426}, {"contestId": 1905, "index": "D", "name": "Cyclic MEX", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "implementation", "math", "two pointers"], "solvedCount": 3345}, {"contestId": 1904, "index": "F", "name": "Beautiful Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 284}, {"contestId": 1904, "index": "E", "name": "Tree Queries", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 770}, {"contestId": 1904, "index": "D2", "name": "Set To Max (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "greedy", "implementation", "sortings"], "solvedCount": 3615}, {"contestId": 1904, "index": "C", "name": "Array Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "brute force", "data structures", "sortings", "two pointers"], "solvedCount": 9975}, {"contestId": 1903, "index": "F", "name": "Babysitting", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["2-sat", "binary search", "data structures", "graphs", "trees"], "solvedCount": 518}, {"contestId": 1902, "index": "F", "name": "Trees and XOR Queries Again", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "implementation", "math", "trees"], "solvedCount": 852}, {"contestId": 1902, "index": "E", "name": "Collapsing Strings", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "strings", "trees"], "solvedCount": 3600}, {"contestId": 1902, "index": "D", "name": "Robot Queries", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dp", "implementation"], "solvedCount": 3516}, {"contestId": 1900, "index": "F", "name": "Local Deletions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 247}, {"contestId": 1899, "index": "G", "name": "Unusual Entertainment", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dfs and similar", "dsu", "shortest paths", "sortings", "trees", "two pointers"], "solvedCount": 2791}, {"contestId": 1898, "index": "E", "name": "Sofia and Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "greedy", "sortings", "strings", "two pointers"], "solvedCount": 1982}, {"contestId": 1896, "index": "E", "name": "Permutation Sorting", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "sortings"], "solvedCount": 1934}, {"contestId": 1896, "index": "D", "name": "Ones and Twos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "divide and conquer", "math", "two pointers"], "solvedCount": 4963}, {"contestId": 1895, "index": "G", "name": "Two Characters, Two Colors", "type": "PROGRAMMING", "rating": 3100, "tags": ["binary search", "data structures", "dp", "flows", "greedy"], "solvedCount": 166}, {"contestId": 1895, "index": "E", "name": "Infinite Card Game", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "dsu", "games", "graphs", "greedy", "sortings", "two pointers"], "solvedCount": 1420}, {"contestId": 1895, "index": "D", "name": "XOR Construction", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "data structures", "math", "string suffix structures", "trees"], "solvedCount": 5388}, {"contestId": 1893, "index": "D", "name": "Colorful Constructive", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 793}, {"contestId": 1891, "index": "F", "name": "A Growing Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 3269}, {"contestId": 1889, "index": "F", "name": "Doremy's Average Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "dp", "greedy", "trees"], "solvedCount": 66}, {"contestId": 1889, "index": "C2", "name": "Doremy's Drying Plan (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["data structures", "dp"], "solvedCount": 853}, {"contestId": 1889, "index": "C1", "name": "Doremy's Drying Plan (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "solvedCount": 2911}, {"contestId": 1887, "index": "D", "name": "Split", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["binary search", "data structures", "divide and conquer", "dsu", "math", "trees", "two pointers"], "solvedCount": 782}, {"contestId": 1887, "index": "C", "name": "Minimum Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "hashing", "two pointers"], "solvedCount": 1528}, {"contestId": 1886, "index": "F", "name": "Diamond Theft", "type": "PROGRAMMING", "rating": 3300, "tags": ["data structures", "greedy"], "solvedCount": 153}, {"contestId": 1886, "index": "D", "name": "Monocarp and the Set", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "data structures", "math"], "solvedCount": 3235}, {"contestId": 1884, "index": "C", "name": "Medium Design", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "solvedCount": 5237}, {"contestId": 1883, "index": "F", "name": "You Are So Beautiful", "type": "PROGRAMMING", "points": 2750.0, "rating": 1400, "tags": ["data structures"], "solvedCount": 7897}, {"contestId": 1883, "index": "D", "name": "In Love", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["data structures", "greedy"], "solvedCount": 9558}, {"contestId": 1881, "index": "G", "name": "Anya and the Mysterious String", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures"], "solvedCount": 2092}, {"contestId": 1879, "index": "F", "name": "Last Man Standing", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "data structures", "number theory"], "solvedCount": 461}, {"contestId": 1878, "index": "G", "name": "wxhtzdy ORO Tree", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dfs and similar", "implementation", "trees"], "solvedCount": 1059}, {"contestId": 1878, "index": "E", "name": "Iva & Pav", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "bitmasks", "data structures", "greedy"], "solvedCount": 10578}, {"contestId": 1878, "index": "D", "name": "Reverse Madness", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 7332}, {"contestId": 1876, "index": "G", "name": "Clubstep", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["binary search", "brute force", "data structures", "greedy", "trees"], "solvedCount": 109}, {"contestId": 1876, "index": "E", "name": "Ball-Stackable", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 210}, {"contestId": 1872, "index": "E", "name": "Data Structures Fan", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "bitmasks", "data structures", "dp"], "solvedCount": 11491}, {"contestId": 1870, "index": "H", "name": "Standard Graph Problem", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures", "graphs", "greedy", "trees"], "solvedCount": 76}, {"contestId": 1870, "index": "G", "name": "MEXanization", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 193}, {"contestId": 1870, "index": "C", "name": "Colorful Table", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["binary search", "data structures", "dp", "implementation", "math", "two pointers"], "solvedCount": 10519}, {"contestId": 1868, "index": "F", "name": "LIS?", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 67}, {"contestId": 1867, "index": "C", "name": "Salyg1n and the MEX Game", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["constructive algorithms", "data structures", "games", "greedy", "interactive"], "solvedCount": 10370}, {"contestId": 1866, "index": "K", "name": "Keen Tree Calculation", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "geometry", "graphs", "implementation", "trees"], "solvedCount": 399}, {"contestId": 1866, "index": "G", "name": "Grouped Carriages", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "dp", "flows", "greedy"], "solvedCount": 1463}, {"contestId": 1866, "index": "F", "name": "Freak Joker Process", "type": "PROGRAMMING", "rating": 3100, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 109}, {"contestId": 1864, "index": "F", "name": "Exotic Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 1288}, {"contestId": 1864, "index": "E", "name": "Guess Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "data structures", "games", "math", "probabilities", "sortings", "strings", "trees"], "solvedCount": 2438}, {"contestId": 1864, "index": "D", "name": "Matrix Cascade", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math"], "solvedCount": 6217}, {"contestId": 1862, "index": "G", "name": "The Great Equalizer", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "math", "sortings"], "solvedCount": 2568}, {"contestId": 1862, "index": "E", "name": "Kolya and Movie Theatre", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 9316}, {"contestId": 1862, "index": "C", "name": "Flower City Fence", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "data structures", "implementation", "sortings"], "solvedCount": 19326}, {"contestId": 1861, "index": "C", "name": "Queries for the Array", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dfs and similar", "implementation", "strings", "trees"], "solvedCount": 9250}, {"contestId": 1860, "index": "F", "name": "Evaluate RBS", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "geometry", "implementation", "math", "sortings"], "solvedCount": 260}, {"contestId": 1860, "index": "E", "name": "Fast Travel Text Editor", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 1269}, {"contestId": 1860, "index": "C", "name": "Game on Permutation", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "dp", "games", "greedy"], "solvedCount": 12147}, {"contestId": 1859, "index": "F", "name": "Teleportation in Byteland", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "shortest paths", "trees"], "solvedCount": 355}, {"contestId": 1859, "index": "D", "name": "Andrey and Escape from Capygrad", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "data structures", "dp", "dsu", "greedy", "sortings"], "solvedCount": 6406}, {"contestId": 1858, "index": "E2", "name": "Rollbacks (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["data structures", "interactive", "trees"], "solvedCount": 985}, {"contestId": 1858, "index": "E1", "name": "Rollbacks (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["brute force", "data structures", "dfs and similar", "trees"], "solvedCount": 1227}, {"contestId": 1858, "index": "D", "name": "Trees and Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 2631}, {"contestId": 1857, "index": "F", "name": "Sum and Product", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures", "math"], "solvedCount": 10139}, {"contestId": 1856, "index": "C", "name": "To Become Max", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "dp"], "solvedCount": 10713}, {"contestId": 1852, "index": "F", "name": "Panda Meetups", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "dp", "flows"], "solvedCount": 93}, {"contestId": 1852, "index": "E", "name": "Rivalries", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 152}, {"contestId": 1852, "index": "C", "name": "Ina of the Mountain", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 1402}, {"contestId": 1851, "index": "G", "name": "Vlad and the Mountains", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "dsu", "graphs", "implementation", "sortings", "trees", "two pointers"], "solvedCount": 2829}, {"contestId": 1850, "index": "G", "name": "The Morning Star", "type": "PROGRAMMING", "rating": 1500, "tags": ["combinatorics", "data structures", "geometry", "implementation", "math", "sortings"], "solvedCount": 10923}, {"contestId": 1849, "index": "F", "name": "XOR Partition", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "greedy", "trees"], "solvedCount": 612}, {"contestId": 1849, "index": "E", "name": "Max to the Right of Min", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "two pointers"], "solvedCount": 1464}, {"contestId": 1849, "index": "C", "name": "Binary String Copying", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "data structures", "hashing", "strings"], "solvedCount": 9605}, {"contestId": 1848, "index": "B", "name": "Vika and the Bridge", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "solvedCount": 12942}, {"contestId": 1847, "index": "F", "name": "The Boss's Identity", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "bitmasks", "data structures", "dfs and similar", "greedy", "math", "sortings"], "solvedCount": 841}, {"contestId": 1847, "index": "D", "name": "Professor Higashikata", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dsu", "greedy", "implementation", "strings"], "solvedCount": 3520}, {"contestId": 1846, "index": "C", "name": "Rudolf and the Another Competition", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings"], "solvedCount": 17625}, {"contestId": 1845, "index": "D", "name": "Rating System", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "brute force", "data structures", "dp", "dsu", "greedy", "math", "two pointers"], "solvedCount": 7137}, {"contestId": 1844, "index": "H", "name": "Multiple of Three Cycles", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["combinatorics", "data structures", "dp", "dsu", "math"], "solvedCount": 122}, {"contestId": 1844, "index": "G", "name": "Tree Weights", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "implementation", "math", "matrices", "number theory", "trees"], "solvedCount": 627}, {"contestId": 1844, "index": "F2", "name": "Min Cost Permutation (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math", "sortings"], "solvedCount": 363}, {"contestId": 1843, "index": "F2", "name": "Omsk Metro (hard version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "math", "trees"], "solvedCount": 1429}, {"contestId": 1843, "index": "F1", "name": "Omsk Metro (simple version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "solvedCount": 4862}, {"contestId": 1843, "index": "E", "name": "Tracking Segments", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "brute force", "data structures", "two pointers"], "solvedCount": 10653}, {"contestId": 1842, "index": "E", "name": "Tenzing and Triangle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dp", "geometry", "greedy", "math"], "solvedCount": 1502}, {"contestId": 1841, "index": "E", "name": "Fill the Matrix", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "greedy", "math"], "solvedCount": 1826}, {"contestId": 1841, "index": "D", "name": "Pairs of Segments", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "greedy", "sortings", "two pointers"], "solvedCount": 4034}, {"contestId": 1840, "index": "E", "name": "Character Blocking", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "hashing", "implementation"], "solvedCount": 7378}, {"contestId": 1839, "index": "D", "name": "Ball Sorting", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "dp", "sortings"], "solvedCount": 2135}, {"contestId": 1838, "index": "D", "name": "Bracket Walk", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "greedy", "strings"], "solvedCount": 3017}, {"contestId": 1837, "index": "F", "name": "Editorial for Two", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "greedy", "implementation"], "solvedCount": 2032}, {"contestId": 1834, "index": "E", "name": "MEX of LCM", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "data structures", "implementation", "math", "number theory"], "solvedCount": 1997}, {"contestId": 1834, "index": "D", "name": "Survey in Class", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 4263}, {"contestId": 1833, "index": "F", "name": "Ira and Flamenco", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "constructive algorithms", "data structures", "implementation", "math", "sortings", "two pointers"], "solvedCount": 6500}, {"contestId": 1830, "index": "F", "name": "The Third Grace", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["data structures", "dp"], "solvedCount": 209}, {"contestId": 1830, "index": "E", "name": "Bully Sort", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "math"], "solvedCount": 217}, {"contestId": 1829, "index": "G", "name": "Hits Different", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "implementation", "math"], "solvedCount": 9101}, {"contestId": 1827, "index": "F", "name": "Copium Permutation", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 103}, {"contestId": 1827, "index": "D", "name": "Two Centroids", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 681}, {"contestId": 1827, "index": "C", "name": "Palindrome Partition", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["binary search", "brute force", "data structures", "dp", "hashing", "strings"], "solvedCount": 1106}, {"contestId": 1827, "index": "B2", "name": "Range Sorting (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy"], "solvedCount": 1731}, {"contestId": 1826, "index": "E", "name": "Walk the Runway", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"], "solvedCount": 1471}, {"contestId": 1824, "index": "E", "name": "LuoTianyi and Cartridge", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 120}, {"contestId": 1824, "index": "D", "name": "LuoTianyi and the Function", "type": "PROGRAMMING", "points": 2250.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 440}, {"contestId": 1824, "index": "C", "name": "LuoTianyi and XOR-Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "dsu", "greedy", "trees"], "solvedCount": 1217}, {"contestId": 1822, "index": "G2", "name": "Magic Triples (Hard Version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "data structures", "math", "number theory"], "solvedCount": 2215}, {"contestId": 1822, "index": "G1", "name": "Magic Triples (Easy Version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "data structures", "math", "number theory"], "solvedCount": 6279}, {"contestId": 1819, "index": "F", "name": "Willy-nilly, Crack, Into Release!", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 119}, {"contestId": 1819, "index": "D", "name": "Misha and Apples", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["brute force", "data structures", "dp", "two pointers"], "solvedCount": 579}, {"contestId": 1817, "index": "A", "name": "Almost Increasing Subsequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 10131}, {"contestId": 1814, "index": "E", "name": "Chain Chips", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "matrices"], "solvedCount": 1189}, {"contestId": 1814, "index": "D", "name": "Balancing Weapons", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "brute force", "data structures", "math", "two pointers"], "solvedCount": 810}, {"contestId": 1811, "index": "G2", "name": "Vlad and the Nice Paths (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "combinatorics", "data structures", "dp", "math", "two pointers"], "solvedCount": 1578}, {"contestId": 1810, "index": "F", "name": "M-tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "math", "sortings", "trees"], "solvedCount": 519}, {"contestId": 1810, "index": "E", "name": "Monsters", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 2920}, {"contestId": 1809, "index": "F", "name": "Traveling in Berland", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "graphs", "greedy", "implementation"], "solvedCount": 697}, {"contestId": 1808, "index": "D", "name": "Petya, Petya, Petr, and Palindromes", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "brute force", "data structures", "two pointers"], "solvedCount": 2106}, {"contestId": 1807, "index": "G1", "name": "Subsequence Addition (Easy Version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 17580}, {"contestId": 1807, "index": "D", "name": "Odd Queries", "type": "PROGRAMMING", "rating": 900, "tags": ["data structures", "implementation"], "solvedCount": 27506}, {"contestId": 1806, "index": "E", "name": "Tree Master", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["brute force", "data structures", "dfs and similar", "trees"], "solvedCount": 2636}, {"contestId": 1805, "index": "E", "name": "There Should Be a Lot of Maximums", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "trees", "two pointers"], "solvedCount": 1488}, {"contestId": 1805, "index": "C", "name": "Place for a Selfie", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "data structures", "geometry", "math"], "solvedCount": 11847}, {"contestId": 1804, "index": "G", "name": "Flow Control", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "dsu", "implementation"], "solvedCount": 185}, {"contestId": 1801, "index": "G", "name": "A task for substrings", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "strings"], "solvedCount": 273}, {"contestId": 1801, "index": "E", "name": "Gasoline prices", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "hashing", "trees"], "solvedCount": 423}, {"contestId": 1801, "index": "D", "name": "The way home", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "data structures", "dp", "graphs", "greedy", "shortest paths", "sortings"], "solvedCount": 1996}, {"contestId": 1801, "index": "C", "name": "Music Festival", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "greedy", "sortings"], "solvedCount": 3142}, {"contestId": 1801, "index": "B", "name": "Buying gifts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 5663}, {"contestId": 1800, "index": "D", "name": "Remove Two Letters", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "greedy", "hashing", "strings"], "solvedCount": 21317}, {"contestId": 1800, "index": "C2", "name": "Powering the Hero (hard version)", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy"], "solvedCount": 20692}, {"contestId": 1800, "index": "C1", "name": "Powering the Hero (easy version)", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "greedy"], "solvedCount": 21916}, {"contestId": 1799, "index": "D2", "name": "Hot Start Up (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 2225}, {"contestId": 1799, "index": "A", "name": "Recent Actions", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["data structures", "greedy", "implementation", "math"], "solvedCount": 11277}, {"contestId": 1798, "index": "B", "name": "Three Sevens", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 15735}, {"contestId": 1797, "index": "F", "name": "Li Hua and Path", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "trees"], "solvedCount": 321}, {"contestId": 1797, "index": "E", "name": "Li Hua and Array", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "data structures", "dsu", "math", "number theory", "two pointers"], "solvedCount": 1158}, {"contestId": 1797, "index": "D", "name": "Li Hua and Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 3623}, {"contestId": 1796, "index": "D", "name": "Maximum Subarray", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy", "two pointers"], "solvedCount": 3788}, {"contestId": 1795, "index": "E", "name": "Explosions?", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "math"], "solvedCount": 1881}, {"contestId": 1795, "index": "C", "name": "Tea Tasting", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 11077}, {"contestId": 1794, "index": "E", "name": "Labeling the Tree with Distances", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dp", "greedy", "hashing", "implementation", "trees"], "solvedCount": 987}, {"contestId": 1793, "index": "F", "name": "Rebrending", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["brute force", "data structures", "divide and conquer", "implementation"], "solvedCount": 1247}, {"contestId": 1793, "index": "E", "name": "Velepin and Marketing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 910}, {"contestId": 1793, "index": "C", "name": "Dora and Search", "type": "PROGRAMMING", "points": 1250.0, "rating": 1200, "tags": ["constructive algorithms", "data structures", "two pointers"], "solvedCount": 17592}, {"contestId": 1792, "index": "D", "name": "Fixed Prefix Permutations", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "bitmasks", "data structures", "hashing", "math", "sortings"], "solvedCount": 5778}, {"contestId": 1791, "index": "F", "name": "Range Update Point Query", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "brute force", "data structures"], "solvedCount": 11213}, {"contestId": 1790, "index": "D", "name": "Matryoshkas", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 17544}, {"contestId": 1788, "index": "E", "name": "Sum Over Zero", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dfs and similar", "dp"], "solvedCount": 2419}, {"contestId": 1787, "index": "I", "name": "Treasure Hunt", "type": "PROGRAMMING", "points": 3750.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "two pointers"], "solvedCount": 145}, {"contestId": 1787, "index": "H", "name": "Codeforces Scoreboard", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["binary search", "data structures", "dp", "geometry"], "solvedCount": 194}, {"contestId": 1787, "index": "G", "name": "Colorful Tree Again", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["brute force", "data structures", "trees"], "solvedCount": 389}, {"contestId": 1784, "index": "C", "name": "Monsters (hard version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["data structures", "greedy"], "solvedCount": 1504}, {"contestId": 1783, "index": "G", "name": "Weighed Tree Radius", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 400}, {"contestId": 1783, "index": "E", "name": "Game of the Year", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "data structures", "math", "number theory"], "solvedCount": 1993}, {"contestId": 1781, "index": "E", "name": "Rectangle Shrinking", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["binary search", "brute force", "data structures", "greedy", "implementation", "two pointers"], "solvedCount": 1255}, {"contestId": 1780, "index": "F", "name": "Three Chairs", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "brute force", "combinatorics", "data structures", "dp", "number theory", "sortings"], "solvedCount": 1350}, {"contestId": 1780, "index": "E", "name": "Josuke and Complete Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "brute force", "data structures", "math", "number theory"], "solvedCount": 1285}, {"contestId": 1779, "index": "D", "name": "Boris and His Amazing Haircut", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "dp", "dsu", "greedy", "sortings"], "solvedCount": 7371}, {"contestId": 1779, "index": "C", "name": "Least Prefix Sum", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 11649}, {"contestId": 1777, "index": "F", "name": "Comfortably Numb", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "strings", "trees"], "solvedCount": 800}, {"contestId": 1776, "index": "E", "name": "Crossing the Railways", "type": "PROGRAMMING", "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 59}, {"contestId": 1774, "index": "G", "name": "Segment Covering", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 322}, {"contestId": 1774, "index": "F2", "name": "Magician and Pigs (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2700, "tags": ["binary search", "brute force", "data structures", "implementation"], "solvedCount": 625}, {"contestId": 1774, "index": "F1", "name": "Magician and Pigs (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 1012}, {"contestId": 1771, "index": "F", "name": "Hossam and Range Minimum Query", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["binary search", "bitmasks", "data structures", "hashing", "probabilities", "strings", "trees"], "solvedCount": 936}, {"contestId": 1771, "index": "D", "name": "Hossam and (sub-)palindromic tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["brute force", "data structures", "dfs and similar", "dp", "strings", "trees"], "solvedCount": 2560}, {"contestId": 1770, "index": "D", "name": "Koxia and Game", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "flows", "games", "graph matchings", "graphs", "implementation"], "solvedCount": 3629}, {"contestId": 1767, "index": "F", "name": "Two Subtrees", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 241}, {"contestId": 1767, "index": "C", "name": "Count Binary Strings", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 2465}, {"contestId": 1767, "index": "B", "name": "Block Towers", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 19484}, {"contestId": 1766, "index": "E", "name": "Decomposition", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 1113}, {"contestId": 1765, "index": "L", "name": "Project Manager", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 552}, {"contestId": 1764, "index": "H", "name": "Doremy's Paint 2", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures"], "solvedCount": 158}, {"contestId": 1763, "index": "F", "name": "Edge Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "solvedCount": 411}, {"contestId": 1763, "index": "B", "name": "Incinerate", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["binary search", "brute force", "data structures", "implementation", "math", "sortings"], "solvedCount": 13726}, {"contestId": 1762, "index": "F", "name": "Good Pairs ", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["binary search", "data structures", "dp"], "solvedCount": 539}, {"contestId": 1760, "index": "E", "name": "Binary Inversions", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy", "math"], "solvedCount": 18896}, {"contestId": 1760, "index": "C", "name": "Advantage", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 34441}, {"contestId": 1759, "index": "G", "name": "Restore the Permutation", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 4133}, {"contestId": 1759, "index": "F", "name": "All Possible Digits", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "data structures", "greedy", "math", "number theory"], "solvedCount": 3643}, {"contestId": 1758, "index": "F", "name": "Decent Division", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["constructive algorithms", "data structures"], "solvedCount": 150}, {"contestId": 1750, "index": "H", "name": "BinaryStringForces", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "dp"], "solvedCount": 69}, {"contestId": 1750, "index": "E", "name": "Bracket Cost", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "greedy", "strings"], "solvedCount": 1325}, {"contestId": 1749, "index": "F", "name": "Distance to the Path", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 461}, {"contestId": 1749, "index": "C", "name": "Number Game", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "data structures", "games", "greedy", "implementation"], "solvedCount": 13107}, {"contestId": 1748, "index": "E", "name": "Yet Another Array Counting Problem", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "flows", "math", "trees"], "solvedCount": 1677}, {"contestId": 1748, "index": "C", "name": "Zero-Sum Prefixes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "solvedCount": 10259}, {"contestId": 1747, "index": "D", "name": "Yet Another Problem", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures"], "solvedCount": 4414}, {"contestId": 1746, "index": "G", "name": "Olympiad Training", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["binary search", "data structures", "dp", "flows", "geometry", "implementation", "sortings"], "solvedCount": 88}, {"contestId": 1746, "index": "F", "name": "Kazaee", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "hashing", "probabilities"], "solvedCount": 1458}, {"contestId": 1743, "index": "G", "name": "Antifibonacci Cut", "type": "PROGRAMMING", "rating": 3000, "tags": ["bitmasks", "combinatorics", "constructive algorithms", "data structures", "dp", "hashing", "math"], "solvedCount": 237}, {"contestId": 1743, "index": "F", "name": "Intersection and Union", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "matrices", "probabilities"], "solvedCount": 1391}, {"contestId": 1741, "index": "F", "name": "Multi-Colored Segments", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "math", "sortings"], "solvedCount": 2185}, {"contestId": 1740, "index": "I", "name": "Arranging Crystal Balls", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "divide and conquer", "dp", "geometry", "graphs", "number theory"], "solvedCount": 98}, {"contestId": 1740, "index": "H", "name": "MEX Tree Manipulation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "trees"], "solvedCount": 197}, {"contestId": 1740, "index": "E", "name": "Hanging Hearts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4052}, {"contestId": 1740, "index": "D", "name": "Knowledge Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["constructive algorithms", "data structures"], "solvedCount": 7592}, {"contestId": 1739, "index": "F", "name": "Keyboard Design", "type": "PROGRAMMING", "rating": 2600, "tags": ["bitmasks", "data structures", "dp", "string suffix structures", "strings"], "solvedCount": 501}, {"contestId": 1739, "index": "D", "name": "Reset K Edges", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 4784}, {"contestId": 1738, "index": "H", "name": "Palindrome Addicts", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["data structures", "strings"], "solvedCount": 221}, {"contestId": 1738, "index": "D", "name": "Permutation Addicts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 3283}, {"contestId": 1737, "index": "G", "name": "Ela Takes Dancing Class", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["binary search", "data structures"], "solvedCount": 95}, {"contestId": 1736, "index": "C2", "name": "Good Subarrays (Hard Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "two pointers"], "solvedCount": 1217}, {"contestId": 1736, "index": "C1", "name": "Good Subarrays (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["binary search", "data structures", "schedules", "two pointers"], "solvedCount": 14289}, {"contestId": 1735, "index": "F", "name": "Pebbles and Beads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["data structures", "geometry"], "solvedCount": 190}, {"contestId": 1735, "index": "E", "name": "House Planning", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "graph matchings", "greedy"], "solvedCount": 1003}, {"contestId": 1735, "index": "D", "name": "Meta-set", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["brute force", "combinatorics", "data structures", "hashing", "math"], "solvedCount": 5202}, {"contestId": 1734, "index": "D", "name": "Slime Escape", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "two pointers"], "solvedCount": 5922}, {"contestId": 1732, "index": "E", "name": "Location", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dp", "math", "number theory"], "solvedCount": 400}, {"contestId": 1732, "index": "D2", "name": "Balance (Hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["brute force", "data structures", "number theory"], "solvedCount": 1338}, {"contestId": 1732, "index": "D1", "name": "Balance (Easy version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation", "number theory"], "solvedCount": 8106}, {"contestId": 1731, "index": "D", "name": "Valiant's New Map", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "solvedCount": 6589}, {"contestId": 1730, "index": "F", "name": "Almost Sorted", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["bitmasks", "data structures", "dp"], "solvedCount": 401}, {"contestId": 1730, "index": "E", "name": "Maximums and Minimums", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["combinatorics", "data structures", "divide and conquer", "number theory"], "solvedCount": 596}, {"contestId": 1730, "index": "C", "name": "Minimum Notation", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["data structures", "greedy", "math", "sortings"], "solvedCount": 15874}, {"contestId": 1730, "index": "A", "name": "Planets", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 22371}, {"contestId": 1728, "index": "E", "name": "Red-Black Pepper", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "data structures", "greedy", "math", "number theory"], "solvedCount": 1629}, {"contestId": 1728, "index": "C", "name": "Digital Logarithm", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 14866}, {"contestId": 1726, "index": "G", "name": "A Certain Magical Party", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["combinatorics", "data structures", "greedy", "sortings"], "solvedCount": 276}, {"contestId": 1726, "index": "F", "name": "Late For Work (submissions are not allowed)", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "greedy", "schedules", "shortest paths"], "solvedCount": 131}, {"contestId": 1726, "index": "C", "name": "Jatayu's Balanced Bracket Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["data structures", "dsu", "graphs", "greedy"], "solvedCount": 11794}, {"contestId": 1725, "index": "L", "name": "Lemper Cooking Competition", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 848}, {"contestId": 1725, "index": "K", "name": "Kingdom of Criticism", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dsu"], "solvedCount": 568}, {"contestId": 1725, "index": "F", "name": "Field Photography", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "data structures", "sortings"], "solvedCount": 927}, {"contestId": 1725, "index": "E", "name": "Electrical Efficiency", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "data structures", "dp", "math", "number theory", "trees"], "solvedCount": 424}, {"contestId": 1722, "index": "E", "name": "Counting Rectangles", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dp", "implementation"], "solvedCount": 9784}, {"contestId": 1722, "index": "C", "name": "Word Game", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "implementation"], "solvedCount": 28997}, {"contestId": 1720, "index": "E", "name": "Misha and Paintings", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "solvedCount": 727}, {"contestId": 1720, "index": "D2", "name": "Xor-Subsequence (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "data structures", "dp", "strings", "trees"], "solvedCount": 1708}, {"contestId": 1720, "index": "B", "name": "Interesting Sum", "type": "PROGRAMMING", "points": 1000.0, "rating": 800, "tags": ["brute force", "data structures", "greedy", "math", "sortings"], "solvedCount": 20654}, {"contestId": 1719, "index": "C", "name": "Fighting Tournament", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "data structures", "implementation", "two pointers"], "solvedCount": 12755}, {"contestId": 1718, "index": "F", "name": "Burenka, an Array and Queries", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["data structures", "math", "number theory"], "solvedCount": 140}, {"contestId": 1718, "index": "D", "name": "Permutation for Burenka", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["data structures", "graph matchings", "greedy", "math", "trees"], "solvedCount": 283}, {"contestId": 1718, "index": "C", "name": "Tonya and Burenka-179", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["data structures", "greedy", "math", "number theory"], "solvedCount": 1496}, {"contestId": 1718, "index": "A2", "name": "Burenka and Traditions (hard version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1900, "tags": ["data structures", "dp", "greedy"], "solvedCount": 4916}, {"contestId": 1716, "index": "E", "name": "Swap and Maximum Block", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "data structures", "dfs and similar", "divide and conquer", "dp"], "solvedCount": 1008}, {"contestId": 1716, "index": "C", "name": "Robot in a Hallway", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy", "implementation", "ternary search"], "solvedCount": 3975}, {"contestId": 1715, "index": "E", "name": "Long Way Home", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "dp", "geometry", "graphs", "greedy", "shortest paths"], "solvedCount": 1578}, {"contestId": 1715, "index": "C", "name": "Monoblock", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["combinatorics", "data structures", "implementation", "math"], "solvedCount": 8239}, {"contestId": 1714, "index": "G", "name": "Path Prefixes", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 6990}, {"contestId": 1714, "index": "D", "name": "Color with Occurrences", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "solvedCount": 8445}, {"contestId": 1714, "index": "B", "name": "Remove Prefix", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 28897}, {"contestId": 1713, "index": "E", "name": "Cross Swapping", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["2-sat", "data structures", "dsu", "greedy", "matrices"], "solvedCount": 1500}, {"contestId": 1712, "index": "F", "name": "Triameter", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 299}, {"contestId": 1712, "index": "E2", "name": "LCM Sum (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2500, "tags": ["brute force", "data structures", "math", "number theory", "two pointers"], "solvedCount": 1172}, {"contestId": 1712, "index": "D", "name": "Empty Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "shortest paths"], "solvedCount": 4216}, {"contestId": 1710, "index": "B", "name": "Rain", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "brute force", "data structures", "geometry", "greedy", "implementation", "math"], "solvedCount": 2333}, {"contestId": 1709, "index": "E", "name": "XOR Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "solvedCount": 2362}, {"contestId": 1709, "index": "D", "name": "Rorororobot", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "greedy", "math"], "solvedCount": 7975}, {"contestId": 1709, "index": "B", "name": "Also Try Minecraft", "type": "PROGRAMMING", "rating": 900, "tags": ["data structures", "dp", "implementation"], "solvedCount": 21655}, {"contestId": 1707, "index": "E", "name": "Replace", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["binary search", "data structures"], "solvedCount": 546}, {"contestId": 1707, "index": "B", "name": "Difference Array", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["brute force", "data structures", "implementation", "sortings"], "solvedCount": 5475}, {"contestId": 1706, "index": "E", "name": "Qpwoeirut and Vertices", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "trees"], "solvedCount": 2319}, {"contestId": 1706, "index": "D2", "name": "Chopping Carrots (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 1639}, {"contestId": 1705, "index": "E", "name": "Mark and Professor Koro", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "bitmasks", "brute force", "combinatorics", "data structures", "greedy"], "solvedCount": 1955}, {"contestId": 1703, "index": "F", "name": "Yet Another Problem About Pairs Satisfying an Inequality", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "data structures", "dp", "greedy", "sortings"], "solvedCount": 17708}, {"contestId": 1703, "index": "D", "name": "Double Strings", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "data structures", "strings"], "solvedCount": 23794}, {"contestId": 1703, "index": "B", "name": "ICPC Balloons", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "implementation"], "solvedCount": 44351}, {"contestId": 1702, "index": "G2", "name": "Passable Paths (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 4207}, {"contestId": 1702, "index": "F", "name": "Equate Multisets", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "data structures", "greedy", "math", "number theory"], "solvedCount": 7811}, {"contestId": 1702, "index": "C", "name": "Train and Queries", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "greedy"], "solvedCount": 21133}, {"contestId": 1701, "index": "F", "name": "Points", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "data structures", "implementation", "math", "matrices"], "solvedCount": 875}, {"contestId": 1701, "index": "D", "name": "Permutation Restoration", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "greedy", "math", "sortings", "two pointers"], "solvedCount": 5412}, {"contestId": 1700, "index": "C", "name": "Helping the Nature", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 10363}, {"contestId": 1699, "index": "E", "name": "Three Days Grace", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 1065}, {"contestId": 1699, "index": "D", "name": "Almost Triple Deletions", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"], "solvedCount": 3004}, {"contestId": 1698, "index": "C", "name": "3SUM Closure", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["brute force", "data structures"], "solvedCount": 17714}, {"contestId": 1697, "index": "C", "name": "awoo's Favorite Problem", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "implementation", "strings", "two pointers"], "solvedCount": 13837}, {"contestId": 1696, "index": "G", "name": "Fishingprince Plays With Array Again", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["brute force", "data structures", "geometry", "math"], "solvedCount": 262}, {"contestId": 1696, "index": "D", "name": "Permutation Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "greedy", "shortest paths"], "solvedCount": 5113}, {"contestId": 1695, "index": "C", "name": "Zero Path", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "graphs", "greedy", "shortest paths"], "solvedCount": 10213}, {"contestId": 1693, "index": "E", "name": "Outermost Maximums", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "greedy"], "solvedCount": 365}, {"contestId": 1693, "index": "D", "name": "Decinc Dividing", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 757}, {"contestId": 1692, "index": "H", "name": "Gambling", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 6927}, {"contestId": 1692, "index": "G", "name": "2^Sort", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "dp", "sortings", "two pointers"], "solvedCount": 15447}, {"contestId": 1691, "index": "E", "name": "Number of Groups", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings"], "solvedCount": 1712}, {"contestId": 1691, "index": "D", "name": "Max GEQ Sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "implementation", "two pointers"], "solvedCount": 5364}, {"contestId": 1690, "index": "G", "name": "Count the Trains", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 3170}, {"contestId": 1690, "index": "C", "name": "Restoring the Duration of Tasks", "type": "PROGRAMMING", "rating": 800, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 25216}, {"contestId": 1689, "index": "D", "name": "Lena and Matrix", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["data structures", "dp", "geometry", "shortest paths"], "solvedCount": 3991}, {"contestId": 1689, "index": "B", "name": "Mystic Permutation", "type": "PROGRAMMING", "points": 750.0, "rating": 900, "tags": ["data structures", "greedy"], "solvedCount": 16995}, {"contestId": 1687, "index": "D", "name": "Cute number", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["binary search", "brute force", "data structures", "dsu", "implementation", "math"], "solvedCount": 552}, {"contestId": 1687, "index": "C", "name": "Sanae and Giant Robot", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["binary search", "brute force", "data structures", "dsu", "greedy", "sortings"], "solvedCount": 1325}, {"contestId": 1685, "index": "E", "name": "The Ultimate LIS Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "greedy"], "solvedCount": 134}, {"contestId": 1684, "index": "F", "name": "Diverse Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "two pointers"], "solvedCount": 831}, {"contestId": 1684, "index": "E", "name": "MEX vs DIFF", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 3006}, {"contestId": 1682, "index": "F", "name": "MCMF?", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["data structures", "flows", "graphs", "greedy", "sortings", "two pointers"], "solvedCount": 282}, {"contestId": 1681, "index": "F", "name": "Unique Occurrences", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "solvedCount": 1510}, {"contestId": 1681, "index": "E", "name": "Labyrinth Adventures", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "matrices", "shortest paths"], "solvedCount": 693}, {"contestId": 1679, "index": "C", "name": "Rooks Defenders", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 9762}, {"contestId": 1679, "index": "B", "name": "Stone Age Problem", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["data structures", "implementation"], "solvedCount": 16576}, {"contestId": 1677, "index": "E", "name": "Tokitsukaze and Beautiful Subsegments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 489}, {"contestId": 1677, "index": "B", "name": "Tokitsukaze and Meeting", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "implementation", "math"], "solvedCount": 3985}, {"contestId": 1677, "index": "A", "name": "Tokitsukaze and Strange Inequality", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "dp"], "solvedCount": 8029}, {"contestId": 1676, "index": "H2", "name": "Maximum Crossings (Hard Version)", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 9852}, {"contestId": 1676, "index": "F", "name": "Longest Strike", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 15557}, {"contestId": 1674, "index": "F", "name": "Desktop Rearrangement", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 4801}, {"contestId": 1672, "index": "I", "name": "PermutationForces", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["data structures", "greedy"], "solvedCount": 135}, {"contestId": 1672, "index": "H", "name": "Zigu Zagu", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 901}, {"contestId": 1670, "index": "C", "name": "Where is the Pizza?", "type": "PROGRAMMING", "points": 1750.0, "rating": 1400, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "implementation", "math"], "solvedCount": 9408}, {"contestId": 1669, "index": "F", "name": "Eating Candies", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 22447}, {"contestId": 1669, "index": "E", "name": "2-Letter Strings", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "math", "strings"], "solvedCount": 16625}, {"contestId": 1667, "index": "B", "name": "Optimal Partition", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 3419}, {"contestId": 1665, "index": "E", "name": "MinimizOR", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "brute force", "data structures", "divide and conquer", "greedy", "implementation", "two pointers"], "solvedCount": 1398}, {"contestId": 1662, "index": "L", "name": "Il Derby della Madonnina", "type": "PROGRAMMING", "tags": ["data structures", "dp", "math"], "solvedCount": 981}, {"contestId": 1662, "index": "F", "name": "Antennas", "type": "PROGRAMMING", "tags": ["data structures", "dfs and similar", "graphs", "graphs", "implementation", "implementation", "shortest paths", "shortest paths"], "solvedCount": 949}, {"contestId": 1661, "index": "E", "name": "Narrow Components", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "dp", "dsu", "math", "trees"], "solvedCount": 903}, {"contestId": 1661, "index": "D", "name": "Progressions Covering", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy"], "solvedCount": 4466}, {"contestId": 1660, "index": "F2", "name": "Promising String (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "implementation", "math", "strings"], "solvedCount": 2565}, {"contestId": 1659, "index": "D", "name": "Reverse Sort Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math", "two pointers"], "solvedCount": 3832}, {"contestId": 1658, "index": "E", "name": "Gojou and Matrix Game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dp", "games", "hashing", "implementation", "math", "number theory", "sortings"], "solvedCount": 992}, {"contestId": 1658, "index": "D2", "name": "388535 (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["bitmasks", "brute force", "data structures", "math"], "solvedCount": 2405}, {"contestId": 1656, "index": "H", "name": "Equal LCM Subsets", "type": "PROGRAMMING", "points": 3750.0, "rating": 3200, "tags": ["data structures", "math", "number theory"], "solvedCount": 389}, {"contestId": 1656, "index": "B", "name": "Subtract Operation", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "greedy", "math", "two pointers"], "solvedCount": 17317}, {"contestId": 1654, "index": "G", "name": "Snowy Mountain", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 349}, {"contestId": 1654, "index": "F", "name": "Minimal String Xoration", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "data structures", "divide and conquer", "greedy", "hashing", "sortings", "strings"], "solvedCount": 1022}, {"contestId": 1654, "index": "E", "name": "Arithmetic Operations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "data structures", "graphs", "math"], "solvedCount": 1965}, {"contestId": 1654, "index": "C", "name": "Alice and the Cake", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 13041}, {"contestId": 1651, "index": "F", "name": "Tower Defense", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "brute force", "data structures"], "solvedCount": 359}, {"contestId": 1651, "index": "D", "name": "Nearest Excluded Points", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 4741}, {"contestId": 1651, "index": "C", "name": "Fault-tolerant Network", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 10372}, {"contestId": 1650, "index": "G", "name": "Counting Shortcuts", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths"], "solvedCount": 2301}, {"contestId": 1650, "index": "E", "name": "Rescheduling the Exam", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "solvedCount": 3968}, {"contestId": 1648, "index": "F", "name": "Two Avenues", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "dfs and similar", "graphs"], "solvedCount": 100}, {"contestId": 1648, "index": "E", "name": "Air Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "implementation", "trees"], "solvedCount": 379}, {"contestId": 1648, "index": "D", "name": "Serious Business", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "dp", "implementation", "shortest paths"], "solvedCount": 761}, {"contestId": 1648, "index": "C", "name": "Tyler and Strings", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "data structures", "implementation"], "solvedCount": 2832}, {"contestId": 1648, "index": "B", "name": "Integral Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "data structures", "math"], "solvedCount": 6097}, {"contestId": 1648, "index": "A", "name": "Weird Sum", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["combinatorics", "data structures", "geometry", "math", "matrices", "sortings"], "solvedCount": 11524}, {"contestId": 1647, "index": "E", "name": "Madoka and the Sixth-graders", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "greedy"], "solvedCount": 948}, {"contestId": 1644, "index": "E", "name": "Expand the Path", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "combinatorics", "data structures", "implementation", "math"], "solvedCount": 2921}, {"contestId": 1644, "index": "D", "name": "Cross Coloring", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "math"], "solvedCount": 6920}, {"contestId": 1641, "index": "C", "name": "Anonymity Is Important", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "brute force", "data structures", "dsu", "greedy", "sortings"], "solvedCount": 2293}, {"contestId": 1638, "index": "F", "name": "Two Posters", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["brute force", "data structures", "greedy", "two pointers"], "solvedCount": 185}, {"contestId": 1638, "index": "E", "name": "Colorful Operations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 1767}, {"contestId": 1638, "index": "D", "name": "Big Brush", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 4007}, {"contestId": 1638, "index": "C", "name": "Inversion Graph", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["data structures", "dsu", "graphs", "math"], "solvedCount": 14264}, {"contestId": 1638, "index": "B", "name": "Odd Swap Sort", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["data structures", "math", "sortings"], "solvedCount": 20267}, {"contestId": 1637, "index": "H", "name": "Minimize Inversions Number", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures", "greedy", "math", "sortings"], "solvedCount": 297}, {"contestId": 1635, "index": "F", "name": "Closest Pair ", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "greedy"], "solvedCount": 971}, {"contestId": 1634, "index": "F", "name": "Fibonacci Additions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["brute force", "data structures", "hashing", "implementation", "math"], "solvedCount": 1500}, {"contestId": 1634, "index": "E", "name": "Fair Share", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graph matchings", "graphs"], "solvedCount": 1585}, {"contestId": 1633, "index": "F", "name": "Perfect Matching", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "divide and conquer", "interactive", "trees"], "solvedCount": 300}, {"contestId": 1633, "index": "E", "name": "Spanning Tree Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 1452}, {"contestId": 1632, "index": "E1", "name": "Distance Tree (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 1097}, {"contestId": 1632, "index": "D", "name": "New Year Concert", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "greedy", "math", "number theory", "two pointers"], "solvedCount": 4403}, {"contestId": 1630, "index": "B", "name": "Range and Partition", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 5446}, {"contestId": 1628, "index": "F", "name": "Spaceship Crisis Management", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["binary search", "data structures", "geometry", "sortings"], "solvedCount": 81}, {"contestId": 1628, "index": "E", "name": "Groceries in Meteor Town", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["binary search", "data structures", "dsu", "trees"], "solvedCount": 813}, {"contestId": 1627, "index": "E", "name": "Not Escaping", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "implementation", "shortest paths", "two pointers"], "solvedCount": 2194}, {"contestId": 1626, "index": "C", "name": "Monsters And Spells", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "math", "two pointers"], "solvedCount": 10523}, {"contestId": 1625, "index": "E2", "name": "Cats on the Upgrade (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2800, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 569}, {"contestId": 1625, "index": "E1", "name": "Cats on the Upgrade (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "dfs and similar", "divide and conquer", "dp", "graphs", "trees"], "solvedCount": 969}, {"contestId": 1625, "index": "D", "name": "Binary Spiders", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "data structures", "implementation", "math", "sortings", "trees"], "solvedCount": 1946}, {"contestId": 1623, "index": "E", "name": "Middle Duplication", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "greedy", "strings", "trees"], "solvedCount": 1069}, {"contestId": 1622, "index": "B", "name": "Berland Music", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "greedy", "math", "sortings"], "solvedCount": 20414}, {"contestId": 1621, "index": "I", "name": "Two Sequences", "type": "PROGRAMMING", "points": 4500.0, "rating": 3500, "tags": ["data structures", "hashing", "string suffix structures"], "solvedCount": 106}, {"contestId": 1621, "index": "G", "name": "Weighted Increasing Subsequences", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "dp", "math"], "solvedCount": 609}, {"contestId": 1621, "index": "F", "name": "Strange Instructions", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 526}, {"contestId": 1621, "index": "E", "name": "New School", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 1697}, {"contestId": 1621, "index": "B", "name": "Integers Shop", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 12985}, {"contestId": 1620, "index": "E", "name": "Replace the Numbers", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures", "dsu", "implementation"], "solvedCount": 7642}, {"contestId": 1619, "index": "H", "name": "Permutation and Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "data structures", "divide and conquer", "two pointers"], "solvedCount": 1045}, {"contestId": 1619, "index": "E", "name": "MEX and Increments", "type": "PROGRAMMING", "rating": 1700, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation", "math", "sortings"], "solvedCount": 8540}, {"contestId": 1618, "index": "G", "name": "Trader Problem", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dsu", "greedy", "sortings"], "solvedCount": 1439}, {"contestId": 1616, "index": "H", "name": "Keep XOR Low", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["bitmasks", "combinatorics", "data structures", "divide and conquer", "dp", "math"], "solvedCount": 749}, {"contestId": 1616, "index": "E", "name": "Lexicographically Small Enough", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "data structures", "greedy", "strings"], "solvedCount": 2357}, {"contestId": 1615, "index": "H", "name": "Reindeer Games", "type": "PROGRAMMING", "points": 4000.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "data structures", "divide and conquer", "flows", "graphs", "shortest paths"], "solvedCount": 304}, {"contestId": 1615, "index": "E", "name": "Purple Crayon", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "games", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 1375}, {"contestId": 1614, "index": "E", "name": "Divan and a Cottage", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["binary search", "data structures"], "solvedCount": 803}, {"contestId": 1611, "index": "G", "name": "Robot and Candies", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "graph matchings", "greedy"], "solvedCount": 599}, {"contestId": 1611, "index": "F", "name": "ATM and Students", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 6068}, {"contestId": 1610, "index": "H", "name": "Squid Game", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 390}, {"contestId": 1610, "index": "G", "name": "AmShZ Wins a Bet", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["data structures", "greedy", "hashing"], "solvedCount": 315}, {"contestId": 1609, "index": "G", "name": "A Stroll Around the Matrix", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["data structures", "greedy", "math"], "solvedCount": 356}, {"contestId": 1609, "index": "F", "name": "Interesting Sections", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "meet-in-the-middle", "two pointers"], "solvedCount": 716}, {"contestId": 1609, "index": "E", "name": "William The Oblivious ", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "dp", "matrices"], "solvedCount": 1809}, {"contestId": 1608, "index": "G", "name": "Alphabetic Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["binary search", "data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "solvedCount": 144}, {"contestId": 1608, "index": "C", "name": "Game Master", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "two pointers"], "solvedCount": 6339}, {"contestId": 1601, "index": "E", "name": "Phys Ed Online", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures", "dp", "greedy"], "solvedCount": 459}, {"contestId": 1601, "index": "D", "name": "Difficult Mountain", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "dp", "greedy", "sortings"], "solvedCount": 1352}, {"contestId": 1601, "index": "C", "name": "Optimal Insertion", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "divide and conquer", "dp", "greedy", "sortings"], "solvedCount": 1898}, {"contestId": 1601, "index": "B", "name": "Frog Traveler", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "graphs", "shortest paths", "two pointers"], "solvedCount": 4718}, {"contestId": 1599, "index": "I", "name": "Desert", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "graphs"], "solvedCount": 109}, {"contestId": 1599, "index": "E", "name": "Two Arrays", "type": "PROGRAMMING", "rating": 3200, "tags": ["data structures", "matrices"], "solvedCount": 64}, {"contestId": 1598, "index": "F", "name": "RBS", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp"], "solvedCount": 1317}, {"contestId": 1598, "index": "E", "name": "Staircases", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "dp", "implementation", "math"], "solvedCount": 2212}, {"contestId": 1598, "index": "D", "name": "Training Session", "type": "PROGRAMMING", "rating": 1700, "tags": ["combinatorics", "data structures", "geometry", "implementation", "math"], "solvedCount": 8320}, {"contestId": 1598, "index": "C", "name": "Delete Two Elements", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "dp", "implementation", "math", "two pointers"], "solvedCount": 19835}, {"contestId": 1593, "index": "G", "name": "Changing Brackets", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "data structures", "dp", "greedy"], "solvedCount": 1602}, {"contestId": 1593, "index": "E", "name": "Gardener and Tree", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dfs and similar", "greedy", "implementation", "trees"], "solvedCount": 11474}, {"contestId": 1588, "index": "F", "name": "Jumping Through the Array", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["binary search", "data structures", "graphs", "two pointers"], "solvedCount": 265}, {"contestId": 1585, "index": "E", "name": "Frequency Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 989}, {"contestId": 1585, "index": "D", "name": "Yet Another Sorting Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "math"], "solvedCount": 3598}, {"contestId": 1584, "index": "E", "name": "Game with Stones", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "data structures", "games", "greedy"], "solvedCount": 1205}, {"contestId": 1583, "index": "H", "name": "Omkar and Tours", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "divide and conquer", "sortings", "trees"], "solvedCount": 306}, {"contestId": 1583, "index": "G", "name": "Omkar and Time Travel", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "math"], "solvedCount": 397}, {"contestId": 1583, "index": "C", "name": "Omkar and Determination", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp"], "solvedCount": 6762}, {"contestId": 1582, "index": "G", "name": "Kuzya and Homework", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["data structures", "number theory"], "solvedCount": 555}, {"contestId": 1582, "index": "E", "name": "Pchelyonok and Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "greedy", "math"], "solvedCount": 3547}, {"contestId": 1582, "index": "C", "name": "Grandma Capa Knits a Scarf", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["brute force", "data structures", "greedy", "strings", "two pointers"], "solvedCount": 14028}, {"contestId": 1580, "index": "E", "name": "Railway Construction", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["brute force", "constructive algorithms", "data structures", "graphs", "shortest paths"], "solvedCount": 63}, {"contestId": 1580, "index": "C", "name": "Train Maintenance", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 1636}, {"contestId": 1580, "index": "A", "name": "Portal", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "solvedCount": 3519}, {"contestId": 1579, "index": "E2", "name": "Array Optimization by Deque", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "greedy"], "solvedCount": 6279}, {"contestId": 1578, "index": "J", "name": "Just Kingdom", "type": "PROGRAMMING", "rating": 3100, "tags": ["brute force", "data structures", "dfs and similar"], "solvedCount": 215}, {"contestId": 1578, "index": "B", "name": "Building Forest Trails", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dsu"], "solvedCount": 319}, {"contestId": 1575, "index": "M", "name": "Managing Telephone Poles", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "geometry"], "solvedCount": 231}, {"contestId": 1575, "index": "L", "name": "Longest Array Deconstruction", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "sortings"], "solvedCount": 1211}, {"contestId": 1575, "index": "I", "name": "Illusions of the Desert", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "trees"], "solvedCount": 827}, {"contestId": 1575, "index": "E", "name": "Eye-Pleasing City Park Tour", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 300}, {"contestId": 1575, "index": "C", "name": "Cyclic Sum", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "fft", "number theory"], "solvedCount": 152}, {"contestId": 1575, "index": "A", "name": "Another Sorting Problem", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "sortings", "strings"], "solvedCount": 4164}, {"contestId": 1574, "index": "D", "name": "The Strongest Build", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "graphs", "greedy", "hashing", "implementation"], "solvedCount": 4302}, {"contestId": 1572, "index": "F", "name": "Stations", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["data structures"], "solvedCount": 234}, {"contestId": 1572, "index": "A", "name": "Book", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "dp", "graphs", "implementation", "sortings"], "solvedCount": 8445}, {"contestId": 1571, "index": "I", "name": "Physical Examination", "type": "PROGRAMMING", "rating": 3200, "tags": ["*special", "binary search", "data structures"], "solvedCount": 54}, {"contestId": 1571, "index": "G", "name": "A Battle Against a Dragon", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "data structures", "dp"], "solvedCount": 71}, {"contestId": 1569, "index": "D", "name": "Inconvenient Pairs", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "implementation", "sortings", "two pointers"], "solvedCount": 4215}, {"contestId": 1567, "index": "E", "name": "Non-Decreasing Dilemma", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "math"], "solvedCount": 3475}, {"contestId": 1566, "index": "G", "name": "Four Vertices", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "shortest paths"], "solvedCount": 323}, {"contestId": 1566, "index": "F", "name": "Points Movement", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 918}, {"contestId": 1566, "index": "D2", "name": "Seating Arrangements (hard version) ", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 7655}, {"contestId": 1566, "index": "D1", "name": "Seating Arrangements (easy version) ", "type": "PROGRAMMING", "points": 750.0, "rating": 1100, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 13672}, {"contestId": 1562, "index": "D2", "name": "Two Hundred Twenty One (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["data structures", "math"], "solvedCount": 2066}, {"contestId": 1562, "index": "D1", "name": "Two Hundred Twenty One (easy version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "dp", "math"], "solvedCount": 6149}, {"contestId": 1561, "index": "D1", "name": "Up the Strip (simplified version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "math", "number theory"], "solvedCount": 5337}, {"contestId": 1558, "index": "F", "name": "Strange Sort", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "sortings"], "solvedCount": 342}, {"contestId": 1558, "index": "D", "name": "Top-Notch Insertions", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["combinatorics", "data structures"], "solvedCount": 919}, {"contestId": 1557, "index": "D", "name": "Ezzat and Grid", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2439}, {"contestId": 1556, "index": "G", "name": "Gates to Another World", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["bitmasks", "data structures", "dsu", "two pointers"], "solvedCount": 301}, {"contestId": 1556, "index": "E", "name": "Equilibrium", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2498}, {"contestId": 1555, "index": "F", "name": "Good Graph", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 817}, {"contestId": 1555, "index": "E", "name": "Boring Segments", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "sortings", "trees", "two pointers"], "solvedCount": 3833}, {"contestId": 1553, "index": "F", "name": "Pairwise Modulo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "math"], "solvedCount": 2084}, {"contestId": 1552, "index": "F", "name": "Telepanting", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "dp", "sortings"], "solvedCount": 2768}, {"contestId": 1552, "index": "E", "name": "Colors and Intervals", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 1759}, {"contestId": 1551, "index": "B2", "name": "Wonderful Coloring - 2", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 14919}, {"contestId": 1550, "index": "F", "name": "Jumping Around", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "data structures", "divide and conquer", "dp", "dsu", "graphs", "shortest paths"], "solvedCount": 619}, {"contestId": 1548, "index": "E", "name": "Gregor and the Two Painters", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "graphs", "greedy", "math"], "solvedCount": 333}, {"contestId": 1548, "index": "B", "name": "Integers Have Friends", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "data structures", "divide and conquer", "math", "number theory", "two pointers"], "solvedCount": 9172}, {"contestId": 1547, "index": "F", "name": "Array Stabilization (GCD version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "number theory", "two pointers"], "solvedCount": 5419}, {"contestId": 1547, "index": "E", "name": "Air Conditioners", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "dp", "implementation", "shortest paths", "sortings", "two pointers"], "solvedCount": 13653}, {"contestId": 1545, "index": "F", "name": "AquaMoon and Potatoes", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["brute force", "data structures", "dp"], "solvedCount": 99}, {"contestId": 1545, "index": "E2", "name": "AquaMoon and Time Stop (hard version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 78}, {"contestId": 1545, "index": "E1", "name": "AquaMoon and Time Stop (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 73}, {"contestId": 1540, "index": "D", "name": "Inverse Inversions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["binary search", "brute force", "data structures"], "solvedCount": 258}, {"contestId": 1539, "index": "F", "name": "Strange Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 829}, {"contestId": 1539, "index": "E", "name": "Game with Cards", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 908}, {"contestId": 1538, "index": "E", "name": "Funny Substrings", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "hashing", "implementation", "matrices", "strings"], "solvedCount": 2777}, {"contestId": 1538, "index": "C", "name": "Number of Pairs", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "data structures", "math", "two pointers"], "solvedCount": 26458}, {"contestId": 1537, "index": "E2", "name": "Erase and Extend (Hard Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "data structures", "greedy", "hashing", "string suffix structures", "strings", "two pointers"], "solvedCount": 4912}, {"contestId": 1536, "index": "D", "name": "Omkar and Medians", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 4527}, {"contestId": 1536, "index": "C", "name": "Diluc and Kaeya", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "dp", "hashing", "number theory"], "solvedCount": 13436}, {"contestId": 1535, "index": "F", "name": "String Distance", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "brute force", "data structures", "hashing", "implementation", "strings"], "solvedCount": 419}, {"contestId": 1535, "index": "E", "name": "Gold Transfer", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "interactive", "trees"], "solvedCount": 2614}, {"contestId": 1535, "index": "D", "name": "Playoff Tournament", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 7430}, {"contestId": 1534, "index": "G", "name": "A New Beginning", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["data structures", "dp", "geometry", "sortings"], "solvedCount": 499}, {"contestId": 1533, "index": "H", "name": "Submatrices", "type": "PROGRAMMING", "tags": ["*special", "bitmasks", "data structures", "dp"], "solvedCount": 79}, {"contestId": 1533, "index": "E", "name": "Chess Team Forming", "type": "PROGRAMMING", "tags": ["*special", "binary search", "data structures", "greedy"], "solvedCount": 267}, {"contestId": 1533, "index": "C", "name": "Sweets", "type": "PROGRAMMING", "tags": ["*special", "data structures", "implementation"], "solvedCount": 455}, {"contestId": 1530, "index": "H", "name": "Turing's Award", "type": "PROGRAMMING", "points": 4750.0, "rating": 3400, "tags": ["data structures", "dp"], "solvedCount": 126}, {"contestId": 1528, "index": "C", "name": "Trees of Tranquillity", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 2489}, {"contestId": 1527, "index": "E", "name": "Partition Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "data structures", "divide and conquer", "dp"], "solvedCount": 2050}, {"contestId": 1526, "index": "D", "name": "Kill Anton", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "data structures", "math", "strings"], "solvedCount": 2341}, {"contestId": 1526, "index": "C2", "name": "Potions (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 20633}, {"contestId": 1526, "index": "C1", "name": "Potions (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy"], "solvedCount": 20872}, {"contestId": 1525, "index": "C", "name": "Robot Collisions", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 4294}, {"contestId": 1523, "index": "H", "name": "Hopping Around the Array ", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures", "dp"], "solvedCount": 232}, {"contestId": 1523, "index": "G", "name": "Try Booking", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["data structures", "divide and conquer"], "solvedCount": 397}, {"contestId": 1523, "index": "C", "name": "Compression and Expansion", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "data structures", "greedy", "implementation", "trees"], "solvedCount": 8549}, {"contestId": 1521, "index": "D", "name": "Nastia Plays with a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "solvedCount": 1782}, {"contestId": 1520, "index": "F2", "name": "Guess the K-th Zero (Hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "data structures", "interactive"], "solvedCount": 2864}, {"contestId": 1520, "index": "D", "name": "Same Differences", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "hashing", "math"], "solvedCount": 41650}, {"contestId": 1519, "index": "C", "name": "Berland Regional", "type": "PROGRAMMING", "rating": 1400, "tags": ["brute force", "data structures", "greedy", "number theory", "sortings"], "solvedCount": 15705}, {"contestId": 1517, "index": "E", "name": "Group Photo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "implementation", "two pointers"], "solvedCount": 943}, {"contestId": 1516, "index": "D", "name": "Cut", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "dp", "graphs", "number theory", "two pointers"], "solvedCount": 4049}, {"contestId": 1515, "index": "I", "name": "Phoenix and Diamonds", "type": "PROGRAMMING", "points": 5000.0, "rating": 3400, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 220}, {"contestId": 1515, "index": "H", "name": "Phoenix and Bits", "type": "PROGRAMMING", "points": 4250.0, "rating": 3500, "tags": ["bitmasks", "brute force", "data structures", "sortings"], "solvedCount": 201}, {"contestId": 1515, "index": "C", "name": "Phoenix and Towers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 16336}, {"contestId": 1514, "index": "D", "name": "Cut and Stick", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 4048}, {"contestId": 1513, "index": "F", "name": "Swapping Problem", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "data structures", "sortings"], "solvedCount": 1182}, {"contestId": 1512, "index": "D", "name": "Corrupted Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 21480}, {"contestId": 1511, "index": "G", "name": "Chips on a Board", "type": "PROGRAMMING", "rating": 2700, "tags": ["bitmasks", "brute force", "data structures", "dp", "games", "two pointers"], "solvedCount": 680}, {"contestId": 1511, "index": "F", "name": "Chainword", "type": "PROGRAMMING", "rating": 2700, "tags": ["brute force", "data structures", "dp", "matrices", "string suffix structures", "strings"], "solvedCount": 409}, {"contestId": 1511, "index": "C", "name": "Yet Another Card Deck", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "data structures", "implementation", "trees"], "solvedCount": 21771}, {"contestId": 1508, "index": "F", "name": "Optimal Encoding", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["brute force", "data structures"], "solvedCount": 111}, {"contestId": 1508, "index": "E", "name": "Tree Calendar", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["brute force", "constructive algorithms", "data structures", "dfs and similar", "sortings", "trees"], "solvedCount": 321}, {"contestId": 1508, "index": "C", "name": "Complete the MST", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1403}, {"contestId": 1506, "index": "G", "name": "Maximize the Remaining String", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "strings"], "solvedCount": 4065}, {"contestId": 1506, "index": "D", "name": "Epic Transformation", "type": "PROGRAMMING", "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 20471}, {"contestId": 1503, "index": "F", "name": "Balance the Cards", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation"], "solvedCount": 124}, {"contestId": 1503, "index": "D", "name": "Flip the Cards", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["2-sat", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 959}, {"contestId": 1503, "index": "C", "name": "Travelling Salesman Problem", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "sortings", "two pointers"], "solvedCount": 3176}, {"contestId": 1500, "index": "E", "name": "Subset Trick", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["binary search", "data structures"], "solvedCount": 209}, {"contestId": 1500, "index": "D", "name": "Tiles for Bathroom", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "sortings", "two pointers"], "solvedCount": 407}, {"contestId": 1499, "index": "G", "name": "Graph Coloring", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "graphs", "interactive"], "solvedCount": 184}, {"contestId": 1499, "index": "C", "name": "Minimum Grid Path", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "greedy", "math"], "solvedCount": 12269}, {"contestId": 1498, "index": "F", "name": "Christmas Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "data structures", "dfs and similar", "dp", "games", "math", "trees"], "solvedCount": 783}, {"contestId": 1498, "index": "C", "name": "Planar Reflections", "type": "PROGRAMMING", "points": 1750.0, "rating": 1600, "tags": ["brute force", "data structures", "dp"], "solvedCount": 9078}, {"contestId": 1498, "index": "B", "name": "Box Fitting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "bitmasks", "data structures", "greedy"], "solvedCount": 15813}, {"contestId": 1497, "index": "E2", "name": "Square-free division (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 1540}, {"contestId": 1497, "index": "E1", "name": "Square-Free Division (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp", "greedy", "math", "number theory", "two pointers"], "solvedCount": 7944}, {"contestId": 1497, "index": "A", "name": "Meximization", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "data structures", "greedy", "sortings"], "solvedCount": 23766}, {"contestId": 1495, "index": "F", "name": "Squares", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "graphs", "trees"], "solvedCount": 273}, {"contestId": 1495, "index": "E", "name": "Qingshan and Daniel", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 390}, {"contestId": 1494, "index": "E", "name": "A-Z Graph", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "data structures", "graphs", "hashing"], "solvedCount": 1645}, {"contestId": 1494, "index": "D", "name": "Dogeforces", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "sortings", "trees"], "solvedCount": 2473}, {"contestId": 1493, "index": "D", "name": "GCD of an Array", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["brute force", "data structures", "hashing", "implementation", "math", "number theory", "sortings", "two pointers"], "solvedCount": 4692}, {"contestId": 1492, "index": "C", "name": "Maximum width", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 15451}, {"contestId": 1492, "index": "B", "name": "Card Deck", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "greedy", "math"], "solvedCount": 18039}, {"contestId": 1491, "index": "I", "name": "Ruler Of The Zoo", "type": "PROGRAMMING", "points": 5000.0, "rating": 3500, "tags": ["brute force", "data structures"], "solvedCount": 71}, {"contestId": 1491, "index": "H", "name": "Yuezheng Ling and Dynamic Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["data structures", "trees"], "solvedCount": 744}, {"contestId": 1491, "index": "C", "name": "Pekora and Trampoline", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["brute force", "data structures", "dp", "greedy", "implementation"], "solvedCount": 7672}, {"contestId": 1490, "index": "G", "name": "Old Floppy Drive ", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "math"], "solvedCount": 5420}, {"contestId": 1490, "index": "F", "name": "Equalize the Array", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "solvedCount": 15252}, {"contestId": 1490, "index": "E", "name": "Accidental Victory", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 18153}, {"contestId": 1488, "index": "J", "name": "Flower Shop", "type": "PROGRAMMING", "rating": 3100, "tags": ["*special", "data structures", "fft", "math"], "solvedCount": 31}, {"contestId": 1488, "index": "H", "name": "Build From Suffixes", "type": "PROGRAMMING", "rating": 2800, "tags": ["*special", "combinatorics", "data structures"], "solvedCount": 51}, {"contestId": 1488, "index": "G", "name": "Painting Numbers", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "data structures", "greedy", "number theory"], "solvedCount": 114}, {"contestId": 1488, "index": "F", "name": "Dogecoin", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "*special", "binary search", "data structures"], "solvedCount": 162}, {"contestId": 1488, "index": "E", "name": "Palindromic Doubles", "type": "PROGRAMMING", "rating": 2200, "tags": ["*special", "data structures", "dp"], "solvedCount": 188}, {"contestId": 1487, "index": "E", "name": "Cheap Dinner", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "graphs", "greedy", "implementation", "sortings", "two pointers"], "solvedCount": 4333}, {"contestId": 1486, "index": "F", "name": "Pairs of Paths", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "trees"], "solvedCount": 616}, {"contestId": 1486, "index": "D", "name": "Max Median", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["binary search", "data structures", "dp"], "solvedCount": 6432}, {"contestId": 1485, "index": "F", "name": "Copy or Prefix Sum", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["combinatorics", "data structures", "dp", "sortings"], "solvedCount": 1830}, {"contestId": 1482, "index": "H", "name": "Exam", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "trees"], "solvedCount": 413}, {"contestId": 1482, "index": "E", "name": "Skyline Photo", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 2896}, {"contestId": 1482, "index": "D", "name": "Playlist", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dsu", "implementation", "shortest paths"], "solvedCount": 3712}, {"contestId": 1481, "index": "E", "name": "Sorting Books", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dp", "greedy"], "solvedCount": 1979}, {"contestId": 1479, "index": "D", "name": "Odd Mineral Resource", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["binary search", "bitmasks", "brute force", "data structures", "probabilities", "trees"], "solvedCount": 933}, {"contestId": 1479, "index": "B2", "name": "Painting the Array II", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 3868}, {"contestId": 1479, "index": "B1", "name": "Painting the Array I", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "implementation"], "solvedCount": 6689}, {"contestId": 1477, "index": "E", "name": "Nezzar and Tournaments", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["data structures", "greedy"], "solvedCount": 116}, {"contestId": 1477, "index": "B", "name": "Nezzar and Binary String", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "greedy"], "solvedCount": 3050}, {"contestId": 1476, "index": "G", "name": "Minimum Difference", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "hashing", "sortings", "two pointers"], "solvedCount": 518}, {"contestId": 1476, "index": "F", "name": "Lanterns", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "data structures", "dp"], "solvedCount": 600}, {"contestId": 1476, "index": "E", "name": "Pattern Matching", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "data structures", "dfs and similar", "graphs", "hashing", "sortings", "strings"], "solvedCount": 2229}, {"contestId": 1474, "index": "D", "name": "Cleaning", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 3854}, {"contestId": 1474, "index": "C", "name": "Array Destruction", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 12090}, {"contestId": 1473, "index": "D", "name": "Program", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "implementation", "strings"], "solvedCount": 9229}, {"contestId": 1472, "index": "E", "name": "Correct Placement", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "sortings", "two pointers"], "solvedCount": 7655}, {"contestId": 1470, "index": "E", "name": "Strange Permutation", "type": "PROGRAMMING", "points": 2000.0, "rating": 3200, "tags": ["binary search", "combinatorics", "data structures", "dp", "graphs", "implementation", "two pointers"], "solvedCount": 289}, {"contestId": 1469, "index": "F", "name": "Power Sockets", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 808}, {"contestId": 1468, "index": "M", "name": "Similar Sets", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "graphs", "implementation"], "solvedCount": 879}, {"contestId": 1468, "index": "C", "name": "Berpizza", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 7348}, {"contestId": 1468, "index": "B", "name": "Bakery", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "dsu"], "solvedCount": 193}, {"contestId": 1468, "index": "A", "name": "LaIS", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dp", "greedy"], "solvedCount": 1555}, {"contestId": 1467, "index": "E", "name": "Distinctive Roots in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 1320}, {"contestId": 1466, "index": "I", "name": "The Riddle of the Sphinx", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["binary search", "data structures", "data structures", "interactive"], "solvedCount": 164}, {"contestId": 1466, "index": "D", "name": "13th Labour of Heracles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "greedy", "sortings", "trees"], "solvedCount": 10676}, {"contestId": 1464, "index": "F", "name": "My Beautiful Madness", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 267}, {"contestId": 1462, "index": "F", "name": "The Treasure of The Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 6589}, {"contestId": 1461, "index": "D", "name": "Divide and Summarize", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "divide and conquer", "implementation", "sortings"], "solvedCount": 8818}, {"contestId": 1458, "index": "F", "name": "Range Diameter Sum", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 257}, {"contestId": 1458, "index": "E", "name": "Nim Shortcuts", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["data structures", "games"], "solvedCount": 400}, {"contestId": 1458, "index": "D", "name": "Flip and Reverse", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["data structures", "graphs", "greedy"], "solvedCount": 957}, {"contestId": 1455, "index": "G", "name": "Forbidden Value", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "dp"], "solvedCount": 393}, {"contestId": 1454, "index": "F", "name": "Array Partition", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 3755}, {"contestId": 1452, "index": "G", "name": "Game On Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 447}, {"contestId": 1450, "index": "D", "name": "Rating Compression", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["binary search", "data structures", "greedy", "implementation", "two pointers"], "solvedCount": 5266}, {"contestId": 1446, "index": "F", "name": "Line Distance", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["binary search", "data structures", "geometry"], "solvedCount": 263}, {"contestId": 1446, "index": "D2", "name": "Frequency Problem (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 3000, "tags": ["data structures", "greedy", "two pointers"], "solvedCount": 1177}, {"contestId": 1446, "index": "D1", "name": "Frequency Problem (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["data structures", "greedy"], "solvedCount": 1567}, {"contestId": 1446, "index": "C", "name": "Xor Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "dp", "trees"], "solvedCount": 3362}, {"contestId": 1444, "index": "C", "name": "Team-Building", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "solvedCount": 1432}, {"contestId": 1442, "index": "D", "name": "Sum", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 1896}, {"contestId": 1442, "index": "B", "name": "Identify the Operations", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["combinatorics", "data structures", "dsu", "greedy", "implementation"], "solvedCount": 4283}, {"contestId": 1439, "index": "E", "name": "Cheat and Win", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["bitmasks", "data structures", "games", "trees"], "solvedCount": 213}, {"contestId": 1439, "index": "C", "name": "Greedy Shopping", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["binary search", "data structures", "divide and conquer", "greedy", "implementation"], "solvedCount": 1658}, {"contestId": 1439, "index": "B", "name": "Graph Subset Problem", "type": "PROGRAMMING", "points": 1250.0, "rating": 2600, "tags": ["constructive algorithms", "data structures", "graphs"], "solvedCount": 1344}, {"contestId": 1438, "index": "B", "name": "Valerii Against Everyone", "type": "PROGRAMMING", "points": 750.0, "rating": 1000, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 18126}, {"contestId": 1437, "index": "G", "name": "Death DBMS", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 926}, {"contestId": 1437, "index": "E", "name": "Make It Increasing", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "implementation"], "solvedCount": 3304}, {"contestId": 1436, "index": "E", "name": "Complicated Computations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 2090}, {"contestId": 1430, "index": "E", "name": "String Reversal", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy", "strings"], "solvedCount": 6113}, {"contestId": 1430, "index": "D", "name": "String Deletion", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 8627}, {"contestId": 1430, "index": "C", "name": "Numbers on Whiteboard", "type": "PROGRAMMING", "rating": 1000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation", "math"], "solvedCount": 23108}, {"contestId": 1428, "index": "F", "name": "Fruit Sequences", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 2147}, {"contestId": 1428, "index": "E", "name": "Carrots for Rabbits", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "data structures", "greedy", "math", "sortings"], "solvedCount": 3468}, {"contestId": 1428, "index": "C", "name": "ABBB", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["brute force", "data structures", "greedy", "strings"], "solvedCount": 19519}, {"contestId": 1427, "index": "F", "name": "Boring Card Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "greedy", "trees"], "solvedCount": 297}, {"contestId": 1426, "index": "D", "name": "Non-zero Segments", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 15337}, {"contestId": 1425, "index": "I", "name": "Impressive Harvesting of The Orchard", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"], "solvedCount": 224}, {"contestId": 1424, "index": "G", "name": "Years", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "sortings"], "solvedCount": 5596}, {"contestId": 1423, "index": "H", "name": "Virus", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "dsu", "graphs"], "solvedCount": 493}, {"contestId": 1423, "index": "G", "name": "Growing flowers", "type": "PROGRAMMING", "rating": 3500, "tags": ["data structures"], "solvedCount": 169}, {"contestId": 1422, "index": "F", "name": "Boring Queries", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["data structures", "math", "number theory"], "solvedCount": 949}, {"contestId": 1420, "index": "D", "name": "Rescue Nibel!", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["combinatorics", "data structures", "sortings"], "solvedCount": 7263}, {"contestId": 1420, "index": "C2", "name": "Pok\u00e9mon Army (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "greedy", "implementation"], "solvedCount": 4466}, {"contestId": 1419, "index": "F", "name": "Rain of Fire", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "implementation"], "solvedCount": 471}, {"contestId": 1418, "index": "G", "name": "Three Occurrences", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "hashing", "two pointers"], "solvedCount": 1414}, {"contestId": 1418, "index": "F", "name": "Equal Product", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "math", "number theory", "two pointers"], "solvedCount": 346}, {"contestId": 1418, "index": "D", "name": "Trash Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "implementation"], "solvedCount": 4143}, {"contestId": 1416, "index": "E", "name": "Split", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["binary search", "data structures", "dp", "greedy"], "solvedCount": 267}, {"contestId": 1416, "index": "D", "name": "Graph and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "dsu", "graphs", "implementation", "trees"], "solvedCount": 1802}, {"contestId": 1416, "index": "C", "name": "XOR Inverse", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "divide and conquer", "dp", "greedy", "math", "sortings", "strings", "trees"], "solvedCount": 4131}, {"contestId": 1416, "index": "A", "name": "k-Amazing Numbers", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "data structures", "implementation", "two pointers"], "solvedCount": 11534}, {"contestId": 1413, "index": "F", "name": "Roads and Ramen", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "trees"], "solvedCount": 687}, {"contestId": 1413, "index": "D", "name": "Shurikens", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 6291}, {"contestId": 1408, "index": "H", "name": "Rainbow Triples", "type": "PROGRAMMING", "points": 3750.0, "rating": 3300, "tags": ["binary search", "data structures", "flows", "greedy"], "solvedCount": 344}, {"contestId": 1408, "index": "E", "name": "Avoid Rainbow Cycles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1856}, {"contestId": 1408, "index": "D", "name": "Searchlights", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "sortings", "two pointers"], "solvedCount": 4124}, {"contestId": 1407, "index": "D", "name": "Discrete Centrifugal Jumps", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "dp", "graphs"], "solvedCount": 4575}, {"contestId": 1406, "index": "D", "name": "Three Sequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 3336}, {"contestId": 1404, "index": "C", "name": "Fixed Point Removal", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "two pointers"], "solvedCount": 2466}, {"contestId": 1403, "index": "B", "name": "Spring cleaning", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 356}, {"contestId": 1403, "index": "A", "name": "The Potion of Great Power", "type": "PROGRAMMING", "rating": 2400, "tags": ["*special", "2-sat", "binary search", "data structures", "graphs", "interactive", "sortings", "two pointers"], "solvedCount": 281}, {"contestId": 1402, "index": "A", "name": "Fancy Fence", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "data structures", "dsu", "implementation", "math", "sortings"], "solvedCount": 1122}, {"contestId": 1401, "index": "F", "name": "Reverse and Swap", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "bitmasks", "data structures"], "solvedCount": 1455}, {"contestId": 1401, "index": "E", "name": "Divide Square", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "geometry", "implementation", "sortings"], "solvedCount": 2134}, {"contestId": 1400, "index": "E", "name": "Clear the Multiset", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 4964}, {"contestId": 1400, "index": "D", "name": "Zigzags", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "combinatorics", "data structures", "math", "two pointers"], "solvedCount": 9715}, {"contestId": 1399, "index": "F", "name": "Yet Another Segments Subset", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "graphs", "sortings"], "solvedCount": 1531}, {"contestId": 1399, "index": "E1", "name": "Weights Division (easy version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 5622}, {"contestId": 1399, "index": "D", "name": "Binary String To Subsequences", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 17512}, {"contestId": 1398, "index": "F", "name": "Controversial Rounds", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 1060}, {"contestId": 1398, "index": "E", "name": "Two Types of Spells", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "greedy", "implementation", "math", "sortings"], "solvedCount": 2159}, {"contestId": 1398, "index": "C", "name": "Good Subarrays", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "math"], "solvedCount": 23735}, {"contestId": 1396, "index": "D", "name": "Rainbow Rectangles", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["data structures", "sortings", "two pointers"], "solvedCount": 294}, {"contestId": 1393, "index": "B", "name": "Applejack and Storages", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 16170}, {"contestId": 1392, "index": "F", "name": "Omkar and Landslide", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 1917}, {"contestId": 1389, "index": "F", "name": "Bicolored Segments", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "graph matchings", "sortings"], "solvedCount": 937}, {"contestId": 1388, "index": "E", "name": "Uncle Bogdan and Projections", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["data structures", "geometry", "sortings"], "solvedCount": 387}, {"contestId": 1388, "index": "D", "name": "Captain Flint and Treasure", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "solvedCount": 6082}, {"contestId": 1386, "index": "C", "name": "Joker", "type": "PROGRAMMING", "rating": 2800, "tags": ["*special", "bitmasks", "data structures", "divide and conquer", "dsu"], "solvedCount": 421}, {"contestId": 1386, "index": "B", "name": "Mixture", "type": "PROGRAMMING", "rating": 2900, "tags": ["*special", "data structures", "geometry", "math", "sortings"], "solvedCount": 116}, {"contestId": 1385, "index": "F", "name": "Removing Leaves", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy", "implementation", "trees"], "solvedCount": 2219}, {"contestId": 1383, "index": "E", "name": "Strange Operation", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["combinatorics", "data structures", "dp"], "solvedCount": 737}, {"contestId": 1381, "index": "A2", "name": "Prefix Flip (Hard Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "implementation", "strings", "two pointers"], "solvedCount": 12687}, {"contestId": 1381, "index": "A1", "name": "Prefix Flip (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["constructive algorithms", "data structures", "strings"], "solvedCount": 19747}, {"contestId": 1380, "index": "F", "name": "Strange Addition", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "matrices"], "solvedCount": 746}, {"contestId": 1380, "index": "E", "name": "Merging Towers", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dsu", "implementation", "trees"], "solvedCount": 1889}, {"contestId": 1380, "index": "A", "name": "Three Indices", "type": "PROGRAMMING", "rating": 900, "tags": ["brute force", "data structures"], "solvedCount": 22659}, {"contestId": 1379, "index": "F2", "name": "Chess Strikes Back (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 454}, {"contestId": 1379, "index": "F1", "name": "Chess Strikes Back (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["binary search", "data structures"], "solvedCount": 546}, {"contestId": 1379, "index": "D", "name": "New Passenger Trams", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "brute force", "data structures", "sortings", "two pointers"], "solvedCount": 1050}, {"contestId": 1379, "index": "C", "name": "Choosing flowers", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "dfs and similar", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 5357}, {"contestId": 1375, "index": "C", "name": "Element Extermination", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 20292}, {"contestId": 1374, "index": "E2", "name": "Reading Books (hard version)", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "greedy", "implementation", "sortings", "ternary search", "two pointers"], "solvedCount": 893}, {"contestId": 1374, "index": "E1", "name": "Reading Books (easy version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 13446}, {"contestId": 1373, "index": "G", "name": "Pawns", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "greedy"], "solvedCount": 748}, {"contestId": 1373, "index": "F", "name": "Network Coverage", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 1602}, {"contestId": 1371, "index": "F", "name": "Raging Thunder", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation"], "solvedCount": 498}, {"contestId": 1370, "index": "E", "name": "Binary Subsequence Rotation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 4588}, {"contestId": 1369, "index": "E", "name": "DeadLee", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "greedy", "implementation", "sortings"], "solvedCount": 2011}, {"contestId": 1368, "index": "G", "name": "Shifting Dominoes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["data structures", "geometry", "graphs", "trees"], "solvedCount": 388}, {"contestId": 1367, "index": "F2", "name": "Flying Sort (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 1434}, {"contestId": 1366, "index": "G", "name": "Construct the String", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "strings"], "solvedCount": 525}, {"contestId": 1365, "index": "C", "name": "Rotation Matching", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 22069}, {"contestId": 1364, "index": "A", "name": "XXXXX", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["brute force", "data structures", "number theory", "two pointers"], "solvedCount": 26555}, {"contestId": 1361, "index": "F", "name": "Johnny and New Toy", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "implementation", "math"], "solvedCount": 140}, {"contestId": 1359, "index": "F", "name": "RC Kaboom Show", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "brute force", "data structures", "geometry", "math"], "solvedCount": 346}, {"contestId": 1359, "index": "D", "name": "Yet Another Yet Another Task", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "implementation", "two pointers"], "solvedCount": 8866}, {"contestId": 1358, "index": "E", "name": "Are You Fired?", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 2067}, {"contestId": 1354, "index": "D", "name": "Multiset", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures"], "solvedCount": 8178}, {"contestId": 1353, "index": "D", "name": "Constructing the Array", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "data structures", "sortings"], "solvedCount": 17207}, {"contestId": 1351, "index": "C", "name": "Skier", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 8155}, {"contestId": 1349, "index": "A", "name": "Orac and LCM", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "math", "number theory"], "solvedCount": 15738}, {"contestId": 1348, "index": "F", "name": "Phoenix and Memory", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["data structures", "dfs and similar", "graphs", "greedy"], "solvedCount": 759}, {"contestId": 1348, "index": "B", "name": "Phoenix and Beauty", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 24407}, {"contestId": 1346, "index": "H", "name": "Game with Segments", "type": "PROGRAMMING", "rating": 2700, "tags": ["*special", "data structures", "games"], "solvedCount": 44}, {"contestId": 1346, "index": "F", "name": "Dune II: Battle For Arrakis", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "data structures", "greedy", "math"], "solvedCount": 217}, {"contestId": 1344, "index": "E", "name": "Train Tracks", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 256}, {"contestId": 1343, "index": "F", "name": "Restore the Permutation by Sorted Segments", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 1223}, {"contestId": 1343, "index": "D", "name": "Constant Palindrome Sum", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "data structures", "greedy", "two pointers"], "solvedCount": 12144}, {"contestId": 1342, "index": "D", "name": "Multiple Testcases", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 5811}, {"contestId": 1340, "index": "F", "name": "Nastya and CBS", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["brute force", "data structures", "hashing"], "solvedCount": 466}, {"contestId": 1340, "index": "A", "name": "Nastya and Strange Generator", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 13119}, {"contestId": 1336, "index": "F", "name": "Journey", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "graphs", "trees"], "solvedCount": 187}, {"contestId": 1335, "index": "F", "name": "Robots on a Grid", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "matrices"], "solvedCount": 1945}, {"contestId": 1335, "index": "E2", "name": "Three Blocks Palindrome (hard version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp", "two pointers"], "solvedCount": 7896}, {"contestId": 1335, "index": "E1", "name": "Three Blocks Palindrome (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "solvedCount": 10349}, {"contestId": 1334, "index": "F", "name": "Strange Function", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "greedy"], "solvedCount": 1050}, {"contestId": 1333, "index": "C", "name": "Eugene and an array", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["binary search", "data structures", "implementation", "two pointers"], "solvedCount": 12049}, {"contestId": 1332, "index": "G", "name": "No Monotone Triples", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 276}, {"contestId": 1329, "index": "D", "name": "Dreamoon Likes Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["constructive algorithms", "data structures"], "solvedCount": 334}, {"contestId": 1329, "index": "C", "name": "Drazil Likes Heap", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 1497}, {"contestId": 1327, "index": "F", "name": "AND Segments", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "combinatorics", "data structures", "dp", "two pointers"], "solvedCount": 1594}, {"contestId": 1326, "index": "E", "name": "Bombs", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "two pointers"], "solvedCount": 1946}, {"contestId": 1324, "index": "D", "name": "Pair of Topics", "type": "PROGRAMMING", "rating": 1400, "tags": ["binary search", "data structures", "sortings", "two pointers"], "solvedCount": 26351}, {"contestId": 1324, "index": "C", "name": "Frog Jumps", "type": "PROGRAMMING", "rating": 1100, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "implementation"], "solvedCount": 26631}, {"contestId": 1322, "index": "E", "name": "Median Mountain Range", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 292}, {"contestId": 1322, "index": "B", "name": "Present", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["binary search", "bitmasks", "constructive algorithms", "data structures", "math", "sortings"], "solvedCount": 3867}, {"contestId": 1320, "index": "E", "name": "Treeland and Viruses", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "shortest paths", "trees"], "solvedCount": 611}, {"contestId": 1320, "index": "D", "name": "Reachable Strings", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "hashing", "strings"], "solvedCount": 1177}, {"contestId": 1320, "index": "C", "name": "World of Darkraft: Battle for Azathoth", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "data structures", "sortings"], "solvedCount": 2840}, {"contestId": 1320, "index": "A", "name": "Journey Planning", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "dp", "greedy", "math", "sortings"], "solvedCount": 15200}, {"contestId": 1316, "index": "F", "name": "Battalion Strength", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "probabilities"], "solvedCount": 503}, {"contestId": 1313, "index": "E", "name": "Concatenation with intersection", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "hashing", "strings", "two pointers"], "solvedCount": 504}, {"contestId": 1313, "index": "C2", "name": "Skyscrapers (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dp", "greedy"], "solvedCount": 6061}, {"contestId": 1313, "index": "C1", "name": "Skyscrapers (easy version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "dp", "greedy"], "solvedCount": 9972}, {"contestId": 1312, "index": "G", "name": "Autocompletion", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dfs and similar", "dp"], "solvedCount": 741}, {"contestId": 1311, "index": "F", "name": "Moving Points", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "implementation", "sortings"], "solvedCount": 3849}, {"contestId": 1310, "index": "A", "name": "Recommendations", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 4863}, {"contestId": 1307, "index": "D", "name": "Cow and Fields", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "sortings"], "solvedCount": 5923}, {"contestId": 1304, "index": "F2", "name": "Animal Observation (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["data structures", "dp", "greedy"], "solvedCount": 1269}, {"contestId": 1304, "index": "F1", "name": "Animal Observation (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dp"], "solvedCount": 1515}, {"contestId": 1304, "index": "E", "name": "1-Trees and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "shortest paths", "trees"], "solvedCount": 4811}, {"contestId": 1303, "index": "G", "name": "Sum of Prefix Sums", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "geometry", "trees"], "solvedCount": 699}, {"contestId": 1302, "index": "C", "name": "Segment tree or Fenwick?", "type": "PROGRAMMING", "tags": ["data structures"], "solvedCount": 375}, {"contestId": 1301, "index": "E", "name": "Nanosoft", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "dp", "implementation"], "solvedCount": 1189}, {"contestId": 1299, "index": "C", "name": "Water Balance", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "geometry", "greedy"], "solvedCount": 3553}, {"contestId": 1297, "index": "I", "name": "Falling Blocks", "type": "PROGRAMMING", "tags": ["*special", "data structures"], "solvedCount": 27}, {"contestId": 1297, "index": "F", "name": "Movie Fan", "type": "PROGRAMMING", "tags": ["*special", "data structures", "greedy", "implementation", "sortings"], "solvedCount": 109}, {"contestId": 1296, "index": "E2", "name": "String Coloring (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp"], "solvedCount": 4659}, {"contestId": 1296, "index": "C", "name": "Yet Another Walking Robot", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 14283}, {"contestId": 1295, "index": "E", "name": "Permutation Separation", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer"], "solvedCount": 2278}, {"contestId": 1294, "index": "D", "name": "MEX maximizing", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "greedy", "implementation", "math"], "solvedCount": 11180}, {"contestId": 1292, "index": "A", "name": "NEKO's Maze Game", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "dsu", "implementation"], "solvedCount": 12843}, {"contestId": 1290, "index": "E", "name": "Cartesian Tree ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 501}, {"contestId": 1290, "index": "B", "name": "Irreducible Anagrams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["binary search", "constructive algorithms", "data structures", "strings", "two pointers"], "solvedCount": 4795}, {"contestId": 1290, "index": "A", "name": "Mind Control", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 8237}, {"contestId": 1288, "index": "E", "name": "Messenger Simulator", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures"], "solvedCount": 3254}, {"contestId": 1287, "index": "B", "name": "Hyperset", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 9098}, {"contestId": 1286, "index": "E", "name": "Fedya the Potter Strikes Back", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "strings"], "solvedCount": 472}, {"contestId": 1286, "index": "D", "name": "LCC", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["data structures", "math", "matrices", "probabilities"], "solvedCount": 543}, {"contestId": 1286, "index": "B", "name": "Numbers on Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 4315}, {"contestId": 1285, "index": "E", "name": "Delete a Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "sortings", "trees", "two pointers"], "solvedCount": 1603}, {"contestId": 1284, "index": "F", "name": "New Year and Social Network", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "graph matchings", "graphs", "math", "trees"], "solvedCount": 305}, {"contestId": 1284, "index": "D", "name": "New Year and Conference", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "hashing", "sortings"], "solvedCount": 2858}, {"contestId": 1284, "index": "B", "name": "New Year and Ascent Sequence", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["binary search", "combinatorics", "data structures", "dp", "implementation", "sortings"], "solvedCount": 10502}, {"contestId": 1283, "index": "C", "name": "Friends and Gifts", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "data structures", "math"], "solvedCount": 12678}, {"contestId": 1282, "index": "E", "name": "The Cake Is a Lie", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs"], "solvedCount": 935}, {"contestId": 1279, "index": "C", "name": "Stack of Presents", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 11307}, {"contestId": 1278, "index": "D", "name": "Segment Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 3653}, {"contestId": 1278, "index": "C", "name": "Berry Jam", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "dp", "greedy", "implementation"], "solvedCount": 7526}, {"contestId": 1277, "index": "D", "name": "Let's Play the Words?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "hashing", "implementation", "math"], "solvedCount": 2909}, {"contestId": 1276, "index": "C", "name": "Beautiful Rectangle", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 1400}, {"contestId": 1271, "index": "D", "name": "Portals", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 2717}, {"contestId": 1270, "index": "H", "name": "Number of Components", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 547}, {"contestId": 1268, "index": "C", "name": "K Integers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "data structures"], "solvedCount": 1654}, {"contestId": 1266, "index": "E", "name": "Spaceship Solitaire", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 2013}, {"contestId": 1266, "index": "D", "name": "Decreasing Debts", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "implementation", "math", "two pointers"], "solvedCount": 3351}, {"contestId": 1265, "index": "E", "name": "Beautiful Mirrors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dp", "math", "probabilities"], "solvedCount": 3234}, {"contestId": 1265, "index": "B", "name": "Beautiful Numbers", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation", "math", "two pointers"], "solvedCount": 12227}, {"contestId": 1264, "index": "C", "name": "Beautiful Mirrors with queries", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "probabilities"], "solvedCount": 1116}, {"contestId": 1263, "index": "F", "name": "Economic Difficulties", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dp", "flows", "graphs", "trees"], "solvedCount": 830}, {"contestId": 1263, "index": "E", "name": "Editor", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "implementation"], "solvedCount": 2540}, {"contestId": 1260, "index": "F", "name": "Colored Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "trees"], "solvedCount": 473}, {"contestId": 1257, "index": "E", "name": "The Contest", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dp", "greedy"], "solvedCount": 4090}, {"contestId": 1257, "index": "D", "name": "Yet Another Monster Killing Problem", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dp", "greedy", "sortings", "two pointers"], "solvedCount": 7160}, {"contestId": 1254, "index": "D", "name": "Tree Queries", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "probabilities", "trees"], "solvedCount": 1107}, {"contestId": 1253, "index": "E", "name": "Antenna Coverage", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "sortings"], "solvedCount": 2580}, {"contestId": 1252, "index": "K", "name": "Addition Robot", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "math", "matrices"], "solvedCount": 1774}, {"contestId": 1252, "index": "G", "name": "Performance Review", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"], "solvedCount": 1356}, {"contestId": 1252, "index": "D", "name": "Find String in a Grid", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "dp", "strings", "trees"], "solvedCount": 259}, {"contestId": 1252, "index": "C", "name": "Even Path", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "implementation"], "solvedCount": 3614}, {"contestId": 1251, "index": "E2", "name": "Voting (Hard Version)", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 2320}, {"contestId": 1251, "index": "E1", "name": "Voting (Easy Version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2072}, {"contestId": 1250, "index": "C", "name": "Trip to Saint Petersburg", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"], "solvedCount": 1282}, {"contestId": 1249, "index": "D2", "name": "Too Many Segments (hard version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 4825}, {"contestId": 1239, "index": "C", "name": "Queue in the Train", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 1302}, {"contestId": 1238, "index": "G", "name": "Adilbek and the Watering System", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 386}, {"contestId": 1237, "index": "G", "name": "Balanced Distribution", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "dp", "greedy"], "solvedCount": 109}, {"contestId": 1237, "index": "D", "name": "Balanced Playlist", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 3767}, {"contestId": 1237, "index": "B", "name": "Balanced Tunnel", "type": "PROGRAMMING", "points": 750.0, "rating": 1300, "tags": ["data structures", "sortings", "two pointers"], "solvedCount": 14349}, {"contestId": 1236, "index": "E", "name": "Alice and the Unfair Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "data structures", "dp", "dsu"], "solvedCount": 628}, {"contestId": 1236, "index": "D", "name": "Alice and the Doll", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["brute force", "data structures", "greedy", "implementation"], "solvedCount": 1634}, {"contestId": 1234, "index": "D", "name": "Distinct Characters Queries", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures"], "solvedCount": 13983}, {"contestId": 1234, "index": "B2", "name": "Social Network (hard version)", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "implementation"], "solvedCount": 16377}, {"contestId": 1227, "index": "D2", "name": "Optimal Subsequences (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 4206}, {"contestId": 1227, "index": "D1", "name": "Optimal Subsequences (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 6096}, {"contestId": 1223, "index": "F", "name": "Stack Exterminable Arrays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "hashing"], "solvedCount": 1922}, {"contestId": 1221, "index": "F", "name": "Choose a Square", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 965}, {"contestId": 1220, "index": "F", "name": "Gardener Alex", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["binary search", "data structures"], "solvedCount": 644}, {"contestId": 1218, "index": "F", "name": "Workout plan", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "greedy"], "solvedCount": 2865}, {"contestId": 1218, "index": "B", "name": "Guarding warehouses", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "geometry"], "solvedCount": 65}, {"contestId": 1217, "index": "F", "name": "Forced Online Queries Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu", "graphs", "trees"], "solvedCount": 534}, {"contestId": 1217, "index": "E", "name": "Sum Queries?", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy", "implementation", "math"], "solvedCount": 1628}, {"contestId": 1216, "index": "F", "name": "Wi-Fi", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2309}, {"contestId": 1214, "index": "G", "name": "Feeling Good", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["bitmasks", "data structures"], "solvedCount": 271}, {"contestId": 1214, "index": "C", "name": "Bad Sequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1200, "tags": ["data structures", "greedy"], "solvedCount": 12766}, {"contestId": 1213, "index": "F", "name": "Unstable String Sort", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "strings"], "solvedCount": 2289}, {"contestId": 1213, "index": "B", "name": "Bad Prices", "type": "PROGRAMMING", "rating": 1100, "tags": ["data structures", "implementation"], "solvedCount": 25342}, {"contestId": 1209, "index": "H", "name": "Moving Walkways", "type": "PROGRAMMING", "points": 4000.0, "rating": 3300, "tags": ["data structures", "greedy", "math"], "solvedCount": 132}, {"contestId": 1209, "index": "G2", "name": "Into Blocks (hard version)", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures"], "solvedCount": 371}, {"contestId": 1209, "index": "G1", "name": "Into Blocks (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dsu", "greedy", "implementation", "two pointers"], "solvedCount": 2815}, {"contestId": 1209, "index": "F", "name": "Koala and Notebook", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths", "strings", "trees"], "solvedCount": 1058}, {"contestId": 1208, "index": "H", "name": "Red Blue Tree", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "implementation", "trees"], "solvedCount": 138}, {"contestId": 1208, "index": "E", "name": "Let Them Slide", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "implementation"], "solvedCount": 1948}, {"contestId": 1208, "index": "D", "name": "Restore Permutation", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "greedy", "implementation"], "solvedCount": 4631}, {"contestId": 1207, "index": "G", "name": "Indie Album", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "solvedCount": 925}, {"contestId": 1207, "index": "F", "name": "Remainder Problem", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 4633}, {"contestId": 1204, "index": "D2", "name": "Kirk and a Binary String (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2100, "tags": ["data structures", "greedy", "math", "strings"], "solvedCount": 2958}, {"contestId": 1202, "index": "C", "name": "You Are Given a WASD-string...", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "data structures", "dp", "greedy", "implementation", "math", "strings"], "solvedCount": 2326}, {"contestId": 1200, "index": "F", "name": "Graph Traveler", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "graphs", "implementation", "math", "number theory"], "solvedCount": 894}, {"contestId": 1200, "index": "D", "name": "White Lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "implementation", "two pointers"], "solvedCount": 3870}, {"contestId": 1200, "index": "A", "name": "Hotelier", "type": "PROGRAMMING", "points": 500.0, "rating": 800, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 19850}, {"contestId": 1198, "index": "B", "name": "Welfare State", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "sortings"], "solvedCount": 9119}, {"contestId": 1197, "index": "E", "name": "Culture Code", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "combinatorics", "data structures", "dp", "shortest paths", "sortings"], "solvedCount": 1443}, {"contestId": 1196, "index": "D2", "name": "RGB Substring (hard version)", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dp", "implementation", "two pointers"], "solvedCount": 9267}, {"contestId": 1195, "index": "F", "name": "Geometers Anonymous Club", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["data structures", "geometry", "math", "sortings"], "solvedCount": 664}, {"contestId": 1195, "index": "E", "name": "OpenStreetMap", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "two pointers"], "solvedCount": 2788}, {"contestId": 1194, "index": "E", "name": "Count The Rectangles", "type": "PROGRAMMING", "rating": 2200, "tags": ["bitmasks", "brute force", "data structures", "geometry", "sortings"], "solvedCount": 1717}, {"contestId": 1193, "index": "B", "name": "Magic Tree", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dp", "trees"], "solvedCount": 411}, {"contestId": 1192, "index": "B", "name": "Dynamic Diameter", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "trees"], "solvedCount": 980}, {"contestId": 1190, "index": "D", "name": "Tokitsukaze and Strange Rectangle", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "divide and conquer", "sortings", "two pointers"], "solvedCount": 2203}, {"contestId": 1189, "index": "C", "name": "Candies!", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["data structures", "dp", "implementation", "math"], "solvedCount": 10221}, {"contestId": 1187, "index": "D", "name": "Subarray Sorting", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "sortings"], "solvedCount": 2432}, {"contestId": 1185, "index": "C2", "name": "Exam in BerSU (hard version)", "type": "PROGRAMMING", "points": 750.0, "rating": 1700, "tags": ["brute force", "data structures", "greedy", "math"], "solvedCount": 7117}, {"contestId": 1184, "index": "E3", "name": "Daleks' Invasion (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 483}, {"contestId": 1184, "index": "C2", "name": "Heidi and the Turing Test (Medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures"], "solvedCount": 591}, {"contestId": 1182, "index": "F", "name": "Maximum Sine", "type": "PROGRAMMING", "points": 2750.0, "rating": 2700, "tags": ["binary search", "data structures", "number theory"], "solvedCount": 327}, {"contestId": 1182, "index": "C", "name": "Beautiful Lyrics", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "greedy", "strings"], "solvedCount": 4373}, {"contestId": 1181, "index": "D", "name": "Irrigation", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "data structures", "implementation", "sortings", "trees", "two pointers"], "solvedCount": 1993}, {"contestId": 1179, "index": "D", "name": "Fedor Runs for President", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dp", "trees"], "solvedCount": 741}, {"contestId": 1179, "index": "C", "name": "Serge and Dining Room", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "graph matchings", "greedy", "implementation", "math", "trees"], "solvedCount": 1932}, {"contestId": 1179, "index": "A", "name": "Valeriy and Deque", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 10067}, {"contestId": 1178, "index": "G", "name": "The Awesomest Vertex", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["data structures", "dfs and similar"], "solvedCount": 397}, {"contestId": 1175, "index": "G", "name": "Yet Another Partiton Problem", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "divide and conquer", "dp", "geometry", "two pointers"], "solvedCount": 410}, {"contestId": 1175, "index": "F", "name": "The Number of Subpermutations", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "divide and conquer", "hashing", "math"], "solvedCount": 1505}, {"contestId": 1175, "index": "E", "name": "Minimal Segment Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"], "solvedCount": 3130}, {"contestId": 1175, "index": "B", "name": "Catch Overflow!", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "expression parsing", "implementation"], "solvedCount": 10019}, {"contestId": 1172, "index": "F", "name": "Nauuo and Bug", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 392}, {"contestId": 1172, "index": "E", "name": "Nauuo and ODT", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 259}, {"contestId": 1170, "index": "D", "name": "Decoding of Integer Sequences", "type": "PROGRAMMING", "tags": ["*special", "data structures", "implementation"], "solvedCount": 410}, {"contestId": 1167, "index": "F", "name": "Scalar Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["combinatorics", "data structures", "math", "sortings"], "solvedCount": 1421}, {"contestId": 1167, "index": "E", "name": "Range Deleting", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "combinatorics", "data structures", "two pointers"], "solvedCount": 2375}, {"contestId": 1166, "index": "F", "name": "Vicky's Delivery Service", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dsu", "graphs", "hashing"], "solvedCount": 680}, {"contestId": 1165, "index": "B", "name": "Polycarp Training", "type": "PROGRAMMING", "rating": 1000, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 20054}, {"contestId": 1163, "index": "F", "name": "Indecisive Taxi Fee", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 803}, {"contestId": 1163, "index": "E", "name": "Magical Permutation", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "brute force", "constructive algorithms", "data structures", "graphs", "math"], "solvedCount": 636}, {"contestId": 1163, "index": "C2", "name": "Power Transmission (Hard Edition)", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["data structures", "geometry", "implementation", "math"], "solvedCount": 3378}, {"contestId": 1163, "index": "B2", "name": "Cat Party (Hard Edition)", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "implementation"], "solvedCount": 6858}, {"contestId": 1163, "index": "B1", "name": "Cat Party (Easy Edition)", "type": "PROGRAMMING", "points": 750.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 6684}, {"contestId": 1158, "index": "C", "name": "Permutation recovery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "math", "sortings"], "solvedCount": 1667}, {"contestId": 1157, "index": "E", "name": "Minimum Array", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 7951}, {"contestId": 1156, "index": "E", "name": "Special Segments of Permutation", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "divide and conquer", "dsu", "two pointers"], "solvedCount": 2721}, {"contestId": 1155, "index": "D", "name": "Beautiful Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["brute force", "data structures", "divide and conquer", "dp", "greedy"], "solvedCount": 6615}, {"contestId": 1154, "index": "E", "name": "Two Teams", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 5855}, {"contestId": 1151, "index": "E", "name": "Number of Components", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["combinatorics", "data structures", "dp", "math"], "solvedCount": 3000}, {"contestId": 1149, "index": "C", "name": "Tree Generator\u2122", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "implementation", "trees"], "solvedCount": 1157}, {"contestId": 1148, "index": "H", "name": "Holy Diver ", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures"], "solvedCount": 235}, {"contestId": 1146, "index": "E", "name": "Hot is Cold", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "implementation"], "solvedCount": 818}, {"contestId": 1142, "index": "B", "name": "Lynyrd Skynyrd", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "math", "trees"], "solvedCount": 2601}, {"contestId": 1141, "index": "F2", "name": "Same Sum Blocks (Hard)", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy"], "solvedCount": 4026}, {"contestId": 1140, "index": "G", "name": "Double Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "shortest paths", "trees"], "solvedCount": 434}, {"contestId": 1140, "index": "F", "name": "Extending Set of Points", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu"], "solvedCount": 1099}, {"contestId": 1140, "index": "C", "name": "Playlist", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "sortings"], "solvedCount": 9071}, {"contestId": 1139, "index": "F", "name": "Dish Shopping", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer"], "solvedCount": 362}, {"contestId": 1137, "index": "F", "name": "Matches Are Not a Child's Play ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["data structures", "trees"], "solvedCount": 426}, {"contestId": 1137, "index": "E", "name": "Train Car Selection", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "greedy"], "solvedCount": 481}, {"contestId": 1136, "index": "E", "name": "Nastya Hasn't Written a Legend", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 1035}, {"contestId": 1132, "index": "G", "name": "Greedy Subsequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "trees"], "solvedCount": 941}, {"contestId": 1131, "index": "G", "name": "Most Dangerous Shark", "type": "PROGRAMMING", "points": 3500.0, "rating": 2700, "tags": ["data structures", "dp", "two pointers"], "solvedCount": 397}, {"contestId": 1129, "index": "D", "name": "Isolation", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures", "dp"], "solvedCount": 923}, {"contestId": 1129, "index": "C", "name": "Morse Code", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "hashing", "sortings", "string suffix structures", "strings"], "solvedCount": 882}, {"contestId": 1120, "index": "F", "name": "Secret Letters", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dp", "greedy"], "solvedCount": 240}, {"contestId": 1119, "index": "F", "name": "Niyaz and Small Degrees", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["data structures", "dp", "trees"], "solvedCount": 639}, {"contestId": 1117, "index": "G", "name": "Recursive Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"], "solvedCount": 625}, {"contestId": 1114, "index": "F", "name": "Please, another Queries on Array?", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "math", "number theory"], "solvedCount": 1786}, {"contestId": 1111, "index": "E", "name": "Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 823}, {"contestId": 1110, "index": "F", "name": "Nearest Leaf", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 1663}, {"contestId": 1109, "index": "F", "name": "Sasha and Algorithm of Silence's Sounds", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "trees"], "solvedCount": 274}, {"contestId": 1109, "index": "E", "name": "Sasha and a Very Easy Test", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "number theory"], "solvedCount": 486}, {"contestId": 1109, "index": "C", "name": "Sasha and a Patient Friend", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 235}, {"contestId": 1108, "index": "E2", "name": "Array and Segments (Hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "implementation"], "solvedCount": 2101}, {"contestId": 1107, "index": "G", "name": "Vasya and Maximum Profit", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "dp", "dsu"], "solvedCount": 982}, {"contestId": 1106, "index": "E", "name": "Lunar New Year and Red Envelopes", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 2303}, {"contestId": 1106, "index": "D", "name": "Lunar New Year and a Wander", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths"], "solvedCount": 13733}, {"contestId": 1106, "index": "B", "name": "Lunar New Year and Food Ordering", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 6670}, {"contestId": 1104, "index": "B", "name": "Game with string", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["data structures", "implementation", "math"], "solvedCount": 14364}, {"contestId": 1101, "index": "D", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "number theory", "trees"], "solvedCount": 4350}, {"contestId": 1100, "index": "F", "name": "Ivan and Burgers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "greedy", "math"], "solvedCount": 2028}, {"contestId": 1100, "index": "B", "name": "Build a Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation"], "solvedCount": 10856}, {"contestId": 1099, "index": "F", "name": "Cookies", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "games", "trees"], "solvedCount": 896}, {"contestId": 1098, "index": "D", "name": "Eels", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures"], "solvedCount": 682}, {"contestId": 1093, "index": "G", "name": "Multidimensional Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "data structures"], "solvedCount": 1800}, {"contestId": 1093, "index": "E", "name": "Intersection of Permutations", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 1471}, {"contestId": 1092, "index": "D2", "name": "Great Vova Wall (Version 2)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "implementation"], "solvedCount": 2799}, {"contestId": 1091, "index": "E", "name": "New Year and the Acquaintance Estimation", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["binary search", "data structures", "graphs", "greedy", "implementation", "math", "sortings"], "solvedCount": 965}, {"contestId": 1090, "index": "C", "name": "New Year Presents", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "data structures"], "solvedCount": 477}, {"contestId": 1089, "index": "K", "name": "King Kog's Reception", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 1061}, {"contestId": 1088, "index": "F", "name": "Ehab and a weird weight formula", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "trees"], "solvedCount": 479}, {"contestId": 1085, "index": "G", "name": "Beautiful Matrix", "type": "PROGRAMMING", "points": 3250.0, "rating": 2900, "tags": ["combinatorics", "data structures", "dp"], "solvedCount": 485}, {"contestId": 1083, "index": "F", "name": "The Fair Nut and Amusing Xor", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 259}, {"contestId": 1083, "index": "E", "name": "The Fair Nut and Rectangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "geometry"], "solvedCount": 3679}, {"contestId": 1083, "index": "D", "name": "The Fair Nut's getting crazy", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["data structures", "implementation"], "solvedCount": 222}, {"contestId": 1083, "index": "C", "name": "Max Mex", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 834}, {"contestId": 1083, "index": "A", "name": "The Fair Nut and the Best Path", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["data structures", "dp", "trees"], "solvedCount": 5112}, {"contestId": 1081, "index": "H", "name": "Palindromic Magic", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures", "hashing", "strings"], "solvedCount": 96}, {"contestId": 1080, "index": "F", "name": "Katya and Segments Sets", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "interactive", "sortings"], "solvedCount": 659}, {"contestId": 1077, "index": "F2", "name": "Pictures with Kittens (hard version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dp"], "solvedCount": 2817}, {"contestId": 1076, "index": "G", "name": "Array Game", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "games"], "solvedCount": 401}, {"contestId": 1076, "index": "E", "name": "Vasya and a Tree", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "trees"], "solvedCount": 3589}, {"contestId": 1073, "index": "G", "name": "Yet Another LCP Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "string suffix structures"], "solvedCount": 846}, {"contestId": 1073, "index": "D", "name": "Berland Fair", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "brute force", "data structures", "greedy"], "solvedCount": 6283}, {"contestId": 1070, "index": "E", "name": "Getting Deals Done", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures"], "solvedCount": 1186}, {"contestId": 1070, "index": "C", "name": "Cloud Computing", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "greedy"], "solvedCount": 1988}, {"contestId": 1070, "index": "B", "name": "Berkomnadzor", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "greedy"], "solvedCount": 459}, {"contestId": 1066, "index": "E", "name": "Binary Numbers AND Sum", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "math"], "solvedCount": 5947}, {"contestId": 1063, "index": "F", "name": "String Journey", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures", "dp", "string suffix structures"], "solvedCount": 794}, {"contestId": 1062, "index": "E", "name": "Company", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 1692}, {"contestId": 1061, "index": "D", "name": "TV Shows", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 2268}, {"contestId": 1061, "index": "C", "name": "Multiplicity", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dp", "implementation", "math", "number theory"], "solvedCount": 8216}, {"contestId": 1060, "index": "G", "name": "Balls and Pockets", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["data structures"], "solvedCount": 130}, {"contestId": 1059, "index": "E", "name": "Split the Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "trees"], "solvedCount": 1332}, {"contestId": 1056, "index": "H", "name": "Detect Robots", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "strings"], "solvedCount": 139}, {"contestId": 1056, "index": "G", "name": "Take Metro", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["brute force", "data structures", "graphs"], "solvedCount": 235}, {"contestId": 1056, "index": "E", "name": "Check Transcription", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "data structures", "hashing", "strings"], "solvedCount": 1942}, {"contestId": 1051, "index": "G", "name": "Distinctification", "type": "PROGRAMMING", "rating": 2900, "tags": ["data structures", "dsu", "greedy"], "solvedCount": 340}, {"contestId": 1051, "index": "E", "name": "Vasya and Big Integers", "type": "PROGRAMMING", "rating": 2600, "tags": ["binary search", "data structures", "dp", "hashing", "strings"], "solvedCount": 859}, {"contestId": 1045, "index": "J", "name": "Moonwalk challenge", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "strings", "trees"], "solvedCount": 157}, {"contestId": 1045, "index": "G", "name": "AI robots", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures"], "solvedCount": 1506}, {"contestId": 1045, "index": "A", "name": "Last chance", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "flows", "graph matchings", "graphs", "trees"], "solvedCount": 313}, {"contestId": 1044, "index": "F", "name": "DFS", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 489}, {"contestId": 1044, "index": "D", "name": "Deduction Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dsu"], "solvedCount": 952}, {"contestId": 1043, "index": "G", "name": "Speckled Band", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "hashing", "string suffix structures", "strings"], "solvedCount": 212}, {"contestId": 1042, "index": "F", "name": "Leaf Sets", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1199}, {"contestId": 1042, "index": "D", "name": "Petya and Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "divide and conquer", "two pointers"], "solvedCount": 5636}, {"contestId": 1041, "index": "F", "name": "Ray in the tube", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math"], "solvedCount": 1433}, {"contestId": 1041, "index": "E", "name": "Tree Reconstruction", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "graphs", "greedy"], "solvedCount": 3484}, {"contestId": 1041, "index": "D", "name": "Glider", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 5760}, {"contestId": 1041, "index": "C", "name": "Coffee Break", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 9184}, {"contestId": 1039, "index": "E", "name": "Summer Oenothera Exhibition", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures"], "solvedCount": 255}, {"contestId": 1039, "index": "D", "name": "You Are Given a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "dp", "trees"], "solvedCount": 1618}, {"contestId": 1039, "index": "A", "name": "Timetable", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 770}, {"contestId": 1037, "index": "H", "name": "Security", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "string suffix structures"], "solvedCount": 933}, {"contestId": 1037, "index": "F", "name": "Maximum Reduction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["combinatorics", "data structures", "math"], "solvedCount": 926}, {"contestId": 1034, "index": "D", "name": "Intervals of Intervals", "type": "PROGRAMMING", "points": 2000.0, "rating": 3500, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 428}, {"contestId": 1030, "index": "F", "name": "Putting Boxes Together", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 783}, {"contestId": 1028, "index": "D", "name": "Order book", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "data structures", "greedy"], "solvedCount": 1707}, {"contestId": 1023, "index": "G", "name": "Pisces", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["data structures", "flows", "trees"], "solvedCount": 111}, {"contestId": 1023, "index": "D", "name": "Array Restoration", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["constructive algorithms", "data structures"], "solvedCount": 3935}, {"contestId": 1019, "index": "E", "name": "Raining season", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 315}, {"contestId": 1017, "index": "G", "name": "The Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures"], "solvedCount": 772}, {"contestId": 1017, "index": "D", "name": "The Wu", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["bitmasks", "brute force", "data structures"], "solvedCount": 3308}, {"contestId": 1010, "index": "E", "name": "Store", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 318}, {"contestId": 1009, "index": "F", "name": "Dominant Indices", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dsu", "trees"], "solvedCount": 4983}, {"contestId": 1007, "index": "D", "name": "Ants", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["2-sat", "data structures", "trees"], "solvedCount": 252}, {"contestId": 1007, "index": "A", "name": "Reorder the Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["combinatorics", "data structures", "math", "sortings", "two pointers"], "solvedCount": 11940}, {"contestId": 1006, "index": "C", "name": "Three Parts of the Array", "type": "PROGRAMMING", "rating": 1200, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 19995}, {"contestId": 1004, "index": "F", "name": "Sonya and Bitwise OR", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "data structures", "divide and conquer"], "solvedCount": 677}, {"contestId": 1004, "index": "E", "name": "Sonya and Ice Cream", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "trees"], "solvedCount": 996}, {"contestId": 1000, "index": "G", "name": "Two-Paths", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "trees"], "solvedCount": 548}, {"contestId": 1000, "index": "F", "name": "One Occurrence", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "divide and conquer"], "solvedCount": 3435}, {"contestId": 1000, "index": "C", "name": "Covered Points Count", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 6388}, {"contestId": 999, "index": "D", "name": "Equalize the Remainders", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 4118}, {"contestId": 997, "index": "E", "name": "Good Subsegments", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 1034}, {"contestId": 995, "index": "C", "name": "Leaving the Bar", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "data structures", "geometry", "greedy", "math", "sortings"], "solvedCount": 1673}, {"contestId": 992, "index": "E", "name": "Nastya and King-Shamans", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures"], "solvedCount": 1256}, {"contestId": 986, "index": "E", "name": "Prince's Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["brute force", "data structures", "math", "number theory", "trees"], "solvedCount": 694}, {"contestId": 985, "index": "E", "name": "Pencils and Boxes", "type": "PROGRAMMING", "rating": 2100, "tags": ["binary search", "data structures", "dp", "greedy", "two pointers"], "solvedCount": 3202}, {"contestId": 983, "index": "E", "name": "NN country", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "data structures", "trees"], "solvedCount": 863}, {"contestId": 983, "index": "D", "name": "Arkady and Rectangles", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["data structures"], "solvedCount": 317}, {"contestId": 982, "index": "D", "name": "Shark", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "data structures", "dsu", "trees"], "solvedCount": 2231}, {"contestId": 982, "index": "B", "name": "Bus of Characters", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 8093}, {"contestId": 981, "index": "H", "name": "K Paths", "type": "PROGRAMMING", "points": 3750.0, "rating": 3100, "tags": ["combinatorics", "data structures", "dp", "fft", "math"], "solvedCount": 258}, {"contestId": 981, "index": "G", "name": "Magic multisets", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 621}, {"contestId": 981, "index": "E", "name": "Addition on Segments", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "data structures", "divide and conquer", "dp"], "solvedCount": 1976}, {"contestId": 980, "index": "E", "name": "The Number Games", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "greedy", "trees"], "solvedCount": 1776}, {"contestId": 979, "index": "D", "name": "Kuro and GCD and XOR and SUM", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp", "dsu", "greedy", "math", "number theory", "strings", "trees"], "solvedCount": 1671}, {"contestId": 978, "index": "F", "name": "Mentors", "type": "PROGRAMMING", "rating": 1500, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 7948}, {"contestId": 965, "index": "E", "name": "Short Code", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "strings", "trees"], "solvedCount": 1311}, {"contestId": 962, "index": "G", "name": "Visible Black Areas", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dsu", "geometry", "trees"], "solvedCount": 124}, {"contestId": 962, "index": "D", "name": "Merge Equals", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "implementation"], "solvedCount": 6631}, {"contestId": 961, "index": "E", "name": "Tufurama", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures"], "solvedCount": 3420}, {"contestId": 961, "index": "B", "name": "Lecture Sleep", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "dp", "implementation", "two pointers"], "solvedCount": 18889}, {"contestId": 960, "index": "H", "name": "Santa's Gift", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 246}, {"contestId": 960, "index": "F", "name": "Pathwalks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dp", "graphs"], "solvedCount": 2637}, {"contestId": 960, "index": "B", "name": "Minimize the error", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 7214}, {"contestId": 958, "index": "C3", "name": "Encryption (hard)", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dp"], "solvedCount": 482}, {"contestId": 958, "index": "B2", "name": "Maximum Control (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 606}, {"contestId": 954, "index": "G", "name": "Castle Defense", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 1885}, {"contestId": 946, "index": "G", "name": "Almost Increasing Array", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dp"], "solvedCount": 620}, {"contestId": 940, "index": "F", "name": "Machine Learning", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["brute force", "data structures"], "solvedCount": 2379}, {"contestId": 940, "index": "E", "name": "Cashback", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 3370}, {"contestId": 939, "index": "F", "name": "Cutlet", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dp"], "solvedCount": 846}, {"contestId": 938, "index": "G", "name": "Shortest Path Queries", "type": "PROGRAMMING", "rating": 2900, "tags": ["bitmasks", "data structures", "dsu", "graphs"], "solvedCount": 843}, {"contestId": 938, "index": "D", "name": "Buy a Ticket", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 4971}, {"contestId": 936, "index": "E", "name": "Iqea", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "shortest paths", "trees"], "solvedCount": 177}, {"contestId": 935, "index": "F", "name": "Fafa and Array", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["data structures", "greedy"], "solvedCount": 343}, {"contestId": 932, "index": "F", "name": "Escape Through Leaf", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "dp", "geometry"], "solvedCount": 2429}, {"contestId": 932, "index": "B", "name": "Recursive Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["binary search", "data structures", "dfs and similar"], "solvedCount": 7714}, {"contestId": 930, "index": "E", "name": "Coins Exhibition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "dp", "math"], "solvedCount": 394}, {"contestId": 930, "index": "D", "name": "Game with Tokens", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "games", "implementation"], "solvedCount": 385}, {"contestId": 930, "index": "C", "name": "Teodor is not a liar!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp"], "solvedCount": 2061}, {"contestId": 926, "index": "J", "name": "Segments", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures"], "solvedCount": 362}, {"contestId": 926, "index": "E", "name": "Merge Equal Elements", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures"], "solvedCount": 905}, {"contestId": 925, "index": "E", "name": "May Holidays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 349}, {"contestId": 924, "index": "C", "name": "Riverside Curio", "type": "PROGRAMMING", "points": 1250.0, "rating": 1700, "tags": ["data structures", "dp", "greedy"], "solvedCount": 3665}, {"contestId": 923, "index": "C", "name": "Perfect Security", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy", "strings", "trees"], "solvedCount": 4104}, {"contestId": 923, "index": "B", "name": "Producing Snow", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "data structures"], "solvedCount": 7138}, {"contestId": 920, "index": "F", "name": "SUM and REPLACE", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dsu", "number theory"], "solvedCount": 6104}, {"contestId": 920, "index": "E", "name": "Connected Components?", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs"], "solvedCount": 5640}, {"contestId": 917, "index": "E", "name": "Upside Down", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 119}, {"contestId": 916, "index": "E", "name": "Jamie and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "trees"], "solvedCount": 1496}, {"contestId": 916, "index": "D", "name": "Jamie and To-do List", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "interactive", "trees"], "solvedCount": 481}, {"contestId": 915, "index": "F", "name": "Imbalance Value of a Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 2279}, {"contestId": 915, "index": "E", "name": "Physical Education Lessons", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 3923}, {"contestId": 914, "index": "F", "name": "Substrings in a String", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["bitmasks", "brute force", "data structures", "string suffix structures", "strings"], "solvedCount": 1399}, {"contestId": 914, "index": "E", "name": "Palindromes in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "trees"], "solvedCount": 1352}, {"contestId": 914, "index": "D", "name": "Bash and a Tough Math Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "number theory"], "solvedCount": 4987}, {"contestId": 913, "index": "D", "name": "Too Easy Problems", "type": "PROGRAMMING", "points": 1250.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "greedy", "sortings"], "solvedCount": 4485}, {"contestId": 912, "index": "D", "name": "Fishes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "graphs", "greedy", "probabilities", "shortest paths"], "solvedCount": 1929}, {"contestId": 911, "index": "G", "name": "Mass Change Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"], "solvedCount": 2523}, {"contestId": 911, "index": "E", "name": "Stack Sorting", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "implementation"], "solvedCount": 2440}, {"contestId": 909, "index": "D", "name": "Colorful Points", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 1667}, {"contestId": 903, "index": "G", "name": "Yet Another Maxflow Problem", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "flows", "graphs"], "solvedCount": 500}, {"contestId": 903, "index": "D", "name": "Almost Difference", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "math"], "solvedCount": 3671}, {"contestId": 901, "index": "C", "name": "Bipartite Segments", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "two pointers"], "solvedCount": 1127}, {"contestId": 900, "index": "E", "name": "Maximum Questions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dp", "strings"], "solvedCount": 1018}, {"contestId": 900, "index": "C", "name": "Remove Extra One", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["brute force", "data structures", "math"], "solvedCount": 4395}, {"contestId": 899, "index": "F", "name": "Letters Removing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "strings"], "solvedCount": 1565}, {"contestId": 899, "index": "E", "name": "Segments Removal", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures", "dsu", "flows", "implementation", "two pointers"], "solvedCount": 2694}, {"contestId": 896, "index": "E", "name": "Welcome home, Chtholly", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "dsu"], "solvedCount": 1929}, {"contestId": 896, "index": "C", "name": "Willem, Chtholly and Seniorious", "type": "PROGRAMMING", "points": 1500.0, "rating": 2600, "tags": ["data structures", "probabilities"], "solvedCount": 3089}, {"contestId": 895, "index": "E", "name": "Eyes Closed", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "probabilities"], "solvedCount": 901}, {"contestId": 894, "index": "D", "name": "Ralph And His Tour in Binary Country", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "trees"], "solvedCount": 1095}, {"contestId": 893, "index": "F", "name": "Subtree Minimum Query", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "trees"], "solvedCount": 1622}, {"contestId": 893, "index": "D", "name": "Credit Card", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp", "greedy", "implementation"], "solvedCount": 2893}, {"contestId": 891, "index": "C", "name": "Envy", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dsu", "graphs"], "solvedCount": 2198}, {"contestId": 888, "index": "G", "name": "Xor-MST", "type": "PROGRAMMING", "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "data structures"], "solvedCount": 3811}, {"contestId": 887, "index": "D", "name": "Ratings and Reality Shows", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "two pointers"], "solvedCount": 469}, {"contestId": 884, "index": "D", "name": "Boxes And Balls", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy"], "solvedCount": 1862}, {"contestId": 883, "index": "L", "name": "Berland.Taxi", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"], "solvedCount": 226}, {"contestId": 879, "index": "B", "name": "Table Tennis", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["data structures", "implementation"], "solvedCount": 11761}, {"contestId": 878, "index": "C", "name": "Tournament", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["data structures", "graphs"], "solvedCount": 879}, {"contestId": 878, "index": "B", "name": "Teams Formation", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "implementation"], "solvedCount": 1026}, {"contestId": 877, "index": "F", "name": "Ann and Books", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "flows", "hashing"], "solvedCount": 1577}, {"contestId": 877, "index": "E", "name": "Danil and a Part-time Job", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 4185}, {"contestId": 877, "index": "D", "name": "Olya and Energy Drinks", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 3886}, {"contestId": 875, "index": "E", "name": "Delivery Club", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dp"], "solvedCount": 847}, {"contestId": 875, "index": "D", "name": "High Cry", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "combinatorics", "data structures", "divide and conquer"], "solvedCount": 1959}, {"contestId": 873, "index": "E", "name": "Awards For Contestants", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "data structures", "dp"], "solvedCount": 482}, {"contestId": 870, "index": "F", "name": "Paths", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["data structures", "number theory"], "solvedCount": 590}, {"contestId": 869, "index": "E", "name": "The Untended Antiquity", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "hashing"], "solvedCount": 1443}, {"contestId": 865, "index": "D", "name": "Buy Low Sell High", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 4631}, {"contestId": 863, "index": "E", "name": "Turn Off The TV", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "sortings"], "solvedCount": 2887}, {"contestId": 863, "index": "D", "name": "Yet Another Array Queries Problem", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation"], "solvedCount": 3113}, {"contestId": 862, "index": "F", "name": "Mahmoud and Ehab and the final stage", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "strings"], "solvedCount": 193}, {"contestId": 862, "index": "E", "name": "Mahmoud and Ehab and the function", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 1385}, {"contestId": 860, "index": "E", "name": "Arkady and a Nobody-men", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 416}, {"contestId": 858, "index": "D", "name": "Polycarp's phone book", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 3674}, {"contestId": 855, "index": "F", "name": "Nagini", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["binary search", "data structures"], "solvedCount": 380}, {"contestId": 855, "index": "B", "name": "Marvolo Gaunt's Ring", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["brute force", "data structures", "dp"], "solvedCount": 8294}, {"contestId": 853, "index": "E", "name": "Lada Malina", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "geometry"], "solvedCount": 63}, {"contestId": 853, "index": "C", "name": "Boredom", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["data structures"], "solvedCount": 1384}, {"contestId": 848, "index": "C", "name": "Goodbye Souvenir", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["data structures", "divide and conquer"], "solvedCount": 1231}, {"contestId": 848, "index": "B", "name": "Rooter's Song", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "geometry", "implementation", "sortings", "two pointers"], "solvedCount": 1809}, {"contestId": 847, "index": "D", "name": "Dog Show", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 1002}, {"contestId": 847, "index": "B", "name": "Preparing for Merge Sort", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures"], "solvedCount": 4559}, {"contestId": 846, "index": "F", "name": "Random Query", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "math", "probabilities", "two pointers"], "solvedCount": 2176}, {"contestId": 846, "index": "D", "name": "Monitor", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures"], "solvedCount": 2315}, {"contestId": 846, "index": "C", "name": "Four Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["brute force", "data structures", "dp"], "solvedCount": 2600}, {"contestId": 845, "index": "E", "name": "Fire in the City", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures"], "solvedCount": 572}, {"contestId": 845, "index": "D", "name": "Driving Test", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2320}, {"contestId": 845, "index": "C", "name": "Two TVs", "type": "PROGRAMMING", "rating": 1500, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 7729}, {"contestId": 842, "index": "D", "name": "Vitya and Strange Lesson", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures"], "solvedCount": 3178}, {"contestId": 840, "index": "D", "name": "Destiny", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "probabilities"], "solvedCount": 2720}, {"contestId": 840, "index": "B", "name": "Leha and another game about graph", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "graphs"], "solvedCount": 2227}, {"contestId": 838, "index": "B", "name": "Diverging Directions", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 684}, {"contestId": 837, "index": "G", "name": "Functions On The Segments", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures"], "solvedCount": 643}, {"contestId": 834, "index": "B", "name": "The Festive Evening", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation"], "solvedCount": 8468}, {"contestId": 833, "index": "E", "name": "Caramel Clouds", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dp", "sortings"], "solvedCount": 208}, {"contestId": 833, "index": "D", "name": "Red-Black Cobweb", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 361}, {"contestId": 833, "index": "B", "name": "The Bakery", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["binary search", "data structures", "divide and conquer", "dp", "two pointers"], "solvedCount": 4398}, {"contestId": 830, "index": "C", "name": "Bamboo Partition", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "data structures", "implementation", "math", "number theory", "sortings", "two pointers"], "solvedCount": 1179}, {"contestId": 830, "index": "B", "name": "Cards Sorting", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 2739}, {"contestId": 827, "index": "F", "name": "Dirty Arkady's Kitchen", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dp", "graphs", "shortest paths"], "solvedCount": 378}, {"contestId": 827, "index": "D", "name": "Best Edge Weight", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 1045}, {"contestId": 827, "index": "C", "name": "DNA Evolution", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "strings"], "solvedCount": 1605}, {"contestId": 827, "index": "A", "name": "String Reconstruction", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "greedy", "sortings", "strings"], "solvedCount": 3921}, {"contestId": 825, "index": "E", "name": "Minimal Labels", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "graphs", "greedy"], "solvedCount": 2936}, {"contestId": 821, "index": "C", "name": "Okabe and Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "greedy", "trees"], "solvedCount": 6550}, {"contestId": 819, "index": "B", "name": "Mister B and PR Shifts", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "implementation", "math"], "solvedCount": 1608}, {"contestId": 818, "index": "E", "name": "Card Game Again", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "number theory", "two pointers"], "solvedCount": 1848}, {"contestId": 818, "index": "D", "name": "Multicolored Cars", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation"], "solvedCount": 3370}, {"contestId": 817, "index": "F", "name": "MEX Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "trees"], "solvedCount": 2369}, {"contestId": 817, "index": "E", "name": "Choosing The Commander", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 2656}, {"contestId": 817, "index": "D", "name": "Imbalanced Array", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "divide and conquer", "dsu", "sortings"], "solvedCount": 4347}, {"contestId": 816, "index": "B", "name": "Karen and Coffee", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 16072}, {"contestId": 815, "index": "D", "name": "Karen and Cards", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["binary search", "combinatorics", "data structures", "geometry"], "solvedCount": 588}, {"contestId": 813, "index": "F", "name": "Bipartite Checking", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "dsu", "graphs"], "solvedCount": 1193}, {"contestId": 813, "index": "E", "name": "Army Creation", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 2246}, {"contestId": 811, "index": "E", "name": "Vladik and Entertaining Flags", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dsu", "graphs"], "solvedCount": 784}, {"contestId": 809, "index": "D", "name": "Hitchhiking in the Baltic States", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dp"], "solvedCount": 745}, {"contestId": 808, "index": "D", "name": "Array Division", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 6679}, {"contestId": 808, "index": "B", "name": "Average Sleep Time", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "implementation", "math"], "solvedCount": 6389}, {"contestId": 803, "index": "G", "name": "Periodic RMQ Problem", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures"], "solvedCount": 1284}, {"contestId": 802, "index": "O", "name": "April Fools' Problem (hard)", "type": "PROGRAMMING", "rating": 2900, "tags": ["binary search", "data structures", "flows"], "solvedCount": 785}, {"contestId": 802, "index": "B", "name": "Heidi and Library (medium)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 1004}, {"contestId": 799, "index": "G", "name": "Cut the pie", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["binary search", "data structures", "geometry"], "solvedCount": 105}, {"contestId": 799, "index": "F", "name": "Beautiful fountains rows", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures"], "solvedCount": 416}, {"contestId": 799, "index": "E", "name": "Aquarium decoration", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "greedy", "two pointers"], "solvedCount": 909}, {"contestId": 799, "index": "C", "name": "Fountains", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 3563}, {"contestId": 799, "index": "B", "name": "T-shirt buying", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 8285}, {"contestId": 798, "index": "E", "name": "Mike and code of a permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["constructive algorithms", "data structures", "graphs", "sortings"], "solvedCount": 449}, {"contestId": 797, "index": "F", "name": "Mice and Holes", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "dp", "greedy", "sortings"], "solvedCount": 1066}, {"contestId": 797, "index": "E", "name": "Array Queries", "type": "PROGRAMMING", "rating": 2000, "tags": ["brute force", "data structures", "dp"], "solvedCount": 3993}, {"contestId": 797, "index": "D", "name": "Broken BST", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar"], "solvedCount": 1744}, {"contestId": 797, "index": "C", "name": "Minimal string", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "greedy", "strings"], "solvedCount": 6201}, {"contestId": 796, "index": "F", "name": "Sequence Recovery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["bitmasks", "data structures", "greedy"], "solvedCount": 167}, {"contestId": 796, "index": "C", "name": "Bank Hacking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 2956}, {"contestId": 794, "index": "F", "name": "Leha and security system", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["data structures"], "solvedCount": 724}, {"contestId": 793, "index": "G", "name": "Oleg and chess", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "flows", "graph matchings"], "solvedCount": 304}, {"contestId": 793, "index": "F", "name": "Julia the snail", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 498}, {"contestId": 792, "index": "F", "name": "Mages and Monsters", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "geometry"], "solvedCount": 197}, {"contestId": 788, "index": "E", "name": "New task", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 318}, {"contestId": 786, "index": "E", "name": "ALT", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "flows", "graphs", "trees"], "solvedCount": 592}, {"contestId": 786, "index": "D", "name": "Rap God", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "hashing", "strings", "trees"], "solvedCount": 124}, {"contestId": 786, "index": "C", "name": "Till I Collapse", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "divide and conquer"], "solvedCount": 2490}, {"contestId": 786, "index": "B", "name": "Legacy", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 5275}, {"contestId": 785, "index": "E", "name": "Anton and Permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "data structures"], "solvedCount": 1760}, {"contestId": 780, "index": "G", "name": "Andryusha and Nervous Barriers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures", "dp"], "solvedCount": 639}, {"contestId": 777, "index": "E", "name": "Hanoi Factory", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["brute force", "data structures", "dp", "greedy", "sortings"], "solvedCount": 3833}, {"contestId": 777, "index": "C", "name": "Alyona and Spreadsheet", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "data structures", "dp", "greedy", "implementation", "two pointers"], "solvedCount": 6248}, {"contestId": 777, "index": "B", "name": "Game of Credit Cards", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "dp", "greedy", "sortings"], "solvedCount": 9291}, {"contestId": 776, "index": "F", "name": "Sherlock's bet to Moriarty", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation", "trees"], "solvedCount": 406}, {"contestId": 776, "index": "C", "name": "Molly's Chemicals", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "brute force", "data structures", "implementation", "math"], "solvedCount": 5721}, {"contestId": 774, "index": "B", "name": "Significant Cups", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "binary search", "data structures", "two pointers"], "solvedCount": 216}, {"contestId": 773, "index": "E", "name": "Blog Post Rating", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["data structures", "sortings"], "solvedCount": 315}, {"contestId": 768, "index": "G", "name": "The Winds of Winter", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["binary search", "data structures"], "solvedCount": 352}, {"contestId": 767, "index": "D", "name": "Cartons of milk", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings", "two pointers"], "solvedCount": 2181}, {"contestId": 767, "index": "A", "name": "Snacktower", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["data structures", "implementation"], "solvedCount": 19010}, {"contestId": 766, "index": "E", "name": "Mahmoud and a xor trip", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "dp", "math", "trees"], "solvedCount": 2768}, {"contestId": 766, "index": "D", "name": "Mahmoud and a Dictionary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs"], "solvedCount": 3221}, {"contestId": 765, "index": "F", "name": "Souvenirs", "type": "PROGRAMMING", "points": 3250.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 1822}, {"contestId": 763, "index": "E", "name": "Timofey and our friends animals", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "dsu"], "solvedCount": 471}, {"contestId": 763, "index": "D", "name": "Timofey and a flat tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "graphs", "hashing", "shortest paths", "trees"], "solvedCount": 507}, {"contestId": 762, "index": "E", "name": "Radio stations", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 1262}, {"contestId": 761, "index": "F", "name": "Dasha and Photos", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["brute force", "data structures", "dp", "implementation"], "solvedCount": 399}, {"contestId": 757, "index": "G", "name": "Can Bash Save the Day?", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "graphs", "trees"], "solvedCount": 469}, {"contestId": 757, "index": "F", "name": "Team Rocket Rises Again", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 1061}, {"contestId": 757, "index": "C", "name": "Felicity is Coming!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "hashing", "sortings", "strings"], "solvedCount": 2302}, {"contestId": 756, "index": "C", "name": "Nikita and stack", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 1268}, {"contestId": 755, "index": "D", "name": "PolandBall and Polygon", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures"], "solvedCount": 2460}, {"contestId": 755, "index": "B", "name": "PolandBall and Game", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["binary search", "data structures", "games", "greedy", "sortings", "strings"], "solvedCount": 10851}, {"contestId": 754, "index": "D", "name": "Fedor and coupons", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 2124}, {"contestId": 750, "index": "E", "name": "New Year and Old Subsequence", "type": "PROGRAMMING", "points": 2250.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp", "matrices"], "solvedCount": 1459}, {"contestId": 750, "index": "D", "name": "New Year and Fireworks", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation"], "solvedCount": 3049}, {"contestId": 749, "index": "E", "name": "Inversions After Shuffle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "probabilities"], "solvedCount": 981}, {"contestId": 749, "index": "D", "name": "Leaving Auction", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures"], "solvedCount": 2462}, {"contestId": 748, "index": "E", "name": "Santa Claus and Tangerines", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "two pointers"], "solvedCount": 1436}, {"contestId": 748, "index": "D", "name": "Santa Claus and a Palindrome", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 1801}, {"contestId": 746, "index": "F", "name": "Music in Car", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "greedy", "two pointers"], "solvedCount": 720}, {"contestId": 741, "index": "E", "name": "Arpa\u2019s abnormal DNA and Mehrdad\u2019s deep interest", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "string suffix structures"], "solvedCount": 167}, {"contestId": 741, "index": "D", "name": "Arpa\u2019s letter-marked tree and Mehrdad\u2019s Dokhtar-kosh paths", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 2388}, {"contestId": 739, "index": "E", "name": "Gosha is hunting", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "data structures", "dp", "flows", "math", "probabilities", "sortings"], "solvedCount": 2015}, {"contestId": 739, "index": "C", "name": "Alyona and towers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 1381}, {"contestId": 739, "index": "B", "name": "Alyona and a tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 4373}, {"contestId": 733, "index": "F", "name": "Drivers Dissatisfaction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 1082}, {"contestId": 733, "index": "E", "name": "Sleep in Class", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "math", "two pointers"], "solvedCount": 830}, {"contestId": 733, "index": "D", "name": "Kostya the Sculptor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["data structures", "hashing"], "solvedCount": 4109}, {"contestId": 731, "index": "F", "name": "Video Cards", "type": "PROGRAMMING", "points": 3000.0, "rating": 1900, "tags": ["brute force", "data structures", "implementation", "math", "number theory"], "solvedCount": 2741}, {"contestId": 731, "index": "D", "name": "80-th Level Archeology", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "greedy", "sortings"], "solvedCount": 1135}, {"contestId": 730, "index": "L", "name": "Expression Queries", "type": "PROGRAMMING", "rating": 3200, "tags": ["data structures"], "solvedCount": 81}, {"contestId": 729, "index": "E", "name": "Subordinates", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "sortings"], "solvedCount": 2126}, {"contestId": 727, "index": "E", "name": "Games on a CD", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "hashing", "string suffix structures", "strings"], "solvedCount": 1099}, {"contestId": 725, "index": "D", "name": "Contest Balloons", "type": "PROGRAMMING", "points": 2250.0, "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 2659}, {"contestId": 724, "index": "D", "name": "Dense Subsequence", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "greedy", "strings"], "solvedCount": 2235}, {"contestId": 722, "index": "F", "name": "Cyclic Cipher", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["chinese remainder theorem", "data structures", "implementation", "number theory", "two pointers"], "solvedCount": 468}, {"contestId": 722, "index": "D", "name": "Generating Sets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "strings", "trees"], "solvedCount": 3059}, {"contestId": 722, "index": "C", "name": "Destroying Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "dsu"], "solvedCount": 8707}, {"contestId": 721, "index": "D", "name": "Maxim and Array", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "data structures", "greedy", "math"], "solvedCount": 2248}, {"contestId": 720, "index": "F", "name": "Array Covering", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures"], "solvedCount": 142}, {"contestId": 720, "index": "D", "name": "Slalom", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "dp", "sortings"], "solvedCount": 193}, {"contestId": 718, "index": "C", "name": "Sasha and Array", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["data structures", "math", "matrices"], "solvedCount": 3329}, {"contestId": 717, "index": "F", "name": "Heroes of Making Magic III", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures"], "solvedCount": 279}, {"contestId": 713, "index": "D", "name": "Animals and Puzzle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["binary search", "data structures"], "solvedCount": 1060}, {"contestId": 713, "index": "A", "name": "Sonya and Queries", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 8295}, {"contestId": 712, "index": "E", "name": "Memory and Casinos", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "math", "probabilities"], "solvedCount": 591}, {"contestId": 710, "index": "F", "name": "String Set Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "data structures", "hashing", "interactive", "string suffix structures", "strings"], "solvedCount": 1650}, {"contestId": 708, "index": "C", "name": "Centroids", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 2945}, {"contestId": 707, "index": "E", "name": "Garlands", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 992}, {"contestId": 707, "index": "D", "name": "Persistent Bookcase ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["bitmasks", "data structures", "dfs and similar", "implementation"], "solvedCount": 2550}, {"contestId": 706, "index": "E", "name": "Working routine", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "implementation"], "solvedCount": 1110}, {"contestId": 706, "index": "D", "name": "Vasiliy's Multiset", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "bitmasks", "data structures", "trees"], "solvedCount": 9142}, {"contestId": 704, "index": "E", "name": "Iron Man", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures", "geometry", "trees"], "solvedCount": 265}, {"contestId": 704, "index": "A", "name": "Thor", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 8895}, {"contestId": 703, "index": "D", "name": "Mishka and Interesting sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures"], "solvedCount": 3300}, {"contestId": 702, "index": "F", "name": "T-Shirts", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"], "solvedCount": 1133}, {"contestId": 702, "index": "E", "name": "Analysis of Pathes in Functional Graph", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "graphs"], "solvedCount": 2233}, {"contestId": 702, "index": "B", "name": "Powers of Two", "type": "PROGRAMMING", "rating": 1500, "tags": ["brute force", "data structures", "implementation", "math"], "solvedCount": 11223}, {"contestId": 701, "index": "B", "name": "Cells Not Under Attack", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["data structures", "math"], "solvedCount": 11530}, {"contestId": 700, "index": "D", "name": "Huffman Coding on Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["data structures", "greedy"], "solvedCount": 444}, {"contestId": 696, "index": "E", "name": "...Wait for it...", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dsu", "trees"], "solvedCount": 455}, {"contestId": 696, "index": "D", "name": "Legen...", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dp", "matrices", "strings"], "solvedCount": 1202}, {"contestId": 696, "index": "A", "name": "Lorenzo Von Matterhorn", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation", "trees"], "solvedCount": 5961}, {"contestId": 690, "index": "B3", "name": "Recover Polygon (hard)", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures"], "solvedCount": 88}, {"contestId": 689, "index": "E", "name": "Mike and Geometry Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["combinatorics", "data structures", "dp", "geometry", "implementation"], "solvedCount": 1789}, {"contestId": 689, "index": "D", "name": "Friends and Subsequences", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["binary search", "data structures"], "solvedCount": 3030}, {"contestId": 687, "index": "D", "name": "Dividing Kingdom II", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "dsu", "graphs", "sortings"], "solvedCount": 848}, {"contestId": 685, "index": "B", "name": "Kay and Snowflake", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 3721}, {"contestId": 681, "index": "C", "name": "Heap Operations", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "greedy"], "solvedCount": 7090}, {"contestId": 679, "index": "E", "name": "Bear and Bad Powers of 42", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 644}, {"contestId": 678, "index": "F", "name": "Lena and Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "divide and conquer", "geometry"], "solvedCount": 821}, {"contestId": 677, "index": "D", "name": "Vanya and Treasure", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "shortest paths"], "solvedCount": 1513}, {"contestId": 675, "index": "E", "name": "Trains and Statistic", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2580}, {"contestId": 675, "index": "D", "name": "Tree Construction", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "trees"], "solvedCount": 3531}, {"contestId": 675, "index": "C", "name": "Money Transfers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "greedy", "sortings"], "solvedCount": 3409}, {"contestId": 671, "index": "E", "name": "Organizing a Race", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "greedy"], "solvedCount": 390}, {"contestId": 671, "index": "D", "name": "Roads in Yusland", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dp", "greedy"], "solvedCount": 1091}, {"contestId": 671, "index": "C", "name": "Ultimate Weirdness of an Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 2800, "tags": ["data structures", "number theory"], "solvedCount": 654}, {"contestId": 670, "index": "E", "name": "Correct Bracket Sequence Editor", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "dsu", "strings"], "solvedCount": 3130}, {"contestId": 666, "index": "E", "name": "Forensic Examination", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "string suffix structures"], "solvedCount": 1275}, {"contestId": 665, "index": "F", "name": "Four Divisors", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "math", "number theory", "sortings", "two pointers"], "solvedCount": 571}, {"contestId": 665, "index": "E", "name": "Beautiful Subarrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "strings", "trees"], "solvedCount": 2819}, {"contestId": 660, "index": "F", "name": "Bear and Bowling 4", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "divide and conquer", "geometry", "ternary search"], "solvedCount": 1478}, {"contestId": 659, "index": "E", "name": "New Reform", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 7254}, {"contestId": 653, "index": "F", "name": "Paper task", "type": "PROGRAMMING", "points": 3500.0, "rating": 2600, "tags": ["data structures", "string suffix structures", "strings"], "solvedCount": 944}, {"contestId": 652, "index": "D", "name": "Nested Segments", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "sortings"], "solvedCount": 3761}, {"contestId": 650, "index": "E", "name": "Clockwork Bomb", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "dsu", "greedy", "trees"], "solvedCount": 581}, {"contestId": 650, "index": "D", "name": "Zip-line", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dp", "hashing"], "solvedCount": 1180}, {"contestId": 650, "index": "A", "name": "Watchmen", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "geometry", "math"], "solvedCount": 14893}, {"contestId": 649, "index": "E", "name": "\u0410\u0432\u0442\u043e\u0431\u0443\u0441", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 102}, {"contestId": 648, "index": "D", "name": "\u0421\u043e\u0431\u0430\u0447\u043a\u0438 \u0438 \u043c\u0438\u0441\u043a\u0438", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 220}, {"contestId": 644, "index": "C", "name": "Hostname Aliases", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["*special", "binary search", "data structures", "implementation", "sortings", "strings"], "solvedCount": 907}, {"contestId": 644, "index": "B", "name": "Processing Queries", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["*special", "constructive algorithms", "data structures", "two pointers"], "solvedCount": 2590}, {"contestId": 643, "index": "G", "name": "Choosing Ads", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures"], "solvedCount": 879}, {"contestId": 641, "index": "E", "name": "Little Artem and Time Machine", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures"], "solvedCount": 2882}, {"contestId": 639, "index": "F", "name": "Bear and Chemistry", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 386}, {"contestId": 639, "index": "D", "name": "Bear and Contribution", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "greedy", "sortings", "two pointers"], "solvedCount": 772}, {"contestId": 637, "index": "D", "name": "Running with Obstacles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "data structures", "dp", "greedy"], "solvedCount": 1934}, {"contestId": 637, "index": "B", "name": "Chat Order", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["*special", "binary search", "constructive algorithms", "data structures", "sortings"], "solvedCount": 14817}, {"contestId": 633, "index": "H", "name": "Fibonacci-ish II", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "implementation"], "solvedCount": 557}, {"contestId": 633, "index": "G", "name": "Yash And Trees", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["bitmasks", "data structures", "dfs and similar", "math", "number theory"], "solvedCount": 705}, {"contestId": 633, "index": "E", "name": "Startup Funding", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "data structures", "probabilities", "two pointers"], "solvedCount": 566}, {"contestId": 633, "index": "C", "name": "Spy Syndrome 2", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp", "hashing", "implementation", "sortings", "string suffix structures", "strings"], "solvedCount": 2564}, {"contestId": 631, "index": "E", "name": "Product Sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dp", "geometry"], "solvedCount": 2179}, {"contestId": 631, "index": "D", "name": "Messenger", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "hashing", "implementation", "string suffix structures", "strings"], "solvedCount": 1962}, {"contestId": 631, "index": "C", "name": "Report", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "sortings"], "solvedCount": 3669}, {"contestId": 629, "index": "E", "name": "Famil Door and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "probabilities", "trees"], "solvedCount": 964}, {"contestId": 629, "index": "D", "name": "Babaei and Birthday Cake", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp"], "solvedCount": 3844}, {"contestId": 628, "index": "E", "name": "Zbazi in Zeydabad", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "implementation"], "solvedCount": 824}, {"contestId": 627, "index": "C", "name": "Package Delivery", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "greedy"], "solvedCount": 1139}, {"contestId": 627, "index": "B", "name": "Factory Repairs", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures"], "solvedCount": 2633}, {"contestId": 626, "index": "G", "name": "Raffles", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures", "dp", "greedy", "math"], "solvedCount": 511}, {"contestId": 625, "index": "E", "name": "Frog Fights", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "greedy"], "solvedCount": 321}, {"contestId": 622, "index": "C", "name": "Not Equal on a Segment", "type": "PROGRAMMING", "rating": 1700, "tags": ["data structures", "implementation"], "solvedCount": 6131}, {"contestId": 620, "index": "F", "name": "Xors on Segments", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "strings", "trees"], "solvedCount": 688}, {"contestId": 620, "index": "E", "name": "New Year Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 5061}, {"contestId": 618, "index": "E", "name": "Robot Arm", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "geometry"], "solvedCount": 583}, {"contestId": 617, "index": "E", "name": "XOR and Favorite Number", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 7607}, {"contestId": 616, "index": "D", "name": "Longest k-Good Segment", "type": "PROGRAMMING", "rating": 1600, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 8583}, {"contestId": 612, "index": "C", "name": "Replace To Make Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1400, "tags": ["data structures", "expression parsing", "math"], "solvedCount": 7437}, {"contestId": 611, "index": "E", "name": "New Year and Three Musketeers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 851}, {"contestId": 610, "index": "E", "name": "Alphabet Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "strings"], "solvedCount": 768}, {"contestId": 610, "index": "D", "name": "Vika and Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "geometry", "two pointers"], "solvedCount": 1415}, {"contestId": 609, "index": "F", "name": "Frogs and mosquitoes", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "greedy"], "solvedCount": 1164}, {"contestId": 609, "index": "E", "name": "Minimum spanning tree for each edge", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 6808}, {"contestId": 607, "index": "D", "name": "Power Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 550}, {"contestId": 605, "index": "D", "name": "Board Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "dfs and similar"], "solvedCount": 783}, {"contestId": 605, "index": "B", "name": "Lazy Student", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "data structures", "graphs"], "solvedCount": 3375}, {"contestId": 603, "index": "E", "name": "Pastoral Oddities", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "math", "trees"], "solvedCount": 1143}, {"contestId": 601, "index": "E", "name": "A Museum Robbery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dp"], "solvedCount": 792}, {"contestId": 601, "index": "D", "name": "Acyclic Organic Compounds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "hashing", "strings", "trees"], "solvedCount": 1076}, {"contestId": 601, "index": "B", "name": "Lipshitz Sequence", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["data structures", "math"], "solvedCount": 1998}, {"contestId": 600, "index": "E", "name": "Lomsat gelral", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "dsu", "trees"], "solvedCount": 12352}, {"contestId": 600, "index": "B", "name": "Queries about less or equal elements", "type": "PROGRAMMING", "rating": 1300, "tags": ["binary search", "data structures", "sortings", "two pointers"], "solvedCount": 26859}, {"contestId": 597, "index": "C", "name": "Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dp"], "solvedCount": 4458}, {"contestId": 594, "index": "D", "name": "REQ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "number theory"], "solvedCount": 1487}, {"contestId": 593, "index": "D", "name": "Happy Tree Party", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "graphs", "math", "trees"], "solvedCount": 1167}, {"contestId": 587, "index": "F", "name": "Duff is Mad", "type": "PROGRAMMING", "points": 2750.0, "rating": 3000, "tags": ["data structures", "strings"], "solvedCount": 963}, {"contestId": 587, "index": "E", "name": "Duff as a Queen", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 676}, {"contestId": 587, "index": "C", "name": "Duff in the Army", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "trees"], "solvedCount": 3612}, {"contestId": 580, "index": "E", "name": "Kefa and Watch", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "hashing", "strings"], "solvedCount": 1916}, {"contestId": 577, "index": "B", "name": "Modulo Sum", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["combinatorics", "data structures", "dp", "two pointers"], "solvedCount": 11323}, {"contestId": 576, "index": "E", "name": "Painting Edges", "type": "PROGRAMMING", "points": 2750.0, "rating": 3300, "tags": ["binary search", "data structures"], "solvedCount": 1092}, {"contestId": 575, "index": "I", "name": "Robots protection", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"], "solvedCount": 417}, {"contestId": 575, "index": "A", "name": "Fibonotci", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "math", "matrices"], "solvedCount": 750}, {"contestId": 573, "index": "E", "name": "Bear and Bowling", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "greedy"], "solvedCount": 1301}, {"contestId": 573, "index": "D", "name": "Bear and Cavalry", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 441}, {"contestId": 573, "index": "B", "name": "Bear and Blocks", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["binary search", "data structures", "dp", "math"], "solvedCount": 5606}, {"contestId": 572, "index": "B", "name": "Order Book", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 6717}, {"contestId": 571, "index": "D", "name": "Campus", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["binary search", "data structures", "dsu", "trees"], "solvedCount": 643}, {"contestId": 570, "index": "C", "name": "Replacement", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 8809}, {"contestId": 568, "index": "E", "name": "Longest Increasing Subsequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp"], "solvedCount": 570}, {"contestId": 567, "index": "D", "name": "One-Dimensional Battle Ships", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 4601}, {"contestId": 567, "index": "C", "name": "Geometric Progression", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "data structures", "dp"], "solvedCount": 9224}, {"contestId": 566, "index": "D", "name": "Restructuring Company", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dsu"], "solvedCount": 3040}, {"contestId": 558, "index": "E", "name": "A Simple Task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "sortings", "strings"], "solvedCount": 5493}, {"contestId": 558, "index": "D", "name": "Guess Your Way Out! II", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 1094}, {"contestId": 557, "index": "E", "name": "Ann and Half-Palindrome", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "string suffix structures", "strings", "trees"], "solvedCount": 1044}, {"contestId": 557, "index": "C", "name": "Arthur and Table", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["brute force", "data structures", "dp", "greedy", "math", "sortings"], "solvedCount": 3933}, {"contestId": 555, "index": "C", "name": "Case of Chocolate", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 1940}, {"contestId": 555, "index": "B", "name": "Case of Fugitive", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 3672}, {"contestId": 552, "index": "D", "name": "Vanya and Triangles", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "combinatorics", "data structures", "geometry", "math", "sortings"], "solvedCount": 4328}, {"contestId": 551, "index": "E", "name": "GukiZ and GukiZiana", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 1643}, {"contestId": 549, "index": "F", "name": "Yura and Developers", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 846}, {"contestId": 547, "index": "E", "name": "Mike and Friends", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 1906}, {"contestId": 547, "index": "B", "name": "Mike and Feet", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp", "dsu"], "solvedCount": 8103}, {"contestId": 543, "index": "E", "name": "Listening to Music", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "data structures"], "solvedCount": 271}, {"contestId": 542, "index": "B", "name": "Duck Hunt", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 124}, {"contestId": 542, "index": "A", "name": "Place Your Ad Here", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "sortings"], "solvedCount": 519}, {"contestId": 540, "index": "E", "name": "Infinite Inversions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "implementation", "sortings", "trees"], "solvedCount": 1976}, {"contestId": 538, "index": "H", "name": "Summer Dichotomy", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["2-sat", "data structures", "dfs and similar", "greedy"], "solvedCount": 599}, {"contestId": 538, "index": "F", "name": "A Heap of Heaps", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "data structures", "math", "sortings"], "solvedCount": 1492}, {"contestId": 536, "index": "E", "name": "Tavas on the Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 366}, {"contestId": 534, "index": "D", "name": "Handshakes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "constructive algorithms", "data structures", "greedy"], "solvedCount": 2362}, {"contestId": 533, "index": "D", "name": "Landmarks", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dp"], "solvedCount": 214}, {"contestId": 533, "index": "A", "name": "Berland Miners", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 341}, {"contestId": 527, "index": "D", "name": "Clique Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "implementation", "sortings"], "solvedCount": 4608}, {"contestId": 527, "index": "C", "name": "Glass Carving", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["binary search", "data structures", "implementation"], "solvedCount": 6615}, {"contestId": 526, "index": "F", "name": "Pudding Monsters", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer"], "solvedCount": 2238}, {"contestId": 525, "index": "D", "name": "Arthur and Walls", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["constructive algorithms", "data structures", "graphs", "greedy", "shortest paths"], "solvedCount": 1625}, {"contestId": 524, "index": "F", "name": "And Yet Another Bracket Sequence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["data structures", "greedy", "hashing", "string suffix structures", "strings"], "solvedCount": 517}, {"contestId": 524, "index": "E", "name": "Rooks and Rectangles", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["data structures", "sortings"], "solvedCount": 1149}, {"contestId": 523, "index": "D", "name": "Statistics of Recompressing Videos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["*special", "data structures", "implementation"], "solvedCount": 2225}, {"contestId": 522, "index": "D", "name": "Closest Equals", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["*special", "data structures"], "solvedCount": 2902}, {"contestId": 522, "index": "B", "name": "Photo to Remember", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["*special", "data structures", "dp", "implementation"], "solvedCount": 8615}, {"contestId": 519, "index": "E", "name": "A and B and Lecture Rooms", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "dp", "trees"], "solvedCount": 6118}, {"contestId": 519, "index": "D", "name": "A and B and Interesting Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dp", "two pointers"], "solvedCount": 6222}, {"contestId": 519, "index": "B", "name": "A and B and Compilation Errors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 37359}, {"contestId": 518, "index": "C", "name": "Anya and Smartphone", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 5909}, {"contestId": 515, "index": "E", "name": "Drazil and Park", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["data structures"], "solvedCount": 2038}, {"contestId": 514, "index": "D", "name": "R2D2 and Droid Army", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "two pointers"], "solvedCount": 4079}, {"contestId": 514, "index": "C", "name": "Watto and Mechanism", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "hashing", "string suffix structures", "strings"], "solvedCount": 6415}, {"contestId": 514, "index": "B", "name": "Han Solo and Lazer Gun", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["brute force", "data structures", "geometry", "implementation", "math"], "solvedCount": 19984}, {"contestId": 513, "index": "D2", "name": "Constrained Tree", "type": "PROGRAMMING", "points": 8.0, "rating": 2600, "tags": ["constructive algorithms", "data structures"], "solvedCount": 358}, {"contestId": 501, "index": "D", "name": "Misha and Permutations Summation", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["data structures"], "solvedCount": 2309}, {"contestId": 501, "index": "C", "name": "Misha and Forest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "sortings", "trees"], "solvedCount": 5496}, {"contestId": 501, "index": "B", "name": "Misha and Changing Handles", "type": "PROGRAMMING", "points": 500.0, "rating": 1100, "tags": ["data structures", "dsu", "strings"], "solvedCount": 15330}, {"contestId": 500, "index": "E", "name": "New Year Domino", "type": "PROGRAMMING", "points": 2750.0, "rating": 2300, "tags": ["data structures", "dp", "dsu"], "solvedCount": 1383}, {"contestId": 498, "index": "D", "name": "Traffic Jams in the Land", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "number theory"], "solvedCount": 1057}, {"contestId": 494, "index": "E", "name": "Sharti", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "games"], "solvedCount": 294}, {"contestId": 494, "index": "D", "name": "Birthday", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 509}, {"contestId": 493, "index": "C", "name": "Vasya and Basketball", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["binary search", "brute force", "data structures", "implementation", "sortings", "two pointers"], "solvedCount": 6635}, {"contestId": 490, "index": "F", "name": "Treeland Tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 1529}, {"contestId": 487, "index": "E", "name": "Tourists", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 2082}, {"contestId": 487, "index": "D", "name": "Conveyor Belts", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 834}, {"contestId": 487, "index": "B", "name": "Strip", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "two pointers"], "solvedCount": 3330}, {"contestId": 486, "index": "E", "name": "LIS of Sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "hashing", "math"], "solvedCount": 2011}, {"contestId": 484, "index": "E", "name": "Sign on Fence", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["binary search", "constructive algorithms", "data structures"], "solvedCount": 2145}, {"contestId": 484, "index": "D", "name": "Kindergarten", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dp", "greedy"], "solvedCount": 2386}, {"contestId": 482, "index": "E", "name": "ELCA", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "trees"], "solvedCount": 174}, {"contestId": 482, "index": "B", "name": "Interesting Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "trees"], "solvedCount": 6113}, {"contestId": 480, "index": "E", "name": "Parking Lot", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "divide and conquer"], "solvedCount": 498}, {"contestId": 477, "index": "E", "name": "Dreamoon and Notepad", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 130}, {"contestId": 475, "index": "F", "name": "Meta-universe", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 223}, {"contestId": 475, "index": "D", "name": "CGCDSSQ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "data structures", "math"], "solvedCount": 4397}, {"contestId": 474, "index": "F", "name": "Ant colony", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "math", "number theory"], "solvedCount": 7529}, {"contestId": 474, "index": "E", "name": "Pillars", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "sortings", "trees"], "solvedCount": 3051}, {"contestId": 472, "index": "G", "name": "Design Tutorial: Increase the Constraints", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["bitmasks", "data structures", "fft"], "solvedCount": 384}, {"contestId": 471, "index": "E", "name": "MUH and Lots and Lots of Segments", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "dsu"], "solvedCount": 79}, {"contestId": 467, "index": "E", "name": "Alex and Complicated Task", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "greedy"], "solvedCount": 751}, {"contestId": 466, "index": "C", "name": "Number of Ways", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "two pointers"], "solvedCount": 34223}, {"contestId": 464, "index": "E", "name": "The Classic Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "graphs", "shortest paths"], "solvedCount": 1243}, {"contestId": 461, "index": "C", "name": "Appleman and a Sheet of Paper", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "implementation"], "solvedCount": 1308}, {"contestId": 460, "index": "C", "name": "Present", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 5994}, {"contestId": 459, "index": "D", "name": "Pashmak and Parmida's problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "divide and conquer", "sortings"], "solvedCount": 9399}, {"contestId": 455, "index": "E", "name": "Function", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 650}, {"contestId": 455, "index": "D", "name": "Serega and Fun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 2777}, {"contestId": 453, "index": "E", "name": "Little Pony and Lord Tirek", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 637}, {"contestId": 452, "index": "F", "name": "Permutation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "hashing"], "solvedCount": 1312}, {"contestId": 452, "index": "E", "name": "Three strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dsu", "string suffix structures", "strings"], "solvedCount": 1017}, {"contestId": 446, "index": "C", "name": "DZY Loves Fibonacci Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "math", "number theory"], "solvedCount": 3132}, {"contestId": 446, "index": "B", "name": "DZY Loves Modification", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["brute force", "data structures", "greedy"], "solvedCount": 3506}, {"contestId": 444, "index": "C", "name": "DZY Loves Colors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 2745}, {"contestId": 442, "index": "D", "name": "Adam and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 943}, {"contestId": 442, "index": "C", "name": "Artem and Array ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["data structures", "greedy"], "solvedCount": 1613}, {"contestId": 438, "index": "D", "name": "The Child and Sequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "math"], "solvedCount": 7697}, {"contestId": 436, "index": "F", "name": "Banners", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["brute force", "data structures", "dp"], "solvedCount": 346}, {"contestId": 436, "index": "E", "name": "Cardboard Box", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "greedy"], "solvedCount": 1226}, {"contestId": 431, "index": "E", "name": "Chemistry Experiment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "ternary search"], "solvedCount": 889}, {"contestId": 429, "index": "D", "name": "Tricky Function", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures", "divide and conquer", "geometry"], "solvedCount": 2556}, {"contestId": 427, "index": "B", "name": "Prison Transfer", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "implementation"], "solvedCount": 13640}, {"contestId": 425, "index": "D", "name": "Sereja and Squares", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "data structures", "hashing"], "solvedCount": 1379}, {"contestId": 425, "index": "C", "name": "Sereja and Two Sequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dp"], "solvedCount": 880}, {"contestId": 424, "index": "D", "name": "Biathlon Track", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "brute force", "constructive algorithms", "data structures", "dp"], "solvedCount": 550}, {"contestId": 421, "index": "D", "name": "Bug in Code", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 491}, {"contestId": 420, "index": "D", "name": "Cup Trick", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 747}, {"contestId": 420, "index": "C", "name": "Bug in Code", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "graphs", "implementation", "two pointers"], "solvedCount": 1184}, {"contestId": 418, "index": "E", "name": "Tricky Password", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 286}, {"contestId": 418, "index": "D", "name": "Big Problems for Organizers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "graphs", "trees"], "solvedCount": 460}, {"contestId": 414, "index": "E", "name": "Mashmokh's Designed Problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures"], "solvedCount": 189}, {"contestId": 414, "index": "D", "name": "Mashmokh and Water Tanks", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "data structures", "greedy", "trees", "two pointers"], "solvedCount": 670}, {"contestId": 413, "index": "E", "name": "Maze 2D", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "divide and conquer"], "solvedCount": 660}, {"contestId": 407, "index": "E", "name": "k-d-sequence", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures"], "solvedCount": 676}, {"contestId": 403, "index": "E", "name": "Two Rooted Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "implementation", "trees"], "solvedCount": 200}, {"contestId": 400, "index": "E", "name": "Inna and Binary Logic", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "bitmasks", "data structures"], "solvedCount": 928}, {"contestId": 398, "index": "D", "name": "Instant Messanger", "type": "PROGRAMMING", "points": 2000.0, "tags": ["data structures"], "solvedCount": 824}, {"contestId": 396, "index": "C", "name": "On Changing Tree", "type": "PROGRAMMING", "points": 1500.0, "tags": ["data structures", "graphs", "trees"], "solvedCount": 1514}, {"contestId": 392, "index": "D", "name": "Three Arrays", "type": "PROGRAMMING", "points": 2000.0, "tags": ["data structures"], "solvedCount": 209}, {"contestId": 391, "index": "D2", "name": "Supercollider", "type": "PROGRAMMING", "points": 16.0, "tags": ["data structures"], "solvedCount": 176}, {"contestId": 390, "index": "C", "name": "Inna and Candy Boxes", "type": "PROGRAMMING", "points": 1500.0, "tags": ["data structures"], "solvedCount": 622}, {"contestId": 387, "index": "E", "name": "George and Cards", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 844}, {"contestId": 385, "index": "C", "name": "Bear and Prime Numbers", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["binary search", "brute force", "data structures", "dp", "implementation", "math", "number theory"], "solvedCount": 9311}, {"contestId": 383, "index": "C", "name": "Propagating tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 6016}, {"contestId": 383, "index": "A", "name": "Milking cows", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["data structures", "greedy"], "solvedCount": 5183}, {"contestId": 380, "index": "E", "name": "Sereja and Dividing", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures"], "solvedCount": 281}, {"contestId": 380, "index": "C", "name": "Sereja and Brackets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "schedules"], "solvedCount": 13327}, {"contestId": 379, "index": "F", "name": "New Year Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 2092}, {"contestId": 377, "index": "D", "name": "Developing Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 1069}, {"contestId": 377, "index": "B", "name": "Preparing for the Contest", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "greedy", "sortings"], "solvedCount": 1967}, {"contestId": 375, "index": "D", "name": "Tree and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 6065}, {"contestId": 375, "index": "B", "name": "Maximum Submatrix 2", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "dp", "implementation", "sortings"], "solvedCount": 4930}, {"contestId": 374, "index": "E", "name": "Inna and Babies", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["binary search", "data structures", "dsu", "geometry", "implementation"], "solvedCount": 175}, {"contestId": 374, "index": "D", "name": "Inna and Sequence ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "trees"], "solvedCount": 835}, {"contestId": 372, "index": "D", "name": "Choosing Subtree is Fun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dfs and similar", "trees", "two pointers"], "solvedCount": 897}, {"contestId": 372, "index": "C", "name": "Watching Fireworks is Fun", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures", "dp", "math"], "solvedCount": 3578}, {"contestId": 371, "index": "D", "name": "Vessels", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dsu", "implementation", "trees"], "solvedCount": 5169}, {"contestId": 369, "index": "E", "name": "Valera and Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures"], "solvedCount": 2009}, {"contestId": 368, "index": "B", "name": "Sereja and Suffixes", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["data structures", "dp"], "solvedCount": 39073}, {"contestId": 367, "index": "B", "name": "Sereja ans Anagrams", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures"], "solvedCount": 2393}, {"contestId": 367, "index": "A", "name": "Sereja and Algorithm ", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 4275}, {"contestId": 366, "index": "D", "name": "Dima and Trap Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "shortest paths", "two pointers"], "solvedCount": 1260}, {"contestId": 364, "index": "A", "name": "Matrix", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["combinatorics", "data structures", "implementation"], "solvedCount": 4577}, {"contestId": 363, "index": "E", "name": "Two Circles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 191}, {"contestId": 362, "index": "D", "name": "Fools and Foolproof Roads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy"], "solvedCount": 890}, {"contestId": 362, "index": "C", "name": "Insertion Sort", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures", "dp", "implementation", "math"], "solvedCount": 1631}, {"contestId": 359, "index": "D", "name": "Pair of Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["binary search", "brute force", "data structures", "math", "two pointers"], "solvedCount": 4787}, {"contestId": 356, "index": "A", "name": "Knight Tournament", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["data structures", "dsu"], "solvedCount": 12625}, {"contestId": 351, "index": "D", "name": "Jeff and Removing Periods", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 1010}, {"contestId": 350, "index": "D", "name": "Looking for Owls", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["binary search", "data structures", "geometry", "hashing", "sortings"], "solvedCount": 252}, {"contestId": 349, "index": "B", "name": "Color the Fence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["data structures", "dp", "greedy", "implementation"], "solvedCount": 13395}, {"contestId": 348, "index": "C", "name": "Subset Sums", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "data structures"], "solvedCount": 2028}, {"contestId": 343, "index": "D", "name": "Water Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 5316}, {"contestId": 343, "index": "B", "name": "Alternating Current", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 12836}, {"contestId": 342, "index": "E", "name": "Xenia and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 7467}, {"contestId": 341, "index": "D", "name": "Iahub and Xors", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 1132}, {"contestId": 340, "index": "D", "name": "Bubble Sort Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 1500, "tags": ["binary search", "data structures", "dp"], "solvedCount": 6964}, {"contestId": 339, "index": "D", "name": "Xenia and Bit Operations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "trees"], "solvedCount": 23302}, {"contestId": 338, "index": "E", "name": "Optimize!", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures"], "solvedCount": 939}, {"contestId": 332, "index": "C", "name": "Students' Revenge", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 868}, {"contestId": 332, "index": "B", "name": "Maximum Absurdity", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "dp", "implementation"], "solvedCount": 7783}, {"contestId": 331, "index": "D3", "name": "Escaping on Beaveractor", "type": "PROGRAMMING", "points": 40.0, "rating": 3000, "tags": ["data structures", "implementation", "trees"], "solvedCount": 166}, {"contestId": 331, "index": "B2", "name": "Shave Beaver!", "type": "PROGRAMMING", "points": 70.0, "rating": 1900, "tags": ["data structures"], "solvedCount": 670}, {"contestId": 331, "index": "A2", "name": "Oh Sweet Beaverette", "type": "PROGRAMMING", "points": 70.0, "rating": 1500, "tags": ["data structures", "sortings"], "solvedCount": 1371}, {"contestId": 323, "index": "C", "name": "Two permutations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 561}, {"contestId": 321, "index": "E", "name": "Ciel and Gondolas", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "divide and conquer", "dp"], "solvedCount": 4426}, {"contestId": 319, "index": "E", "name": "Ping-Pong", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 623}, {"contestId": 319, "index": "B", "name": "Psychos in a Line", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "implementation"], "solvedCount": 3992}, {"contestId": 316, "index": "E3", "name": "Summer Homework", "type": "PROGRAMMING", "points": 30.0, "rating": 2300, "tags": ["data structures", "math"], "solvedCount": 503}, {"contestId": 316, "index": "E2", "name": "Summer Homework", "type": "PROGRAMMING", "points": 40.0, "rating": 2300, "tags": ["data structures", "math"], "solvedCount": 377}, {"contestId": 316, "index": "E1", "name": "Summer Homework", "type": "PROGRAMMING", "points": 30.0, "rating": 1500, "tags": ["brute force", "data structures"], "solvedCount": 1443}, {"contestId": 314, "index": "D", "name": "Sereja and Straight Lines", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "data structures", "geometry", "sortings", "two pointers"], "solvedCount": 513}, {"contestId": 314, "index": "C", "name": "Sereja and Subsequences", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dp"], "solvedCount": 1757}, {"contestId": 313, "index": "E", "name": "Ilya and Two Numbers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "data structures", "dsu", "greedy"], "solvedCount": 537}, {"contestId": 311, "index": "D", "name": "Interval Cubing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "math"], "solvedCount": 655}, {"contestId": 311, "index": "C", "name": "Fetch the Treasure", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "data structures", "graphs", "shortest paths"], "solvedCount": 473}, {"contestId": 311, "index": "B", "name": "Cats Transport", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["data structures", "dp"], "solvedCount": 3129}, {"contestId": 306, "index": "B", "name": "Optimizer", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["data structures", "greedy", "sortings"], "solvedCount": 435}, {"contestId": 301, "index": "D", "name": "Yaroslav and Divisors", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 2175}, {"contestId": 297, "index": "E", "name": "Mystic Carvings", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 351}, {"contestId": 295, "index": "E", "name": "Yaroslav and Points", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures"], "solvedCount": 640}, {"contestId": 295, "index": "A", "name": "Greg and Array", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["data structures", "implementation"], "solvedCount": 15802}, {"contestId": 293, "index": "E", "name": "Close Vertices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 1247}, {"contestId": 292, "index": "E", "name": "Copying Data", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures"], "solvedCount": 3883}, {"contestId": 292, "index": "D", "name": "Connected Components", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "dsu"], "solvedCount": 2296}, {"contestId": 286, "index": "D", "name": "Tourists", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "sortings"], "solvedCount": 369}, {"contestId": 283, "index": "E", "name": "Cow Tennis Tournament", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["combinatorics", "data structures", "math"], "solvedCount": 706}, {"contestId": 283, "index": "A", "name": "Cows and Sequence", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 6439}, {"contestId": 282, "index": "E", "name": "Sausage Maximization", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 3316}, {"contestId": 280, "index": "E", "name": "Sequence Transformation", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["brute force", "data structures", "dp", "implementation", "math"], "solvedCount": 191}, {"contestId": 280, "index": "D", "name": "k-Maximum Subsequence Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "flows", "graphs", "implementation"], "solvedCount": 1148}, {"contestId": 280, "index": "B", "name": "Maximum Xor Secondary", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["data structures", "implementation", "two pointers"], "solvedCount": 4340}, {"contestId": 276, "index": "E", "name": "Little Girl and Problem on Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "graphs", "trees"], "solvedCount": 1533}, {"contestId": 276, "index": "C", "name": "Little Girl and Maximum Sum", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "greedy", "implementation", "sortings"], "solvedCount": 23517}, {"contestId": 274, "index": "E", "name": "Mirror Room", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "implementation"], "solvedCount": 279}, {"contestId": 272, "index": "C", "name": "Dima and Staircase", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "implementation"], "solvedCount": 6653}, {"contestId": 271, "index": "D", "name": "Good Substrings", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "strings"], "solvedCount": 10078}, {"contestId": 270, "index": "B", "name": "Multithreading", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["data structures", "greedy", "implementation"], "solvedCount": 4062}, {"contestId": 269, "index": "D", "name": "Maximum Waterfall", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "dp", "graphs", "sortings"], "solvedCount": 412}, {"contestId": 266, "index": "E", "name": "More Queries to Array...", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["data structures", "math"], "solvedCount": 711}, {"contestId": 264, "index": "E", "name": "Roadside Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dp"], "solvedCount": 393}, {"contestId": 264, "index": "A", "name": "Escape from Stones", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["constructive algorithms", "data structures", "implementation", "two pointers"], "solvedCount": 10560}, {"contestId": 263, "index": "E", "name": "Rhombus", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["brute force", "data structures", "dp"], "solvedCount": 386}, {"contestId": 260, "index": "E", "name": "Dividing Kingdom", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "brute force", "data structures"], "solvedCount": 406}, {"contestId": 258, "index": "E", "name": "Little Elephant and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 1017}, {"contestId": 257, "index": "E", "name": "Greedy Elevator", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "implementation"], "solvedCount": 271}, {"contestId": 256, "index": "E", "name": "Lucky Arrays", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 651}, {"contestId": 253, "index": "E", "name": "Printer", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "implementation", "sortings"], "solvedCount": 513}, {"contestId": 253, "index": "C", "name": "Text Editor", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths"], "solvedCount": 2502}, {"contestId": 249, "index": "D", "name": "Donkey and Stars", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["data structures", "dp", "geometry", "math", "sortings"], "solvedCount": 371}, {"contestId": 246, "index": "E", "name": "Blood Cousins Return", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "sortings"], "solvedCount": 2900}, {"contestId": 243, "index": "E", "name": "Matrix", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures"], "solvedCount": 170}, {"contestId": 243, "index": "D", "name": "Cubes", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures", "dp", "geometry", "two pointers"], "solvedCount": 206}, {"contestId": 242, "index": "E", "name": "XOR on Segment", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["bitmasks", "data structures"], "solvedCount": 8260}, {"contestId": 241, "index": "B", "name": "Friends", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "data structures", "math"], "solvedCount": 735}, {"contestId": 240, "index": "F", "name": "TorCoder", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures"], "solvedCount": 1752}, {"contestId": 238, "index": "D", "name": "Tape Programming", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "implementation"], "solvedCount": 242}, {"contestId": 235, "index": "C", "name": "Cyclical Quest", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["data structures", "string suffix structures", "strings"], "solvedCount": 1961}, {"contestId": 232, "index": "D", "name": "Fence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["binary search", "data structures", "string suffix structures"], "solvedCount": 438}, {"contestId": 231, "index": "E", "name": "Cactus", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 1502}, {"contestId": 229, "index": "B", "name": "Planets", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["binary search", "data structures", "graphs", "shortest paths"], "solvedCount": 4424}, {"contestId": 228, "index": "D", "name": "Zigzag", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures"], "solvedCount": 372}, {"contestId": 226, "index": "E", "name": "Noble Knight's Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 429}, {"contestId": 226, "index": "C", "name": "Anniversary", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["data structures", "implementation", "math", "matrices", "number theory"], "solvedCount": 838}, {"contestId": 223, "index": "B", "name": "Two Strings", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["data structures", "dp", "strings"], "solvedCount": 1707}, {"contestId": 223, "index": "A", "name": "Bracket Sequence", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["data structures", "expression parsing", "implementation"], "solvedCount": 2477}, {"contestId": 222, "index": "B", "name": "Cosmic Tables", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation"], "solvedCount": 5937}, {"contestId": 220, "index": "E", "name": "Little Elephant and Inversions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "two pointers"], "solvedCount": 1305}, {"contestId": 220, "index": "C", "name": "Little Elephant and Shifts", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["data structures"], "solvedCount": 918}, {"contestId": 220, "index": "B", "name": "Little Elephant and Array", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures"], "solvedCount": 9237}, {"contestId": 219, "index": "E", "name": "Parking Lot", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 594}, {"contestId": 217, "index": "E", "name": "Alien DNA", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dsu", "trees"], "solvedCount": 288}, {"contestId": 213, "index": "E", "name": "Two Permutations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "hashing", "strings"], "solvedCount": 754}, {"contestId": 212, "index": "D", "name": "Cutting a Fence", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["binary search", "data structures", "dsu"], "solvedCount": 450}, {"contestId": 208, "index": "E", "name": "Blood Cousins", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 5943}, {"contestId": 207, "index": "C3", "name": "Game with Two Trees", "type": "PROGRAMMING", "points": 50.0, "rating": 2700, "tags": ["data structures"], "solvedCount": 111}, {"contestId": 204, "index": "E", "name": "Little Elephant and Strings", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "implementation", "string suffix structures", "two pointers"], "solvedCount": 1066}, {"contestId": 204, "index": "B", "name": "Little Elephant and Cards", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["binary search", "data structures"], "solvedCount": 4963}, {"contestId": 200, "index": "A", "name": "Cinema", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["brute force", "data structures"], "solvedCount": 649}, {"contestId": 198, "index": "E", "name": "Gripping Story", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 399}, {"contestId": 196, "index": "D", "name": "The Next Good String", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "greedy", "hashing", "strings"], "solvedCount": 501}, {"contestId": 195, "index": "E", "name": "Building Forest", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "dsu", "graphs"], "solvedCount": 684}, {"contestId": 195, "index": "B", "name": "After Training", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["data structures", "implementation", "math"], "solvedCount": 5092}, {"contestId": 193, "index": "D", "name": "Two Segments", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures"], "solvedCount": 386}, {"contestId": 191, "index": "E", "name": "Thwarting Demonstrations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "trees"], "solvedCount": 801}, {"contestId": 191, "index": "C", "name": "Fools and Roads", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 6625}, {"contestId": 190, "index": "E", "name": "Counter Attack", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dsu", "graphs", "hashing", "sortings"], "solvedCount": 1407}, {"contestId": 187, "index": "E", "name": "Heaven Tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "greedy"], "solvedCount": 90}, {"contestId": 187, "index": "D", "name": "BRT Contract ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures"], "solvedCount": 498}, {"contestId": 185, "index": "E", "name": "Soap Time! - 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "data structures"], "solvedCount": 102}, {"contestId": 182, "index": "C", "name": "Optimal Sum", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["data structures", "greedy"], "solvedCount": 703}, {"contestId": 177, "index": "D2", "name": "Encrypting Messages", "type": "PROGRAMMING", "points": 70.0, "rating": 1500, "tags": ["data structures"], "solvedCount": 1751}, {"contestId": 176, "index": "E", "name": "Archaeology", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 1007}, {"contestId": 175, "index": "F", "name": "Gnomes of Might and Magic", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "graphs", "implementation", "shortest paths"], "solvedCount": 63}, {"contestId": 174, "index": "C", "name": "Range Increments", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 1061}, {"contestId": 173, "index": "E", "name": "Camping Groups", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "sortings"], "solvedCount": 530}, {"contestId": 167, "index": "D", "name": "Wizards and Roads", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "graph matchings", "graphs", "greedy"], "solvedCount": 188}, {"contestId": 165, "index": "D", "name": "Beard Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dsu", "trees"], "solvedCount": 1564}, {"contestId": 163, "index": "E", "name": "e-Government", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "strings", "trees"], "solvedCount": 1490}, {"contestId": 160, "index": "E", "name": "Buses and People", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 571}, {"contestId": 159, "index": "E", "name": "Zebra Tower", "type": "PROGRAMMING", "points": 2500.0, "rating": 1700, "tags": ["*special", "data structures", "greedy", "sortings"], "solvedCount": 986}, {"contestId": 159, "index": "C", "name": "String Manipulation 1.0", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["*special", "binary search", "brute force", "data structures", "strings"], "solvedCount": 2899}, {"contestId": 158, "index": "C", "name": "Cd and pwd commands", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["*special", "data structures", "implementation"], "solvedCount": 8617}, {"contestId": 156, "index": "B", "name": "Suspects", "type": "PROGRAMMING", "points": 1000.0, "rating": 1600, "tags": ["constructive algorithms", "data structures", "implementation"], "solvedCount": 2168}, {"contestId": 150, "index": "E", "name": "Freezing with Style", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "divide and conquer", "trees"], "solvedCount": 770}, {"contestId": 150, "index": "C", "name": "Smart Cheater", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["data structures", "math", "probabilities"], "solvedCount": 623}, {"contestId": 145, "index": "E", "name": "Lucky Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 2866}, {"contestId": 145, "index": "D", "name": "Lucky Pair", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "data structures", "implementation"], "solvedCount": 235}, {"contestId": 144, "index": "E", "name": "Competition", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "greedy"], "solvedCount": 556}, {"contestId": 144, "index": "D", "name": "Missile Silos", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths"], "solvedCount": 3655}, {"contestId": 140, "index": "C", "name": "New Year Snowmen", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["binary search", "data structures", "greedy"], "solvedCount": 4181}, {"contestId": 138, "index": "C", "name": "Mushroom Gnomes - 2", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "data structures", "probabilities", "sortings"], "solvedCount": 843}, {"contestId": 137, "index": "E", "name": "Last Chance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "implementation", "strings"], "solvedCount": 1176}, {"contestId": 121, "index": "E", "name": "Lucky Array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 1571}, {"contestId": 117, "index": "E", "name": "Tree or not Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 303}, {"contestId": 115, "index": "E", "name": "Linear Kingdom Races", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dp"], "solvedCount": 1342}, {"contestId": 113, "index": "B", "name": "Petr#", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["brute force", "data structures", "hashing", "strings"], "solvedCount": 2692}, {"contestId": 111, "index": "B", "name": "Petya and Divisors", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "number theory"], "solvedCount": 3524}, {"contestId": 103, "index": "D", "name": "Time to Raid Cowavans", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "data structures", "sortings"], "solvedCount": 1950}, {"contestId": 101, "index": "B", "name": "Buses", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["binary search", "data structures", "dp"], "solvedCount": 2467}, {"contestId": 100, "index": "G", "name": "Name the album", "type": "PROGRAMMING", "rating": 1800, "tags": ["*special", "data structures", "implementation"], "solvedCount": 107}, {"contestId": 91, "index": "E", "name": "Igloo Skyscraper", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "geometry"], "solvedCount": 582}, {"contestId": 91, "index": "B", "name": "Queue", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["binary search", "data structures"], "solvedCount": 6444}, {"contestId": 89, "index": "C", "name": "Chip Play", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["brute force", "data structures", "implementation"], "solvedCount": 608}, {"contestId": 86, "index": "D", "name": "Powerful array", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "implementation", "math", "two pointers"], "solvedCount": 12298}, {"contestId": 85, "index": "D", "name": "Sum of Medians", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "brute force", "data structures", "implementation"], "solvedCount": 1894}, {"contestId": 85, "index": "B", "name": "Embassy Queue", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["data structures", "greedy"], "solvedCount": 954}, {"contestId": 82, "index": "C", "name": "General Mobilization", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "sortings"], "solvedCount": 794}, {"contestId": 79, "index": "C", "name": "Beaver", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "dp", "greedy", "hashing", "strings", "two pointers"], "solvedCount": 1709}, {"contestId": 76, "index": "F", "name": "Tourist", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "dp"], "solvedCount": 581}, {"contestId": 75, "index": "D", "name": "Big Maximum Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "implementation", "math", "trees"], "solvedCount": 1711}, {"contestId": 74, "index": "D", "name": "Hanger", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures"], "solvedCount": 353}, {"contestId": 70, "index": "D", "name": "Professor's task", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["data structures", "geometry"], "solvedCount": 914}, {"contestId": 70, "index": "C", "name": "Lucky Tickets", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "sortings", "two pointers"], "solvedCount": 559}, {"contestId": 69, "index": "E", "name": "Subsegments", "type": "PROGRAMMING", "points": 2500.0, "rating": 1800, "tags": ["data structures", "implementation"], "solvedCount": 3998}, {"contestId": 68, "index": "D", "name": "Half-decay tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["data structures", "divide and conquer", "dp", "math", "probabilities"], "solvedCount": 442}, {"contestId": 67, "index": "D", "name": "Optical Experiment", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "data structures", "dp"], "solvedCount": 1321}, {"contestId": 66, "index": "E", "name": "Petya and Post", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["data structures", "dp"], "solvedCount": 673}, {"contestId": 66, "index": "C", "name": "Petya and File System", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "implementation"], "solvedCount": 989}, {"contestId": 61, "index": "E", "name": "Enemy is weak", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures", "trees"], "solvedCount": 9831}, {"contestId": 56, "index": "E", "name": "Domino Principle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "sortings"], "solvedCount": 2195}, {"contestId": 56, "index": "C", "name": "Corporation Mail", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "expression parsing", "implementation"], "solvedCount": 1115}, {"contestId": 52, "index": "C", "name": "Circular RMQ", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures"], "solvedCount": 7983}, {"contestId": 47, "index": "E", "name": "Cannon", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "geometry", "sortings"], "solvedCount": 350}, {"contestId": 46, "index": "E", "name": "Comb", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dp"], "solvedCount": 898}, {"contestId": 46, "index": "D", "name": "Parking Lot", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "implementation"], "solvedCount": 952}, {"contestId": 45, "index": "C", "name": "Dancing Lessons", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures"], "solvedCount": 842}, {"contestId": 44, "index": "G", "name": "Shooting Gallery", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "implementation"], "solvedCount": 351}, {"contestId": 38, "index": "G", "name": "Queue", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures"], "solvedCount": 670}, {"contestId": 37, "index": "C", "name": "Old Berland Language", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "greedy", "trees"], "solvedCount": 1483}, {"contestId": 35, "index": "E", "name": "Parade", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "sortings"], "solvedCount": 696}, {"contestId": 30, "index": "E", "name": "Tricky and Clever Password", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "greedy", "hashing", "strings"], "solvedCount": 663}, {"contestId": 29, "index": "C", "name": "Mail Stamps", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["data structures", "dfs and similar", "graphs", "implementation"], "solvedCount": 4462}, {"contestId": 28, "index": "D", "name": "Don't fear, DravDe is kind", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "hashing"], "solvedCount": 570}, {"contestId": 19, "index": "D", "name": "Points", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures"], "solvedCount": 2032}, {"contestId": 18, "index": "C", "name": "Stripe", "type": "PROGRAMMING", "rating": 1200, "tags": ["data structures", "implementation"], "solvedCount": 12331}, {"contestId": 15, "index": "D", "name": "Map", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "implementation", "sortings"], "solvedCount": 702}, {"contestId": 13, "index": "E", "name": "Holes", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dsu"], "solvedCount": 5243}, {"contestId": 12, "index": "D", "name": "Ball", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "sortings"], "solvedCount": 1934}, {"contestId": 6, "index": "E", "name": "Exposition", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dsu", "trees", "two pointers"], "solvedCount": 2923}, {"contestId": 5, "index": "E", "name": "Bindian Signalizing", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures"], "solvedCount": 1987}, {"contestId": 5, "index": "C", "name": "Longest Regular Bracket Sequence", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "greedy", "sortings", "strings"], "solvedCount": 12416}, {"contestId": 4, "index": "C", "name": "Registration System", "type": "PROGRAMMING", "rating": 1300, "tags": ["data structures", "hashing", "implementation"], "solvedCount": 75680}]