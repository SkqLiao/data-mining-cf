[{"contestId": 1949, "index": "J", "name": "Amanda the Amoeba", "type": "PROGRAMMING", "tags": ["graphs", "implementation", "trees", "two pointers"], "solvedCount": 193}, {"contestId": 1949, "index": "F", "name": "Dating", "type": "PROGRAMMING", "tags": ["greedy", "sortings", "trees"], "solvedCount": 489}, {"contestId": 1949, "index": "C", "name": "Annual Ants' Gathering", "type": "PROGRAMMING", "tags": ["dfs and similar", "greedy", "trees"], "solvedCount": 796}, {"contestId": 1948, "index": "G", "name": "MST with Matching", "type": "PROGRAMMING", "rating": 3100, "tags": ["bitmasks", "brute force", "dsu", "graph matchings", "trees"], "solvedCount": 470}, {"contestId": 1946, "index": "C", "name": "Tree Cutting", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["binary search", "dp", "greedy", "implementation", "trees"], "solvedCount": 7102}, {"contestId": 1943, "index": "C", "name": "Tree Compass", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1459}, {"contestId": 1940, "index": "C", "name": "Burenka and Pether", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "sortings", "trees"], "solvedCount": 24}, {"contestId": 1939, "index": "B", "name": "Evidence Board", "type": "PROGRAMMING", "tags": ["*special", "constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 193}, {"contestId": 1935, "index": "F", "name": "Andrey's Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["binary search", "constructive algorithms", "data structures", "dfs and similar", "dsu", "greedy", "implementation", "trees"], "solvedCount": 311}, {"contestId": 1930, "index": "H", "name": "Interactive Mex Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "solvedCount": 98}, {"contestId": 1930, "index": "G", "name": "Prefix Max Set Counting", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "dp", "trees"], "solvedCount": 193}, {"contestId": 1929, "index": "F", "name": "Sasha and the Wedding Binary Search Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2300, "tags": ["brute force", "combinatorics", "data structures", "dfs and similar", "math", "trees"], "solvedCount": 1535}, {"contestId": 1929, "index": "E", "name": "Sasha and the Happy Tree Cutting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["bitmasks", "brute force", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "solvedCount": 1398}, {"contestId": 1929, "index": "D", "name": "Sasha and a Walk in the City", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["combinatorics", "dp", "math", "trees"], "solvedCount": 3909}, {"contestId": 1927, "index": "F", "name": "Microcycle", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "sortings", "trees"], "solvedCount": 3529}, {"contestId": 1926, "index": "G", "name": "Vlad and Trouble at MIT", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "flows", "graphs", "greedy", "implementation", "trees"], "solvedCount": 2671}, {"contestId": 1923, "index": "E", "name": "Count Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "solvedCount": 2873}, {"contestId": 1920, "index": "F2", "name": "Smooth Sailing (Hard Version)", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["binary search", "data structures", "dsu", "geometry", "graphs", "trees"], "solvedCount": 381}, {"contestId": 1919, "index": "H", "name": "Tree Diameter", "type": "PROGRAMMING", "points": 5000.0, "rating": 2000, "tags": ["interactive", "trees"], "solvedCount": 118}, {"contestId": 1919, "index": "G", "name": "Tree LGM", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "divide and conquer", "games", "trees"], "solvedCount": 143}, {"contestId": 1919, "index": "D", "name": "01 Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "data structures", "dsu", "greedy", "sortings", "trees"], "solvedCount": 3503}, {"contestId": 1918, "index": "F", "name": "Caterpillar on a Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["dfs and similar", "graphs", "greedy", "implementation", "sortings", "trees"], "solvedCount": 710}, {"contestId": 1917, "index": "F", "name": "Construct Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "solvedCount": 866}, {"contestId": 1916, "index": "G", "name": "Optimizations From Chelsu", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["divide and conquer", "dp", "number theory", "trees"], "solvedCount": 126}, {"contestId": 1916, "index": "E", "name": "Happy Life in University", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 2036}, {"contestId": 1914, "index": "G1", "name": "Light Bulbs (Easy Version)", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "dsu", "graphs", "math", "trees"], "solvedCount": 1593}, {"contestId": 1914, "index": "F", "name": "Programming Competition", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"], "solvedCount": 3511}, {"contestId": 1913, "index": "D", "name": "Array Collapse", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "dp", "trees"], "solvedCount": 2566}, {"contestId": 1910, "index": "F", "name": "Build Railway Stations", "type": "PROGRAMMING", "rating": 2000, "tags": ["*special", "greedy", "trees"], "solvedCount": 151}, {"contestId": 1905, "index": "E", "name": "One-X", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "solvedCount": 801}, {"contestId": 1905, "index": "B", "name": "Begginer's Zelda", "type": "PROGRAMMING", "points": 1000.0, "rating": 1100, "tags": ["greedy", "trees"], "solvedCount": 14880}, {"contestId": 1904, "index": "F", "name": "Beautiful Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 284}, {"contestId": 1904, "index": "E", "name": "Tree Queries", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 771}, {"contestId": 1903, "index": "F", "name": "Babysitting", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["2-sat", "binary search", "data structures", "graphs", "trees"], "solvedCount": 518}, {"contestId": 1902, "index": "F", "name": "Trees and XOR Queries Again", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "implementation", "math", "trees"], "solvedCount": 852}, {"contestId": 1902, "index": "E", "name": "Collapsing Strings", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "strings", "trees"], "solvedCount": 3600}, {"contestId": 1901, "index": "E", "name": "Compressed Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1313}, {"contestId": 1900, "index": "C", "name": "Anji's Binary Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1300, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 9973}, {"contestId": 1899, "index": "G", "name": "Unusual Entertainment", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "dfs and similar", "dsu", "shortest paths", "sortings", "trees", "two pointers"], "solvedCount": 2791}, {"contestId": 1899, "index": "F", "name": "Alex's whims", "type": "PROGRAMMING", "rating": 1600, "tags": ["constructive algorithms", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 6408}, {"contestId": 1895, "index": "D", "name": "XOR Construction", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "constructive algorithms", "data structures", "math", "string suffix structures", "trees"], "solvedCount": 5388}, {"contestId": 1891, "index": "F", "name": "A Growing Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 3269}, {"contestId": 1889, "index": "F", "name": "Doremy's Average Tree", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "dp", "greedy", "trees"], "solvedCount": 66}, {"contestId": 1889, "index": "E", "name": "Doremy's Swapping Trees", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 84}, {"contestId": 1889, "index": "D", "name": "Game of Stacks", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["brute force", "dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 492}, {"contestId": 1887, "index": "D", "name": "Split", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["binary search", "data structures", "divide and conquer", "dsu", "math", "trees", "two pointers"], "solvedCount": 782}, {"contestId": 1882, "index": "D", "name": "Tree XOR", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4751}, {"contestId": 1881, "index": "F", "name": "Minimum Maximum Distance", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees"], "solvedCount": 5685}, {"contestId": 1879, "index": "E", "name": "Interactive Game with Coloring", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graphs", "implementation", "interactive", "trees"], "solvedCount": 1162}, {"contestId": 1878, "index": "G", "name": "wxhtzdy ORO Tree", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dfs and similar", "implementation", "trees"], "solvedCount": 1059}, {"contestId": 1876, "index": "G", "name": "Clubstep", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["binary search", "brute force", "data structures", "greedy", "trees"], "solvedCount": 109}, {"contestId": 1876, "index": "E", "name": "Ball-Stackable", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 210}, {"contestId": 1873, "index": "H", "name": "Mad City", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dsu", "games", "graphs", "shortest paths", "trees"], "solvedCount": 6346}, {"contestId": 1870, "index": "H", "name": "Standard Graph Problem", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["data structures", "graphs", "greedy", "trees"], "solvedCount": 76}, {"contestId": 1868, "index": "D", "name": "Flower-like Pseudotree", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["constructive algorithms", "graphs", "greedy", "implementation", "trees"], "solvedCount": 241}, {"contestId": 1868, "index": "C", "name": "Travel Plan", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["combinatorics", "dp", "implementation", "math", "trees"], "solvedCount": 1050}, {"contestId": 1866, "index": "K", "name": "Keen Tree Calculation", "type": "PROGRAMMING", "rating": 2500, "tags": ["binary search", "data structures", "dp", "geometry", "graphs", "implementation", "trees"], "solvedCount": 399}, {"contestId": 1864, "index": "E", "name": "Guess Game", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "data structures", "games", "math", "probabilities", "sortings", "strings", "trees"], "solvedCount": 2438}, {"contestId": 1863, "index": "I", "name": "Redundant Routes", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "trees"], "solvedCount": 66}, {"contestId": 1863, "index": "H", "name": "Goldberg Machine 3", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dp", "trees"], "solvedCount": 69}, {"contestId": 1861, "index": "C", "name": "Queries for the Array", "type": "PROGRAMMING", "rating": 1600, "tags": ["data structures", "dfs and similar", "implementation", "strings", "trees"], "solvedCount": 9250}, {"contestId": 1859, "index": "F", "name": "Teleportation in Byteland", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "divide and conquer", "graphs", "shortest paths", "trees"], "solvedCount": 355}, {"contestId": 1858, "index": "E2", "name": "Rollbacks (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["data structures", "interactive", "trees"], "solvedCount": 985}, {"contestId": 1858, "index": "E1", "name": "Rollbacks (Easy Version)", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["brute force", "data structures", "dfs and similar", "trees"], "solvedCount": 1227}, {"contestId": 1857, "index": "G", "name": "Counting Graphs", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "divide and conquer", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 3966}, {"contestId": 1857, "index": "D", "name": "Strong Vertices", "type": "PROGRAMMING", "rating": 1300, "tags": ["math", "sortings", "trees"], "solvedCount": 17262}, {"contestId": 1856, "index": "E2", "name": "PermuTree (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["bitmasks", "dfs and similar", "dp", "fft", "greedy", "implementation", "math", "trees"], "solvedCount": 1288}, {"contestId": 1856, "index": "E1", "name": "PermuTree (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 4797}, {"contestId": 1854, "index": "D", "name": "Michael and Hotel", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["binary search", "interactive", "trees"], "solvedCount": 499}, {"contestId": 1851, "index": "G", "name": "Vlad and the Mountains", "type": "PROGRAMMING", "rating": 2000, "tags": ["binary search", "data structures", "dsu", "graphs", "implementation", "sortings", "trees", "two pointers"], "solvedCount": 2829}, {"contestId": 1851, "index": "F", "name": "Lisa and the Martians", "type": "PROGRAMMING", "rating": 1800, "tags": ["bitmasks", "greedy", "math", "strings", "trees"], "solvedCount": 5140}, {"contestId": 1849, "index": "F", "name": "XOR Partition", "type": "PROGRAMMING", "rating": 2700, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "greedy", "trees"], "solvedCount": 612}, {"contestId": 1844, "index": "G", "name": "Tree Weights", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "implementation", "math", "matrices", "number theory", "trees"], "solvedCount": 627}, {"contestId": 1843, "index": "F2", "name": "Omsk Metro (hard version)", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "math", "trees"], "solvedCount": 1429}, {"contestId": 1843, "index": "F1", "name": "Omsk Metro (simple version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "math", "trees"], "solvedCount": 4862}, {"contestId": 1843, "index": "D", "name": "Apple Tree", "type": "PROGRAMMING", "rating": 1200, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "solvedCount": 16670}, {"contestId": 1843, "index": "C", "name": "Sum in Binary Tree", "type": "PROGRAMMING", "rating": 800, "tags": ["bitmasks", "combinatorics", "math", "trees"], "solvedCount": 30448}, {"contestId": 1842, "index": "F", "name": "Tenzing and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "greedy", "shortest paths", "sortings", "trees"], "solvedCount": 1212}, {"contestId": 1837, "index": "E", "name": "Playoff Fixing", "type": "PROGRAMMING", "rating": 2200, "tags": ["combinatorics", "trees"], "solvedCount": 2055}, {"contestId": 1833, "index": "G", "name": "Ksyusha and Chinchilla", "type": "PROGRAMMING", "rating": 1800, "tags": ["constructive algorithms", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "solvedCount": 4792}, {"contestId": 1830, "index": "D", "name": "Mex Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "dp", "trees"], "solvedCount": 564}, {"contestId": 1830, "index": "A", "name": "Copil Copac Draws Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1400, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 12132}, {"contestId": 1827, "index": "E", "name": "Bus Routes", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 348}, {"contestId": 1827, "index": "D", "name": "Two Centroids", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 681}, {"contestId": 1827, "index": "B1", "name": "Range Sorting (Easy Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["binary search", "dp", "dsu", "greedy", "trees", "two pointers"], "solvedCount": 3603}, {"contestId": 1824, "index": "E", "name": "LuoTianyi and Cartridge", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 120}, {"contestId": 1824, "index": "C", "name": "LuoTianyi and XOR-Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "dsu", "greedy", "trees"], "solvedCount": 1217}, {"contestId": 1824, "index": "B2", "name": "LuoTianyi and the Floating Islands (Hard Version)", "type": "PROGRAMMING", "points": 750.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "math", "probabilities", "trees"], "solvedCount": 2450}, {"contestId": 1824, "index": "B1", "name": "LuoTianyi and the Floating Islands (Easy Version)", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["combinatorics", "math", "probabilities", "trees"], "solvedCount": 4258}, {"contestId": 1823, "index": "F", "name": "Random Walk", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dp", "graphs", "math", "probabilities", "trees"], "solvedCount": 749}, {"contestId": 1822, "index": "F", "name": "Gardening Friends", "type": "PROGRAMMING", "rating": 1700, "tags": ["brute force", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 5403}, {"contestId": 1819, "index": "E", "name": "Roads in E City", "type": "PROGRAMMING", "points": 2750.0, "rating": 3200, "tags": ["interactive", "math", "probabilities", "trees"], "solvedCount": 235}, {"contestId": 1819, "index": "C", "name": "The Fox and the Complete Tree Traversal", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["constructive algorithms", "dp", "implementation", "math", "trees"], "solvedCount": 1363}, {"contestId": 1815, "index": "B", "name": "Sum Graph", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "graphs", "implementation", "interactive", "shortest paths", "trees"], "solvedCount": 2800}, {"contestId": 1810, "index": "F", "name": "M-tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "math", "sortings", "trees"], "solvedCount": 519}, {"contestId": 1806, "index": "E", "name": "Tree Master", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["brute force", "data structures", "dfs and similar", "trees"], "solvedCount": 2636}, {"contestId": 1805, "index": "E", "name": "There Should Be a Lot of Maximums", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "data structures", "dfs and similar", "dp", "trees", "two pointers"], "solvedCount": 1488}, {"contestId": 1805, "index": "D", "name": "A Wide, Wide Graph", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 5905}, {"contestId": 1801, "index": "E", "name": "Gasoline prices", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "hashing", "trees"], "solvedCount": 423}, {"contestId": 1800, "index": "G", "name": "Symmetree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "hashing", "implementation", "trees"], "solvedCount": 1885}, {"contestId": 1797, "index": "F", "name": "Li Hua and Path", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "trees"], "solvedCount": 321}, {"contestId": 1797, "index": "D", "name": "Li Hua and Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["brute force", "data structures", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 3623}, {"contestId": 1796, "index": "E", "name": "Colored Subgraphs", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "games", "greedy", "trees"], "solvedCount": 676}, {"contestId": 1795, "index": "F", "name": "Blocking Chips", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1031}, {"contestId": 1794, "index": "E", "name": "Labeling the Tree with Distances", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dp", "greedy", "hashing", "implementation", "trees"], "solvedCount": 987}, {"contestId": 1790, "index": "F", "name": "Timofey and Black-White Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["brute force", "dfs and similar", "divide and conquer", "graphs", "greedy", "math", "shortest paths", "trees"], "solvedCount": 3075}, {"contestId": 1788, "index": "F", "name": "XOR, Tree, and Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "implementation", "trees"], "solvedCount": 754}, {"contestId": 1787, "index": "G", "name": "Colorful Tree Again", "type": "PROGRAMMING", "points": 3250.0, "rating": 3000, "tags": ["brute force", "data structures", "trees"], "solvedCount": 389}, {"contestId": 1783, "index": "G", "name": "Weighed Tree Radius", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 400}, {"contestId": 1781, "index": "G", "name": "Diverse Coloring", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["constructive algorithms", "trees"], "solvedCount": 211}, {"contestId": 1781, "index": "F", "name": "Bracket Insertion", "type": "PROGRAMMING", "points": 3250.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "trees"], "solvedCount": 709}, {"contestId": 1779, "index": "F", "name": "Xorcerer's Stones", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "constructive algorithms", "dp", "trees"], "solvedCount": 1205}, {"contestId": 1778, "index": "F", "name": "Maximizing Root", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "math", "number theory", "trees"], "solvedCount": 589}, {"contestId": 1778, "index": "E", "name": "The Tree Has Fallen!", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["bitmasks", "dfs and similar", "math", "trees"], "solvedCount": 783}, {"contestId": 1777, "index": "F", "name": "Comfortably Numb", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "strings", "trees"], "solvedCount": 800}, {"contestId": 1777, "index": "E", "name": "Edge Reverse", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["binary search", "dfs and similar", "graphs", "trees"], "solvedCount": 1645}, {"contestId": 1777, "index": "D", "name": "Score of a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "math", "probabilities", "trees"], "solvedCount": 3143}, {"contestId": 1776, "index": "M", "name": "Parmigiana With Seafood", "type": "PROGRAMMING", "rating": 3000, "tags": ["binary search", "dp", "greedy", "trees"], "solvedCount": 320}, {"contestId": 1774, "index": "G", "name": "Segment Covering", "type": "PROGRAMMING", "points": 3250.0, "rating": 3200, "tags": ["brute force", "combinatorics", "constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 322}, {"contestId": 1774, "index": "E", "name": "Two Chess Pieces", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 3283}, {"contestId": 1773, "index": "B", "name": "BinCoin", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "divide and conquer", "hashing", "implementation", "probabilities", "trees"], "solvedCount": 716}, {"contestId": 1771, "index": "F", "name": "Hossam and Range Minimum Query", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["binary search", "bitmasks", "data structures", "hashing", "probabilities", "strings", "trees"], "solvedCount": 936}, {"contestId": 1771, "index": "D", "name": "Hossam and (sub-)palindromic tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["brute force", "data structures", "dfs and similar", "dp", "strings", "trees"], "solvedCount": 2560}, {"contestId": 1770, "index": "E", "name": "Koxia and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "dsu", "math", "probabilities", "trees"], "solvedCount": 1283}, {"contestId": 1767, "index": "F", "name": "Two Subtrees", "type": "PROGRAMMING", "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 241}, {"contestId": 1767, "index": "E", "name": "Algebra Flash", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "brute force", "dp", "graphs", "math", "meet-in-the-middle", "trees"], "solvedCount": 815}, {"contestId": 1764, "index": "F", "name": "Doremy's Experimental Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "sortings", "trees"], "solvedCount": 864}, {"contestId": 1763, "index": "F", "name": "Edge Queries", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "dsu", "graphs", "trees"], "solvedCount": 411}, {"contestId": 1762, "index": "E", "name": "Tree Sum", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["combinatorics", "math", "trees"], "solvedCount": 582}, {"contestId": 1761, "index": "G", "name": "Centroid Guess", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["interactive", "probabilities", "trees"], "solvedCount": 95}, {"contestId": 1761, "index": "E", "name": "Make It Connected", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["binary search", "brute force", "constructive algorithms", "dsu", "graphs", "greedy", "matrices", "trees", "two pointers"], "solvedCount": 1700}, {"contestId": 1749, "index": "F", "name": "Distance to the Path", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 461}, {"contestId": 1748, "index": "E", "name": "Yet Another Array Counting Problem", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "divide and conquer", "dp", "flows", "math", "trees"], "solvedCount": 1677}, {"contestId": 1746, "index": "D", "name": "Paths on the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"], "solvedCount": 4360}, {"contestId": 1741, "index": "D", "name": "Masha and a Beautiful Tree", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "divide and conquer", "graphs", "sortings", "trees"], "solvedCount": 14187}, {"contestId": 1740, "index": "H", "name": "MEX Tree Manipulation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "trees"], "solvedCount": 197}, {"contestId": 1740, "index": "E", "name": "Hanging Hearts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4052}, {"contestId": 1739, "index": "D", "name": "Reset K Edges", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 4784}, {"contestId": 1738, "index": "F", "name": "Connectivity Addicts", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "interactive", "shortest paths", "trees"], "solvedCount": 1135}, {"contestId": 1738, "index": "D", "name": "Permutation Addicts", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 3283}, {"contestId": 1726, "index": "D", "name": "Edge Split", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "probabilities", "trees"], "solvedCount": 3509}, {"contestId": 1725, "index": "J", "name": "Journey", "type": "PROGRAMMING", "rating": 2500, "tags": ["dp", "trees"], "solvedCount": 352}, {"contestId": 1725, "index": "I", "name": "Imitating the Key Tree", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "dsu", "trees"], "solvedCount": 176}, {"contestId": 1725, "index": "E", "name": "Electrical Efficiency", "type": "PROGRAMMING", "rating": 2500, "tags": ["combinatorics", "data structures", "dp", "math", "number theory", "trees"], "solvedCount": 424}, {"contestId": 1721, "index": "E", "name": "Prefix Function Queries", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "hashing", "string suffix structures", "strings", "trees"], "solvedCount": 1785}, {"contestId": 1720, "index": "D2", "name": "Xor-Subsequence (hard version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2400, "tags": ["bitmasks", "data structures", "dp", "strings", "trees"], "solvedCount": 1708}, {"contestId": 1720, "index": "D1", "name": "Xor-Subsequence (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["bitmasks", "brute force", "dp", "strings", "trees", "two pointers"], "solvedCount": 5654}, {"contestId": 1718, "index": "D", "name": "Permutation for Burenka", "type": "PROGRAMMING", "points": 2250.0, "rating": 3300, "tags": ["data structures", "graph matchings", "greedy", "math", "trees"], "solvedCount": 283}, {"contestId": 1714, "index": "G", "name": "Path Prefixes", "type": "PROGRAMMING", "rating": 1700, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 6990}, {"contestId": 1714, "index": "F", "name": "Build a Tree and That Is It", "type": "PROGRAMMING", "rating": 1900, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 3019}, {"contestId": 1712, "index": "F", "name": "Triameter", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 299}, {"contestId": 1710, "index": "D", "name": "Recover the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["constructive algorithms", "trees"], "solvedCount": 403}, {"contestId": 1709, "index": "F", "name": "Multiset of Strings", "type": "PROGRAMMING", "rating": 2500, "tags": ["bitmasks", "brute force", "dp", "fft", "flows", "graphs", "math", "meet-in-the-middle", "trees"], "solvedCount": 520}, {"contestId": 1709, "index": "E", "name": "XOR Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["bitmasks", "data structures", "dfs and similar", "dsu", "greedy", "trees"], "solvedCount": 2362}, {"contestId": 1707, "index": "D", "name": "Partial Virtual Trees", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "solvedCount": 549}, {"contestId": 1707, "index": "C", "name": "DFS Trees", "type": "PROGRAMMING", "points": 1250.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1359}, {"contestId": 1706, "index": "E", "name": "Qpwoeirut and Vertices", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "trees"], "solvedCount": 2319}, {"contestId": 1702, "index": "G2", "name": "Passable Paths (hard version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 4207}, {"contestId": 1702, "index": "G1", "name": "Passable Paths (easy version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "trees"], "solvedCount": 5034}, {"contestId": 1698, "index": "E", "name": "PermutationForces II", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["brute force", "combinatorics", "greedy", "sortings", "trees", "two pointers"], "solvedCount": 1558}, {"contestId": 1696, "index": "F", "name": "Tree Recovery", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 826}, {"contestId": 1695, "index": "D2", "name": "Tree Queries (Hard Version)", "type": "PROGRAMMING", "points": 1000.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1893}, {"contestId": 1695, "index": "D1", "name": "Tree Queries (Easy Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2200, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2061}, {"contestId": 1693, "index": "B", "name": "Fake Plastic Trees", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 7971}, {"contestId": 1691, "index": "F", "name": "K-Set Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["combinatorics", "dfs and similar", "dp", "math", "trees"], "solvedCount": 895}, {"contestId": 1689, "index": "C", "name": "Infected Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 10316}, {"contestId": 1682, "index": "E", "name": "Unordered Swaps", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 551}, {"contestId": 1682, "index": "D", "name": "Circular Spanning Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 3144}, {"contestId": 1681, "index": "F", "name": "Unique Occurrences", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "solvedCount": 1510}, {"contestId": 1680, "index": "F", "name": "Lenient Vertex Cover", "type": "PROGRAMMING", "rating": 2600, "tags": ["dfs and similar", "divide and conquer", "dsu", "graphs", "trees"], "solvedCount": 611}, {"contestId": 1676, "index": "G", "name": "White-Black Balanced Subtrees", "type": "PROGRAMMING", "rating": 1300, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 13715}, {"contestId": 1675, "index": "F", "name": "Vlad and Unfinished Business", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4916}, {"contestId": 1675, "index": "D", "name": "Vertical Paths", "type": "PROGRAMMING", "rating": 1300, "tags": ["graphs", "implementation", "trees"], "solvedCount": 12416}, {"contestId": 1671, "index": "E", "name": "Preorder", "type": "PROGRAMMING", "rating": 2100, "tags": ["combinatorics", "divide and conquer", "dp", "dsu", "hashing", "sortings", "trees"], "solvedCount": 2617}, {"contestId": 1670, "index": "E", "name": "Hemose on the Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "trees"], "solvedCount": 1652}, {"contestId": 1667, "index": "D", "name": "Edge Elimination", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "solvedCount": 626}, {"contestId": 1666, "index": "J", "name": "Job Lookup", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dp", "shortest paths", "trees"], "solvedCount": 1275}, {"contestId": 1665, "index": "C", "name": "Tree Infection", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["binary search", "greedy", "sortings", "trees"], "solvedCount": 7962}, {"contestId": 1663, "index": "A", "name": "Who Tested?", "type": "PROGRAMMING", "tags": ["*special", "expression parsing", "trees"], "solvedCount": 10160}, {"contestId": 1662, "index": "G", "name": "Gastronomic Event", "type": "PROGRAMMING", "tags": ["dp", "greedy", "trees"], "solvedCount": 438}, {"contestId": 1661, "index": "E", "name": "Narrow Components", "type": "PROGRAMMING", "rating": 2500, "tags": ["brute force", "data structures", "dp", "dsu", "math", "trees"], "solvedCount": 903}, {"contestId": 1659, "index": "F", "name": "Tree and Permutation Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "games", "graphs", "trees"], "solvedCount": 174}, {"contestId": 1657, "index": "F", "name": "Words on Tree", "type": "PROGRAMMING", "rating": 2600, "tags": ["2-sat", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 535}, {"contestId": 1656, "index": "E", "name": "Equal Tree Sums", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "math", "trees"], "solvedCount": 3254}, {"contestId": 1654, "index": "G", "name": "Snowy Mountain", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 349}, {"contestId": 1654, "index": "D", "name": "Potion Brewing Class", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "math", "number theory", "trees"], "solvedCount": 2758}, {"contestId": 1648, "index": "E", "name": "Air Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "graphs", "implementation", "trees"], "solvedCount": 379}, {"contestId": 1646, "index": "D", "name": "Weight the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 3488}, {"contestId": 1637, "index": "F", "name": "Towers", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1669}, {"contestId": 1633, "index": "F", "name": "Perfect Matching", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "divide and conquer", "interactive", "trees"], "solvedCount": 300}, {"contestId": 1633, "index": "E", "name": "Spanning Tree Queries", "type": "PROGRAMMING", "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 1452}, {"contestId": 1632, "index": "E2", "name": "Distance Tree (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["binary search", "dfs and similar", "shortest paths", "trees"], "solvedCount": 914}, {"contestId": 1632, "index": "E1", "name": "Distance Tree (easy version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 1097}, {"contestId": 1628, "index": "E", "name": "Groceries in Meteor Town", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["binary search", "data structures", "dsu", "trees"], "solvedCount": 813}, {"contestId": 1627, "index": "C", "name": "Not Assigning", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["constructive algorithms", "dfs and similar", "number theory", "trees"], "solvedCount": 13893}, {"contestId": 1626, "index": "E", "name": "Black and White Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "greedy", "trees"], "solvedCount": 1500}, {"contestId": 1625, "index": "E2", "name": "Cats on the Upgrade (hard version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2800, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 569}, {"contestId": 1625, "index": "E1", "name": "Cats on the Upgrade (easy version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["brute force", "data structures", "dfs and similar", "divide and conquer", "dp", "graphs", "trees"], "solvedCount": 969}, {"contestId": 1625, "index": "D", "name": "Binary Spiders", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["bitmasks", "data structures", "implementation", "math", "sortings", "trees"], "solvedCount": 1946}, {"contestId": 1623, "index": "E", "name": "Middle Duplication", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "greedy", "strings", "trees"], "solvedCount": 1069}, {"contestId": 1621, "index": "H", "name": "Trains and Airplanes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 147}, {"contestId": 1617, "index": "E", "name": "Christmas Chocolates", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "dp", "games", "graphs", "implementation", "math", "number theory", "shortest paths", "trees"], "solvedCount": 819}, {"contestId": 1615, "index": "E", "name": "Purple Crayon", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "games", "graphs", "greedy", "math", "sortings", "trees"], "solvedCount": 1375}, {"contestId": 1615, "index": "D", "name": "X(or)-mas Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["bitmasks", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 1799}, {"contestId": 1611, "index": "E2", "name": "Escape The Maze (hard version)", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "greedy", "shortest paths", "trees"], "solvedCount": 3590}, {"contestId": 1611, "index": "E1", "name": "Escape The Maze (easy version)", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "greedy", "shortest paths", "trees", "two pointers"], "solvedCount": 6802}, {"contestId": 1611, "index": "D", "name": "Weights Assignment For Tree Edges", "type": "PROGRAMMING", "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 9405}, {"contestId": 1610, "index": "I", "name": "Mashtali vs AtCoder", "type": "PROGRAMMING", "points": 4000.0, "rating": 3100, "tags": ["games", "trees"], "solvedCount": 252}, {"contestId": 1610, "index": "H", "name": "Squid Game", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 390}, {"contestId": 1609, "index": "D", "name": "Social Network", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["dsu", "graphs", "greedy", "implementation", "trees"], "solvedCount": 6843}, {"contestId": 1608, "index": "G", "name": "Alphabetic Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 3500, "tags": ["binary search", "data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "solvedCount": 144}, {"contestId": 1606, "index": "F", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 2800, "tags": ["brute force", "dp", "trees"], "solvedCount": 504}, {"contestId": 1605, "index": "D", "name": "Treelabeling", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "games", "greedy", "implementation", "trees"], "solvedCount": 2819}, {"contestId": 1594, "index": "E2", "name": "Rubik's Cube Coloring (hard version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["brute force", "dp", "implementation", "math", "trees"], "solvedCount": 1441}, {"contestId": 1593, "index": "E", "name": "Gardener and Tree", "type": "PROGRAMMING", "rating": 1600, "tags": ["brute force", "data structures", "dfs and similar", "greedy", "implementation", "trees"], "solvedCount": 11474}, {"contestId": 1592, "index": "D", "name": "Hemose in ICPC ?", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["binary search", "dfs and similar", "implementation", "interactive", "math", "number theory", "trees"], "solvedCount": 2137}, {"contestId": 1592, "index": "C", "name": "Bakry and Partitioning", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 7475}, {"contestId": 1585, "index": "G", "name": "Poachers", "type": "PROGRAMMING", "points": 3500.0, "rating": 2500, "tags": ["dp", "games", "graphs", "trees"], "solvedCount": 165}, {"contestId": 1585, "index": "E", "name": "Frequency Queries", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 989}, {"contestId": 1583, "index": "H", "name": "Omkar and Tours", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["data structures", "divide and conquer", "sortings", "trees"], "solvedCount": 306}, {"contestId": 1583, "index": "E", "name": "Moment of Bloom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "graph matchings", "graphs", "greedy", "trees"], "solvedCount": 2149}, {"contestId": 1583, "index": "B", "name": "Omkar and Heavenly Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1200, "tags": ["constructive algorithms", "trees"], "solvedCount": 11870}, {"contestId": 1580, "index": "D", "name": "Subsequence", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["brute force", "divide and conquer", "dp", "greedy", "trees"], "solvedCount": 745}, {"contestId": 1580, "index": "B", "name": "Mathematics Curriculum", "type": "PROGRAMMING", "points": 1000.0, "rating": 2600, "tags": ["brute force", "combinatorics", "dp", "trees"], "solvedCount": 957}, {"contestId": 1575, "index": "I", "name": "Illusions of the Desert", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "trees"], "solvedCount": 827}, {"contestId": 1575, "index": "E", "name": "Eye-Pleasing City Park Tour", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 300}, {"contestId": 1566, "index": "E", "name": "Buds Re-hanging", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 3984}, {"contestId": 1559, "index": "D2", "name": "Mocha and Diana (Hard Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees", "two pointers"], "solvedCount": 2505}, {"contestId": 1559, "index": "D1", "name": "Mocha and Diana (Easy Version)", "type": "PROGRAMMING", "points": 1500.0, "rating": 1400, "tags": ["brute force", "constructive algorithms", "dsu", "graphs", "greedy", "trees"], "solvedCount": 13091}, {"contestId": 1555, "index": "F", "name": "Good Graph", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 817}, {"contestId": 1555, "index": "E", "name": "Boring Segments", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "sortings", "trees", "two pointers"], "solvedCount": 3833}, {"contestId": 1553, "index": "H", "name": "XOR and Distance", "type": "PROGRAMMING", "points": 3750.0, "rating": 2900, "tags": ["bitmasks", "divide and conquer", "trees"], "solvedCount": 660}, {"contestId": 1551, "index": "F", "name": "Equidistant Vertices", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "combinatorics", "dfs and similar", "dp", "trees"], "solvedCount": 1719}, {"contestId": 1547, "index": "G", "name": "How Many Paths?", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 2733}, {"contestId": 1540, "index": "B", "name": "Tree Array", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["brute force", "combinatorics", "dp", "graphs", "math", "probabilities", "trees"], "solvedCount": 2469}, {"contestId": 1535, "index": "E", "name": "Gold Transfer", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "data structures", "dp", "greedy", "interactive", "trees"], "solvedCount": 2614}, {"contestId": 1535, "index": "D", "name": "Playoff Tournament", "type": "PROGRAMMING", "rating": 1800, "tags": ["data structures", "dfs and similar", "dp", "implementation", "trees"], "solvedCount": 7430}, {"contestId": 1534, "index": "H", "name": "Lost Nodes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["constructive algorithms", "dp", "graphs", "interactive", "sortings", "trees"], "solvedCount": 141}, {"contestId": 1534, "index": "D", "name": "Lost Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "interactive", "trees"], "solvedCount": 5710}, {"contestId": 1528, "index": "E", "name": "Mashtali and Hagh Trees", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 493}, {"contestId": 1528, "index": "C", "name": "Trees of Tranquillity", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 2489}, {"contestId": 1528, "index": "A", "name": "Parsa's Humongous Tree", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["dfs and similar", "divide and conquer", "dp", "greedy", "trees"], "solvedCount": 13640}, {"contestId": 1527, "index": "D", "name": "MEX Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "implementation", "math", "trees"], "solvedCount": 1807}, {"contestId": 1523, "index": "C", "name": "Compression and Expansion", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["brute force", "data structures", "greedy", "implementation", "trees"], "solvedCount": 8549}, {"contestId": 1521, "index": "D", "name": "Nastia Plays with a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["constructive algorithms", "data structures", "dfs and similar", "dp", "dsu", "greedy", "implementation", "trees"], "solvedCount": 1782}, {"contestId": 1519, "index": "E", "name": "Off by One", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "geometry", "graphs", "sortings", "trees"], "solvedCount": 786}, {"contestId": 1517, "index": "F", "name": "Reunion", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 418}, {"contestId": 1515, "index": "F", "name": "Phoenix and Earthquake", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1648}, {"contestId": 1511, "index": "C", "name": "Yet Another Card Deck", "type": "PROGRAMMING", "rating": 1100, "tags": ["brute force", "data structures", "implementation", "trees"], "solvedCount": 21771}, {"contestId": 1508, "index": "E", "name": "Tree Calendar", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["brute force", "constructive algorithms", "data structures", "dfs and similar", "sortings", "trees"], "solvedCount": 321}, {"contestId": 1508, "index": "C", "name": "Complete the MST", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["bitmasks", "brute force", "data structures", "dfs and similar", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1403}, {"contestId": 1499, "index": "F", "name": "Diameter Cuts", "type": "PROGRAMMING", "rating": 2400, "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "solvedCount": 1224}, {"contestId": 1498, "index": "F", "name": "Christmas Game", "type": "PROGRAMMING", "points": 3000.0, "rating": 2500, "tags": ["bitmasks", "data structures", "dfs and similar", "dp", "games", "math", "trees"], "solvedCount": 783}, {"contestId": 1495, "index": "F", "name": "Squares", "type": "PROGRAMMING", "points": 3250.0, "rating": 3300, "tags": ["constructive algorithms", "data structures", "dp", "graphs", "trees"], "solvedCount": 273}, {"contestId": 1495, "index": "D", "name": "BFS Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["combinatorics", "dfs and similar", "graphs", "math", "shortest paths", "trees"], "solvedCount": 1177}, {"contestId": 1494, "index": "D", "name": "Dogeforces", "type": "PROGRAMMING", "rating": 2300, "tags": ["constructive algorithms", "data structures", "dfs and similar", "divide and conquer", "dsu", "greedy", "sortings", "trees"], "solvedCount": 2473}, {"contestId": 1491, "index": "H", "name": "Yuezheng Ling and Dynamic Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["data structures", "trees"], "solvedCount": 744}, {"contestId": 1491, "index": "E", "name": "Fib-tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "dfs and similar", "divide and conquer", "number theory", "trees"], "solvedCount": 2007}, {"contestId": 1486, "index": "F", "name": "Pairs of Paths", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "trees"], "solvedCount": 616}, {"contestId": 1485, "index": "E", "name": "Move and Swap", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1206}, {"contestId": 1482, "index": "H", "name": "Exam", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "trees"], "solvedCount": 413}, {"contestId": 1481, "index": "F", "name": "AB Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3100, "tags": ["dp", "greedy", "trees"], "solvedCount": 443}, {"contestId": 1479, "index": "D", "name": "Odd Mineral Resource", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["binary search", "bitmasks", "brute force", "data structures", "probabilities", "trees"], "solvedCount": 933}, {"contestId": 1467, "index": "E", "name": "Distinctive Roots in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 1320}, {"contestId": 1466, "index": "D", "name": "13th Labour of Heracles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1500, "tags": ["data structures", "greedy", "sortings", "trees"], "solvedCount": 10676}, {"contestId": 1464, "index": "F", "name": "My Beautiful Madness", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 267}, {"contestId": 1463, "index": "E", "name": "Plan of Lectures", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "implementation", "sortings", "trees"], "solvedCount": 1424}, {"contestId": 1458, "index": "F", "name": "Range Diameter Sum", "type": "PROGRAMMING", "points": 3500.0, "rating": 3500, "tags": ["data structures", "trees"], "solvedCount": 257}, {"contestId": 1454, "index": "E", "name": "Number of Simple Paths", "type": "PROGRAMMING", "rating": 2000, "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "solvedCount": 5444}, {"contestId": 1453, "index": "E", "name": "Dog Snacks", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1946}, {"contestId": 1452, "index": "G", "name": "Game On Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 447}, {"contestId": 1450, "index": "G", "name": "Communism", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["bitmasks", "dp", "trees"], "solvedCount": 219}, {"contestId": 1446, "index": "C", "name": "Xor Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["binary search", "bitmasks", "data structures", "divide and conquer", "dp", "trees"], "solvedCount": 3362}, {"contestId": 1444, "index": "E", "name": "Finding the Vertex", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["brute force", "dfs and similar", "dp", "interactive", "trees"], "solvedCount": 129}, {"contestId": 1442, "index": "E", "name": "Black, White and Grey Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["binary search", "constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 545}, {"contestId": 1439, "index": "E", "name": "Cheat and Win", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["bitmasks", "data structures", "games", "trees"], "solvedCount": 213}, {"contestId": 1438, "index": "F", "name": "Olha and Igor", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["interactive", "probabilities", "trees"], "solvedCount": 602}, {"contestId": 1437, "index": "G", "name": "Death DBMS", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 926}, {"contestId": 1437, "index": "D", "name": "Minimal Height Tree", "type": "PROGRAMMING", "rating": 1600, "tags": ["graphs", "greedy", "shortest paths", "trees"], "solvedCount": 12222}, {"contestId": 1436, "index": "D", "name": "Bandit in a City", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["binary search", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 5800}, {"contestId": 1427, "index": "F", "name": "Boring Card Game", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "greedy", "trees"], "solvedCount": 297}, {"contestId": 1423, "index": "C", "name": "Du\u0161an's Railway", "type": "PROGRAMMING", "rating": 3500, "tags": ["divide and conquer", "graphs", "trees"], "solvedCount": 121}, {"contestId": 1416, "index": "D", "name": "Graph and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "dsu", "graphs", "implementation", "trees"], "solvedCount": 1802}, {"contestId": 1416, "index": "C", "name": "XOR Inverse", "type": "PROGRAMMING", "points": 1250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "divide and conquer", "dp", "greedy", "math", "sortings", "strings", "trees"], "solvedCount": 4131}, {"contestId": 1413, "index": "F", "name": "Roads and Ramen", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "trees"], "solvedCount": 687}, {"contestId": 1408, "index": "G", "name": "Clusterization Counting", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["combinatorics", "dp", "dsu", "fft", "graphs", "trees"], "solvedCount": 908}, {"contestId": 1408, "index": "E", "name": "Avoid Rainbow Cycles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1856}, {"contestId": 1406, "index": "C", "name": "Link Cut Centroids", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 9736}, {"contestId": 1404, "index": "B", "name": "Tree Tag", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "trees"], "solvedCount": 7027}, {"contestId": 1403, "index": "B", "name": "Spring cleaning", "type": "PROGRAMMING", "rating": 2300, "tags": ["*special", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 356}, {"contestId": 1402, "index": "C", "name": "Star Trek", "type": "PROGRAMMING", "rating": 2600, "tags": ["*special", "combinatorics", "dfs and similar", "dp", "games", "graphs", "matrices", "trees"], "solvedCount": 195}, {"contestId": 1401, "index": "D", "name": "Maximum Distributed Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "implementation", "math", "number theory", "sortings", "trees"], "solvedCount": 8791}, {"contestId": 1399, "index": "E2", "name": "Weights Division (hard version)", "type": "PROGRAMMING", "rating": 2200, "tags": ["binary search", "dfs and similar", "greedy", "sortings", "trees", "two pointers"], "solvedCount": 2186}, {"contestId": 1399, "index": "E1", "name": "Weights Division (easy version)", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 5622}, {"contestId": 1396, "index": "E", "name": "Distance Matching", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 316}, {"contestId": 1394, "index": "D", "name": "Boboniu and Jianghu", "type": "PROGRAMMING", "points": 1750.0, "rating": 2800, "tags": ["dp", "greedy", "sortings", "trees"], "solvedCount": 792}, {"contestId": 1391, "index": "E", "name": "Pairs of Pairs", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1416}, {"contestId": 1389, "index": "G", "name": "Directing Edges", "type": "PROGRAMMING", "rating": 2800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 372}, {"contestId": 1388, "index": "D", "name": "Captain Flint and Treasure", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "solvedCount": 6082}, {"contestId": 1388, "index": "C", "name": "Uncle Bogdan and Country Happiness", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dfs and similar", "greedy", "math", "trees"], "solvedCount": 9292}, {"contestId": 1387, "index": "B2", "name": "Village (Maximum)", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "dfs and similar", "trees"], "solvedCount": 781}, {"contestId": 1387, "index": "B1", "name": "Village (Minimum)", "type": "PROGRAMMING", "rating": 2100, "tags": ["*special", "dp", "greedy", "trees"], "solvedCount": 1284}, {"contestId": 1385, "index": "F", "name": "Removing Leaves", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "greedy", "implementation", "trees"], "solvedCount": 2219}, {"contestId": 1383, "index": "C", "name": "String Transformation 2", "type": "PROGRAMMING", "points": 1750.0, "rating": 3100, "tags": ["bitmasks", "dp", "graphs", "trees"], "solvedCount": 549}, {"contestId": 1383, "index": "A", "name": "String Transformation 1", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dsu", "graphs", "greedy", "sortings", "strings", "trees", "two pointers"], "solvedCount": 10184}, {"contestId": 1381, "index": "D", "name": "The Majestic Brown Tree Snake", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "dp", "greedy", "trees", "two pointers"], "solvedCount": 441}, {"contestId": 1380, "index": "E", "name": "Merging Towers", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dsu", "implementation", "trees"], "solvedCount": 1889}, {"contestId": 1379, "index": "E", "name": "Inverse Genealogy", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["constructive algorithms", "divide and conquer", "dp", "math", "trees"], "solvedCount": 383}, {"contestId": 1375, "index": "G", "name": "Tree Modification", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["brute force", "constructive algorithms", "dfs and similar", "graph matchings", "graphs", "trees"], "solvedCount": 1621}, {"contestId": 1370, "index": "F2", "name": "The Hidden Pair (Hard Version)", "type": "PROGRAMMING", "points": 1250.0, "rating": 2700, "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"], "solvedCount": 1196}, {"contestId": 1370, "index": "F1", "name": "The Hidden Pair (Easy Version)", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["binary search", "dfs and similar", "graphs", "interactive", "shortest paths", "trees"], "solvedCount": 1327}, {"contestId": 1369, "index": "D", "name": "TediousLee", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dp", "graphs", "greedy", "math", "trees"], "solvedCount": 8216}, {"contestId": 1368, "index": "G", "name": "Shifting Dominoes", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["data structures", "geometry", "graphs", "trees"], "solvedCount": 388}, {"contestId": 1364, "index": "D", "name": "Ehab's Last Corollary", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "implementation", "trees"], "solvedCount": 3992}, {"contestId": 1363, "index": "E", "name": "Tree Shuffling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 6441}, {"contestId": 1363, "index": "C", "name": "Game On Leaves", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["games", "trees"], "solvedCount": 17672}, {"contestId": 1361, "index": "E", "name": "James and the Chase", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "graphs", "probabilities", "trees"], "solvedCount": 611}, {"contestId": 1361, "index": "D", "name": "Johnny and James", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["greedy", "implementation", "math", "trees"], "solvedCount": 303}, {"contestId": 1344, "index": "E", "name": "Train Tracks", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 256}, {"contestId": 1340, "index": "D", "name": "Nastya and Time Machine", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 790}, {"contestId": 1338, "index": "D", "name": "Nested Rubber Bands", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "dfs and similar", "dp", "math", "trees"], "solvedCount": 790}, {"contestId": 1338, "index": "B", "name": "Edge Weight Assignment", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["bitmasks", "constructive algorithms", "dfs and similar", "greedy", "math", "trees"], "solvedCount": 7987}, {"contestId": 1336, "index": "F", "name": "Journey", "type": "PROGRAMMING", "points": 3250.0, "rating": 3500, "tags": ["data structures", "divide and conquer", "graphs", "trees"], "solvedCount": 187}, {"contestId": 1336, "index": "A", "name": "Linova and Kingdom", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "greedy", "sortings", "trees"], "solvedCount": 19036}, {"contestId": 1332, "index": "F", "name": "Independent Set", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 971}, {"contestId": 1328, "index": "E", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 8669}, {"contestId": 1326, "index": "G", "name": "Spiderweb Trees", "type": "PROGRAMMING", "points": 4000.0, "rating": 3500, "tags": ["dp", "geometry", "trees"], "solvedCount": 69}, {"contestId": 1325, "index": "C", "name": "Ehab and Path-etic MEXs", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 12760}, {"contestId": 1324, "index": "F", "name": "Maximum White Subtree", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 8859}, {"contestId": 1322, "index": "F", "name": "Assigning Fares", "type": "PROGRAMMING", "points": 3000.0, "rating": 3500, "tags": ["dp", "trees"], "solvedCount": 87}, {"contestId": 1320, "index": "E", "name": "Treeland and Viruses", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dfs and similar", "dp", "shortest paths", "trees"], "solvedCount": 611}, {"contestId": 1311, "index": "E", "name": "Construct the Binary Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["brute force", "constructive algorithms", "trees"], "solvedCount": 2088}, {"contestId": 1307, "index": "F", "name": "Cow and Vacation", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["dfs and similar", "dsu", "trees"], "solvedCount": 560}, {"contestId": 1305, "index": "D", "name": "Kuroni and the Celebration", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["constructive algorithms", "dfs and similar", "interactive", "trees"], "solvedCount": 4686}, {"contestId": 1304, "index": "E", "name": "1-Trees and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "shortest paths", "trees"], "solvedCount": 4811}, {"contestId": 1303, "index": "G", "name": "Sum of Prefix Sums", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "geometry", "trees"], "solvedCount": 699}, {"contestId": 1299, "index": "D", "name": "Around the World", "type": "PROGRAMMING", "points": 1750.0, "rating": 3000, "tags": ["bitmasks", "combinatorics", "dfs and similar", "dp", "graphs", "graphs", "math", "trees"], "solvedCount": 407}, {"contestId": 1297, "index": "E", "name": "Modernization of Treeland", "type": "PROGRAMMING", "tags": ["*special", "dfs and similar", "trees"], "solvedCount": 192}, {"contestId": 1296, "index": "F", "name": "Berland Beauty", "type": "PROGRAMMING", "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "greedy", "sortings", "trees"], "solvedCount": 2606}, {"contestId": 1294, "index": "F", "name": "Three Paths on a Tree", "type": "PROGRAMMING", "rating": 2000, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 5239}, {"contestId": 1292, "index": "D", "name": "Chaotic V.", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["dp", "graphs", "greedy", "math", "number theory", "trees"], "solvedCount": 768}, {"contestId": 1292, "index": "C", "name": "Xenon's Attack on the Gangs", "type": "PROGRAMMING", "points": 1250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1821}, {"contestId": 1286, "index": "B", "name": "Numbers on Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 4315}, {"contestId": 1285, "index": "E", "name": "Delete a Segment", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["brute force", "constructive algorithms", "data structures", "dp", "graphs", "sortings", "trees", "two pointers"], "solvedCount": 1603}, {"contestId": 1285, "index": "D", "name": "Dr. Evil Underscores", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["bitmasks", "brute force", "dfs and similar", "divide and conquer", "dp", "greedy", "strings", "trees"], "solvedCount": 7225}, {"contestId": 1284, "index": "F", "name": "New Year and Social Network", "type": "PROGRAMMING", "points": 4000.0, "rating": 3200, "tags": ["data structures", "graph matchings", "graphs", "math", "trees"], "solvedCount": 305}, {"contestId": 1283, "index": "F", "name": "DIY Garland", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "greedy", "trees"], "solvedCount": 1562}, {"contestId": 1280, "index": "D", "name": "Miss Punyverse", "type": "PROGRAMMING", "points": 1750.0, "rating": 2500, "tags": ["dp", "greedy", "trees"], "solvedCount": 911}, {"contestId": 1280, "index": "C", "name": "Jeremy Bearimy", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 2422}, {"contestId": 1278, "index": "E", "name": "Tests for problem D", "type": "PROGRAMMING", "rating": 2200, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "trees"], "solvedCount": 1685}, {"contestId": 1278, "index": "D", "name": "Segment Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 3653}, {"contestId": 1276, "index": "D", "name": "Tree Elimination", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "trees"], "solvedCount": 475}, {"contestId": 1263, "index": "F", "name": "Economic Difficulties", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dp", "flows", "graphs", "trees"], "solvedCount": 830}, {"contestId": 1260, "index": "F", "name": "Colored Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "trees"], "solvedCount": 473}, {"contestId": 1254, "index": "E", "name": "Send Tree to Charlie", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["combinatorics", "dfs and similar", "dsu", "trees"], "solvedCount": 258}, {"contestId": 1254, "index": "D", "name": "Tree Queries", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "probabilities", "trees"], "solvedCount": 1107}, {"contestId": 1253, "index": "F", "name": "Cheap Robot", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["binary search", "dsu", "graphs", "shortest paths", "trees"], "solvedCount": 1566}, {"contestId": 1252, "index": "F", "name": "Regular Forestation", "type": "PROGRAMMING", "rating": 2400, "tags": ["hashing", "trees"], "solvedCount": 861}, {"contestId": 1252, "index": "D", "name": "Find String in a Grid", "type": "PROGRAMMING", "rating": 3000, "tags": ["data structures", "dp", "strings", "trees"], "solvedCount": 259}, {"contestId": 1252, "index": "B", "name": "Cleaning Robots", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "trees"], "solvedCount": 500}, {"contestId": 1249, "index": "F", "name": "Maximum Weight Subset", "type": "PROGRAMMING", "rating": 2200, "tags": ["dp", "trees"], "solvedCount": 2057}, {"contestId": 1245, "index": "D", "name": "Shichikuji and Power Grid", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["dsu", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 6777}, {"contestId": 1244, "index": "D", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "dp", "graphs", "implementation", "trees"], "solvedCount": 7168}, {"contestId": 1238, "index": "F", "name": "The Maximum Subtree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 1675}, {"contestId": 1228, "index": "F", "name": "One Node is Gone", "type": "PROGRAMMING", "points": 2750.0, "rating": 2500, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 414}, {"contestId": 1225, "index": "F", "name": "Tree Factory", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["constructive algorithms", "greedy", "trees"], "solvedCount": 861}, {"contestId": 1223, "index": "E", "name": "Paint the Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2100, "tags": ["dp", "sortings", "trees"], "solvedCount": 2505}, {"contestId": 1220, "index": "E", "name": "Tourism", "type": "PROGRAMMING", "points": 2750.0, "rating": 2200, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "solvedCount": 2526}, {"contestId": 1217, "index": "F", "name": "Forced Online Queries Problem", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "divide and conquer", "dsu", "graphs", "trees"], "solvedCount": 534}, {"contestId": 1214, "index": "H", "name": "Tiles Placement", "type": "PROGRAMMING", "points": 3500.0, "rating": 2800, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 367}, {"contestId": 1214, "index": "E", "name": "Petya and Construction Set", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "graphs", "math", "sortings", "trees"], "solvedCount": 2489}, {"contestId": 1213, "index": "G", "name": "Path Queries", "type": "PROGRAMMING", "rating": 1800, "tags": ["divide and conquer", "dsu", "graphs", "sortings", "trees"], "solvedCount": 6526}, {"contestId": 1211, "index": "H", "name": "Road Repair in Treeland", "type": "PROGRAMMING", "rating": 3100, "tags": ["*special", "binary search", "dp", "trees"], "solvedCount": 40}, {"contestId": 1211, "index": "G", "name": "King's Path", "type": "PROGRAMMING", "rating": 2500, "tags": ["*special", "math", "trees"], "solvedCount": 65}, {"contestId": 1210, "index": "C", "name": "Kamil and Making a Stream", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["math", "number theory", "trees"], "solvedCount": 3189}, {"contestId": 1209, "index": "F", "name": "Koala and Notebook", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["data structures", "dfs and similar", "graphs", "shortest paths", "strings", "trees"], "solvedCount": 1058}, {"contestId": 1208, "index": "H", "name": "Red Blue Tree", "type": "PROGRAMMING", "points": 3750.0, "rating": 3500, "tags": ["data structures", "implementation", "trees"], "solvedCount": 138}, {"contestId": 1207, "index": "G", "name": "Indie Album", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dfs and similar", "hashing", "string suffix structures", "strings", "trees"], "solvedCount": 925}, {"contestId": 1205, "index": "D", "name": "Almost All", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["constructive algorithms", "trees"], "solvedCount": 608}, {"contestId": 1193, "index": "B", "name": "Magic Tree", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dp", "trees"], "solvedCount": 411}, {"contestId": 1192, "index": "B", "name": "Dynamic Diameter", "type": "PROGRAMMING", "tags": ["*special", "data structures", "dfs and similar", "divide and conquer", "trees"], "solvedCount": 980}, {"contestId": 1188, "index": "A2", "name": "Add on a Tree: Revolution", "type": "PROGRAMMING", "points": 750.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "implementation", "trees"], "solvedCount": 1064}, {"contestId": 1188, "index": "A1", "name": "Add on a Tree", "type": "PROGRAMMING", "points": 250.0, "rating": 1600, "tags": ["trees"], "solvedCount": 8115}, {"contestId": 1187, "index": "E", "name": "Tree Painting", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 7259}, {"contestId": 1184, "index": "E3", "name": "Daleks' Invasion (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 483}, {"contestId": 1184, "index": "E2", "name": "Daleks' Invasion (medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 887}, {"contestId": 1184, "index": "E1", "name": "Daleks' Invasion (easy)", "type": "PROGRAMMING", "rating": 1900, "tags": ["graphs", "trees"], "solvedCount": 1537}, {"contestId": 1182, "index": "D", "name": "Complete Mirror", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "dp", "hashing", "implementation", "trees"], "solvedCount": 776}, {"contestId": 1181, "index": "D", "name": "Irrigation", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "data structures", "implementation", "sortings", "trees", "two pointers"], "solvedCount": 1993}, {"contestId": 1179, "index": "D", "name": "Fedor Runs for President", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dp", "trees"], "solvedCount": 741}, {"contestId": 1179, "index": "C", "name": "Serge and Dining Room", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "data structures", "graph matchings", "greedy", "implementation", "math", "trees"], "solvedCount": 1932}, {"contestId": 1176, "index": "E", "name": "Cover it!", "type": "PROGRAMMING", "rating": 1700, "tags": ["dfs and similar", "dsu", "graphs", "shortest paths", "trees"], "solvedCount": 10262}, {"contestId": 1175, "index": "E", "name": "Minimal Segment Cover", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "divide and conquer", "dp", "greedy", "implementation", "trees"], "solvedCount": 3130}, {"contestId": 1174, "index": "F", "name": "Ehab and the Big Finale", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["constructive algorithms", "divide and conquer", "graphs", "implementation", "interactive", "trees"], "solvedCount": 1426}, {"contestId": 1172, "index": "B", "name": "Nauuo and Circle", "type": "PROGRAMMING", "points": 750.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "solvedCount": 3703}, {"contestId": 1168, "index": "D", "name": "Anagram Paths", "type": "PROGRAMMING", "points": 2000.0, "rating": 3000, "tags": ["dp", "implementation", "trees"], "solvedCount": 331}, {"contestId": 1158, "index": "E", "name": "Strange device", "type": "PROGRAMMING", "points": 2250.0, "rating": 3400, "tags": ["binary search", "interactive", "math", "trees"], "solvedCount": 146}, {"contestId": 1156, "index": "D", "name": "0-1-Tree", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "divide and conquer", "dp", "dsu", "trees"], "solvedCount": 3492}, {"contestId": 1153, "index": "D", "name": "Serval and Rooted Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1900, "tags": ["binary search", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4668}, {"contestId": 1152, "index": "D", "name": "Neko and Aki's Prank", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dp", "greedy", "trees"], "solvedCount": 2232}, {"contestId": 1149, "index": "C", "name": "Tree Generator\u2122", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "implementation", "trees"], "solvedCount": 1157}, {"contestId": 1146, "index": "F", "name": "Leaf Partition", "type": "PROGRAMMING", "points": 3250.0, "rating": 2500, "tags": ["dp", "trees"], "solvedCount": 1082}, {"contestId": 1143, "index": "C", "name": "Queen", "type": "PROGRAMMING", "points": 1000.0, "rating": 1400, "tags": ["dfs and similar", "trees"], "solvedCount": 10988}, {"contestId": 1142, "index": "B", "name": "Lynyrd Skynyrd", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "math", "trees"], "solvedCount": 2601}, {"contestId": 1141, "index": "G", "name": "Privatization of Roads in Treeland", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 2170}, {"contestId": 1140, "index": "G", "name": "Double Tree", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "divide and conquer", "shortest paths", "trees"], "solvedCount": 434}, {"contestId": 1139, "index": "C", "name": "Edgy Trees", "type": "PROGRAMMING", "points": 1750.0, "rating": 1500, "tags": ["dfs and similar", "dsu", "graphs", "math", "trees"], "solvedCount": 11722}, {"contestId": 1137, "index": "F", "name": "Matches Are Not a Child's Play ", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["data structures", "trees"], "solvedCount": 426}, {"contestId": 1132, "index": "G", "name": "Greedy Subsequences", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dp", "trees"], "solvedCount": 941}, {"contestId": 1129, "index": "E", "name": "Legendary Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["binary search", "interactive", "trees"], "solvedCount": 365}, {"contestId": 1120, "index": "D", "name": "Power Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dfs and similar", "dp", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1238}, {"contestId": 1119, "index": "F", "name": "Niyaz and Small Degrees", "type": "PROGRAMMING", "points": 3250.0, "rating": 3400, "tags": ["data structures", "dp", "trees"], "solvedCount": 639}, {"contestId": 1118, "index": "F2", "name": "Tree Cutting (Hard Version)", "type": "PROGRAMMING", "rating": 2700, "tags": ["combinatorics", "dfs and similar", "dp", "trees"], "solvedCount": 492}, {"contestId": 1118, "index": "F1", "name": "Tree Cutting (Easy Version)", "type": "PROGRAMMING", "rating": 1800, "tags": ["dfs and similar", "trees"], "solvedCount": 5506}, {"contestId": 1111, "index": "E", "name": "Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 823}, {"contestId": 1110, "index": "G", "name": "Tree-Tac-Toe ", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["constructive algorithms", "games", "trees"], "solvedCount": 571}, {"contestId": 1110, "index": "F", "name": "Nearest Leaf", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 1663}, {"contestId": 1109, "index": "F", "name": "Sasha and Algorithm of Silence's Sounds", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["data structures", "trees"], "solvedCount": 274}, {"contestId": 1109, "index": "D", "name": "Sasha and Interesting Fact from Graph Theory", "type": "PROGRAMMING", "points": 1750.0, "rating": 2400, "tags": ["brute force", "combinatorics", "dp", "math", "trees"], "solvedCount": 1250}, {"contestId": 1101, "index": "D", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2000, "tags": ["data structures", "dfs and similar", "dp", "number theory", "trees"], "solvedCount": 4350}, {"contestId": 1099, "index": "F", "name": "Cookies", "type": "PROGRAMMING", "points": 2250.0, "rating": 2400, "tags": ["binary search", "data structures", "dfs and similar", "dp", "games", "trees"], "solvedCount": 896}, {"contestId": 1098, "index": "C", "name": "Construct a tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["binary search", "constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 860}, {"contestId": 1098, "index": "A", "name": "Sum in the tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 8318}, {"contestId": 1097, "index": "G", "name": "Vladislav and a Great Legend", "type": "PROGRAMMING", "points": 3500.0, "rating": 3000, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 645}, {"contestId": 1092, "index": "F", "name": "Tree with Maximum Cost", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 6905}, {"contestId": 1092, "index": "E", "name": "Minimal Diameter Forest", "type": "PROGRAMMING", "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1603}, {"contestId": 1088, "index": "F", "name": "Ehab and a weird weight formula", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "trees"], "solvedCount": 479}, {"contestId": 1088, "index": "E", "name": "Ehab and a component choosing problem", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dp", "greedy", "math", "trees"], "solvedCount": 1379}, {"contestId": 1085, "index": "D", "name": "Minimum Diameter Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 1700, "tags": ["constructive algorithms", "implementation", "trees"], "solvedCount": 5273}, {"contestId": 1083, "index": "C", "name": "Max Mex", "type": "PROGRAMMING", "points": 1500.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 834}, {"contestId": 1083, "index": "A", "name": "The Fair Nut and the Best Path", "type": "PROGRAMMING", "points": 500.0, "rating": 1800, "tags": ["data structures", "dp", "trees"], "solvedCount": 5112}, {"contestId": 1082, "index": "F", "name": "Speed Dial", "type": "PROGRAMMING", "rating": 2800, "tags": ["dp", "strings", "trees"], "solvedCount": 397}, {"contestId": 1076, "index": "E", "name": "Vasya and a Tree", "type": "PROGRAMMING", "rating": 1900, "tags": ["data structures", "trees"], "solvedCount": 3589}, {"contestId": 1073, "index": "F", "name": "Choosing Two Paths", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 516}, {"contestId": 1067, "index": "E", "name": "Random Forest Rank", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dp", "graph matchings", "math", "trees"], "solvedCount": 407}, {"contestId": 1065, "index": "F", "name": "Up and Down the Tree", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 1122}, {"contestId": 1062, "index": "E", "name": "Company", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 1692}, {"contestId": 1060, "index": "E", "name": "Sergey and Subway", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 2956}, {"contestId": 1059, "index": "E", "name": "Split the Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "trees"], "solvedCount": 1332}, {"contestId": 1057, "index": "A", "name": "Bmail Computer Network", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["*special", "dfs and similar", "trees"], "solvedCount": 5686}, {"contestId": 1056, "index": "D", "name": "Decorate Apple Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1600, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "greedy", "sortings", "trees"], "solvedCount": 5554}, {"contestId": 1055, "index": "F", "name": "Tree and XOR", "type": "PROGRAMMING", "points": 3500.0, "rating": 2900, "tags": ["strings", "trees"], "solvedCount": 439}, {"contestId": 1053, "index": "E", "name": "Euler tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 3500, "tags": ["constructive algorithms", "trees"], "solvedCount": 188}, {"contestId": 1051, "index": "F", "name": "The Shortest Statement", "type": "PROGRAMMING", "rating": 2400, "tags": ["graphs", "shortest paths", "trees"], "solvedCount": 2618}, {"contestId": 1045, "index": "J", "name": "Moonwalk challenge", "type": "PROGRAMMING", "rating": 2600, "tags": ["data structures", "strings", "trees"], "solvedCount": 157}, {"contestId": 1045, "index": "D", "name": "Interstellar battle", "type": "PROGRAMMING", "rating": 2200, "tags": ["math", "probabilities", "trees"], "solvedCount": 626}, {"contestId": 1045, "index": "C", "name": "Hyperspace Highways", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 611}, {"contestId": 1045, "index": "A", "name": "Last chance", "type": "PROGRAMMING", "rating": 2500, "tags": ["data structures", "flows", "graph matchings", "graphs", "trees"], "solvedCount": 313}, {"contestId": 1044, "index": "B", "name": "Intersecting Subtrees", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["dfs and similar", "interactive", "trees"], "solvedCount": 1539}, {"contestId": 1042, "index": "F", "name": "Leaf Sets", "type": "PROGRAMMING", "points": 2750.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "greedy", "sortings", "trees"], "solvedCount": 1199}, {"contestId": 1039, "index": "D", "name": "You Are Given a Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["data structures", "dp", "trees"], "solvedCount": 1618}, {"contestId": 1037, "index": "D", "name": "Valid BFS?", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["dfs and similar", "graphs", "shortest paths", "trees"], "solvedCount": 13587}, {"contestId": 1034, "index": "C", "name": "Region Separation", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["combinatorics", "dp", "number theory", "trees"], "solvedCount": 839}, {"contestId": 1032, "index": "F", "name": "Vasya and Maximum Matching", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "trees"], "solvedCount": 883}, {"contestId": 1025, "index": "D", "name": "Recovering BST", "type": "PROGRAMMING", "points": 1750.0, "rating": 2100, "tags": ["brute force", "dp", "math", "number theory", "trees"], "solvedCount": 3288}, {"contestId": 1023, "index": "G", "name": "Pisces", "type": "PROGRAMMING", "points": 4000.0, "rating": 3400, "tags": ["data structures", "flows", "trees"], "solvedCount": 111}, {"contestId": 1023, "index": "F", "name": "Mobile Phone Network", "type": "PROGRAMMING", "points": 3250.0, "rating": 2600, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 845}, {"contestId": 1019, "index": "E", "name": "Raining season", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 315}, {"contestId": 1016, "index": "F", "name": "Road Projects", "type": "PROGRAMMING", "rating": 2600, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 770}, {"contestId": 1010, "index": "F", "name": "Tree", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["fft", "graphs", "trees"], "solvedCount": 205}, {"contestId": 1010, "index": "D", "name": "Mars rover", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 2298}, {"contestId": 1009, "index": "F", "name": "Dominant Indices", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dsu", "trees"], "solvedCount": 4983}, {"contestId": 1007, "index": "D", "name": "Ants", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["2-sat", "data structures", "trees"], "solvedCount": 252}, {"contestId": 1006, "index": "E", "name": "Military Problem", "type": "PROGRAMMING", "rating": 1600, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 9334}, {"contestId": 1004, "index": "E", "name": "Sonya and Ice Cream", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["binary search", "data structures", "dp", "greedy", "shortest paths", "trees"], "solvedCount": 996}, {"contestId": 1000, "index": "G", "name": "Two-Paths", "type": "PROGRAMMING", "rating": 2700, "tags": ["data structures", "dp", "trees"], "solvedCount": 548}, {"contestId": 1000, "index": "E", "name": "We Need More Bosses", "type": "PROGRAMMING", "rating": 2100, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 3817}, {"contestId": 997, "index": "D", "name": "Cycles in product", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["combinatorics", "divide and conquer", "trees"], "solvedCount": 422}, {"contestId": 995, "index": "F", "name": "Cowmpany Cowmpensation", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "math", "trees"], "solvedCount": 1107}, {"contestId": 990, "index": "G", "name": "GCD Counting", "type": "PROGRAMMING", "rating": 2400, "tags": ["divide and conquer", "dp", "dsu", "number theory", "trees"], "solvedCount": 1684}, {"contestId": 990, "index": "F", "name": "Flow Control", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 866}, {"contestId": 986, "index": "E", "name": "Prince's Problem", "type": "PROGRAMMING", "points": 2750.0, "rating": 2800, "tags": ["brute force", "data structures", "math", "number theory", "trees"], "solvedCount": 694}, {"contestId": 983, "index": "E", "name": "NN country", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "data structures", "trees"], "solvedCount": 863}, {"contestId": 982, "index": "D", "name": "Shark", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["brute force", "data structures", "dsu", "trees"], "solvedCount": 2231}, {"contestId": 982, "index": "C", "name": "Cut 'em all!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 10628}, {"contestId": 981, "index": "C", "name": "Useful Decomposition", "type": "PROGRAMMING", "points": 1250.0, "rating": 1400, "tags": ["implementation", "trees"], "solvedCount": 5090}, {"contestId": 980, "index": "F", "name": "Cactus to Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2900, "tags": ["dp", "graphs", "trees"], "solvedCount": 186}, {"contestId": 980, "index": "E", "name": "The Number Games", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "greedy", "trees"], "solvedCount": 1776}, {"contestId": 979, "index": "D", "name": "Kuro and GCD and XOR and SUM", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["binary search", "bitmasks", "brute force", "data structures", "dp", "dsu", "greedy", "math", "number theory", "strings", "trees"], "solvedCount": 1671}, {"contestId": 979, "index": "C", "name": "Kuro and Walking Route", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "trees"], "solvedCount": 6028}, {"contestId": 965, "index": "E", "name": "Short Code", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dp", "greedy", "strings", "trees"], "solvedCount": 1311}, {"contestId": 963, "index": "B", "name": "Destruction of a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "dp", "greedy", "trees"], "solvedCount": 2680}, {"contestId": 962, "index": "G", "name": "Visible Black Areas", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "dsu", "geometry", "trees"], "solvedCount": 124}, {"contestId": 962, "index": "F", "name": "Simple Cycles Edges", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 1202}, {"contestId": 960, "index": "H", "name": "Santa's Gift", "type": "PROGRAMMING", "points": 3500.0, "rating": 3100, "tags": ["data structures", "trees"], "solvedCount": 246}, {"contestId": 960, "index": "E", "name": "Alternating Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["combinatorics", "dfs and similar", "divide and conquer", "dp", "probabilities", "trees"], "solvedCount": 1789}, {"contestId": 960, "index": "D", "name": "Full Binary Tree Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["brute force", "implementation", "trees"], "solvedCount": 1674}, {"contestId": 959, "index": "C", "name": "Mahmoud and Ehab and the wrong algorithm", "type": "PROGRAMMING", "points": 1250.0, "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 5659}, {"contestId": 958, "index": "B2", "name": "Maximum Control (medium)", "type": "PROGRAMMING", "rating": 2200, "tags": ["data structures", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 606}, {"contestId": 955, "index": "F", "name": "Heaps", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["dp", "trees"], "solvedCount": 335}, {"contestId": 936, "index": "E", "name": "Iqea", "type": "PROGRAMMING", "points": 2500.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "divide and conquer", "dsu", "shortest paths", "trees"], "solvedCount": 177}, {"contestId": 935, "index": "E", "name": "Fafa and Ancient Mathematics", "type": "PROGRAMMING", "points": 2250.0, "rating": 2300, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 859}, {"contestId": 932, "index": "D", "name": "Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "dp", "trees"], "solvedCount": 1635}, {"contestId": 930, "index": "A", "name": "Peculiar apple-tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 6689}, {"contestId": 928, "index": "D", "name": "Autocompletion", "type": "PROGRAMMING", "points": 2250.0, "rating": 1900, "tags": ["*special", "strings", "trees"], "solvedCount": 796}, {"contestId": 925, "index": "E", "name": "May Holidays", "type": "PROGRAMMING", "points": 2750.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 349}, {"contestId": 923, "index": "F", "name": "Public Service", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 69}, {"contestId": 923, "index": "C", "name": "Perfect Security", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["data structures", "greedy", "strings", "trees"], "solvedCount": 4104}, {"contestId": 917, "index": "E", "name": "Upside Down", "type": "PROGRAMMING", "points": 2750.0, "rating": 3400, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 119}, {"contestId": 917, "index": "D", "name": "Stranger Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["dp", "math", "matrices", "trees"], "solvedCount": 984}, {"contestId": 916, "index": "E", "name": "Jamie and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "trees"], "solvedCount": 1496}, {"contestId": 916, "index": "D", "name": "Jamie and To-do List", "type": "PROGRAMMING", "points": 2250.0, "rating": 2200, "tags": ["data structures", "interactive", "trees"], "solvedCount": 481}, {"contestId": 915, "index": "F", "name": "Imbalance Value of a Tree", "type": "PROGRAMMING", "rating": 2400, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 2279}, {"contestId": 914, "index": "H", "name": "Ember and Storm's Tree Game", "type": "PROGRAMMING", "points": 3750.0, "rating": 3400, "tags": ["combinatorics", "dp", "games", "trees"], "solvedCount": 225}, {"contestId": 914, "index": "E", "name": "Palindromes in a Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["bitmasks", "data structures", "divide and conquer", "trees"], "solvedCount": 1352}, {"contestId": 913, "index": "B", "name": "Christmas Spruce", "type": "PROGRAMMING", "points": 750.0, "rating": 1200, "tags": ["implementation", "trees"], "solvedCount": 15271}, {"contestId": 911, "index": "F", "name": "Tree Destruction", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1490}, {"contestId": 901, "index": "A", "name": "Hashing Trees", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["constructive algorithms", "trees"], "solvedCount": 4992}, {"contestId": 894, "index": "D", "name": "Ralph And His Tour in Binary Country", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["brute force", "data structures", "trees"], "solvedCount": 1095}, {"contestId": 893, "index": "F", "name": "Subtree Minimum Query", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "trees"], "solvedCount": 1622}, {"contestId": 891, "index": "D", "name": "Sloth", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["dfs and similar", "dp", "graph matchings", "trees"], "solvedCount": 166}, {"contestId": 886, "index": "C", "name": "Petya and Catacombs", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dsu", "greedy", "implementation", "trees"], "solvedCount": 5419}, {"contestId": 877, "index": "E", "name": "Danil and a Part-time Job", "type": "PROGRAMMING", "points": 2250.0, "rating": 2000, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 4185}, {"contestId": 871, "index": "E", "name": "Restore the Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["graphs", "greedy", "trees"], "solvedCount": 145}, {"contestId": 870, "index": "E", "name": "Points, Lines and Ready-made Titles", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 970}, {"contestId": 868, "index": "E", "name": "Policeman and a Tree", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "graphs", "trees"], "solvedCount": 439}, {"contestId": 864, "index": "F", "name": "Cities Excursions", "type": "PROGRAMMING", "points": 3000.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 571}, {"contestId": 862, "index": "B", "name": "Mahmoud and Ehab and the bipartiteness", "type": "PROGRAMMING", "points": 1000.0, "rating": 1300, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 15487}, {"contestId": 860, "index": "E", "name": "Arkady and a Nobody-men", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 416}, {"contestId": 859, "index": "E", "name": "Desk Disorder", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["combinatorics", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 1625}, {"contestId": 859, "index": "D", "name": "Third Month Insanity", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dp", "probabilities", "trees"], "solvedCount": 846}, {"contestId": 856, "index": "D", "name": "Masha and Cactus", "type": "PROGRAMMING", "rating": 2400, "tags": ["dp", "trees"], "solvedCount": 360}, {"contestId": 856, "index": "B", "name": "Similar Words", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "hashing", "strings", "trees"], "solvedCount": 474}, {"contestId": 855, "index": "G", "name": "Harry Vs Voldemort", "type": "PROGRAMMING", "points": 3500.0, "rating": 3300, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 197}, {"contestId": 855, "index": "D", "name": "Rowena Ravenclaw's Diadem", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["trees"], "solvedCount": 472}, {"contestId": 855, "index": "C", "name": "Helga Hufflepuff's Cup", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dp", "trees"], "solvedCount": 1959}, {"contestId": 852, "index": "I", "name": "Dating", "type": "PROGRAMMING", "rating": 2300, "tags": ["brute force", "dfs and similar", "graphs", "trees"], "solvedCount": 547}, {"contestId": 847, "index": "L", "name": "Berland SU Computer Network", "type": "PROGRAMMING", "rating": 2400, "tags": ["constructive algorithms", "dfs and similar", "graphs", "hashing", "trees"], "solvedCount": 313}, {"contestId": 846, "index": "E", "name": "Chemistry in Berland", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "greedy", "trees"], "solvedCount": 846}, {"contestId": 843, "index": "C", "name": "Upgrading Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2600, "tags": ["constructive algorithms", "dfs and similar", "graphs", "math", "trees"], "solvedCount": 343}, {"contestId": 842, "index": "E", "name": "Nikita and game", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["binary search", "dfs and similar", "divide and conquer", "graphs", "trees"], "solvedCount": 392}, {"contestId": 842, "index": "C", "name": "Ilya And The Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "math", "number theory", "trees"], "solvedCount": 3386}, {"contestId": 840, "index": "E", "name": "In a Trap", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["trees"], "solvedCount": 429}, {"contestId": 839, "index": "C", "name": "Journey", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "graphs", "probabilities", "trees"], "solvedCount": 15679}, {"contestId": 838, "index": "B", "name": "Diverging Directions", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 684}, {"contestId": 835, "index": "F", "name": "Roads in the Kingdom", "type": "PROGRAMMING", "points": 2250.0, "rating": 2500, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 980}, {"contestId": 833, "index": "D", "name": "Red-Black Cobweb", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 361}, {"contestId": 832, "index": "D", "name": "Misha, Grisha and Underground", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 3519}, {"contestId": 830, "index": "E", "name": "Perpetual Motion Machine", "type": "PROGRAMMING", "points": 2250.0, "rating": 3100, "tags": ["constructive algorithms", "dp", "graphs", "implementation", "math", "trees"], "solvedCount": 269}, {"contestId": 830, "index": "D", "name": "Singer House", "type": "PROGRAMMING", "points": 2250.0, "rating": 2800, "tags": ["combinatorics", "dp", "graphs", "trees"], "solvedCount": 789}, {"contestId": 827, "index": "D", "name": "Best Edge Weight", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 1045}, {"contestId": 827, "index": "B", "name": "High Load", "type": "PROGRAMMING", "points": 750.0, "rating": 1800, "tags": ["constructive algorithms", "greedy", "implementation", "trees"], "solvedCount": 3429}, {"contestId": 825, "index": "G", "name": "Tree Queries", "type": "PROGRAMMING", "rating": 2500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 1124}, {"contestId": 822, "index": "F", "name": "Madness", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 285}, {"contestId": 821, "index": "C", "name": "Okabe and Boxes", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["data structures", "greedy", "trees"], "solvedCount": 6550}, {"contestId": 817, "index": "F", "name": "MEX Queries", "type": "PROGRAMMING", "rating": 2300, "tags": ["binary search", "data structures", "trees"], "solvedCount": 2369}, {"contestId": 817, "index": "E", "name": "Choosing The Commander", "type": "PROGRAMMING", "rating": 2000, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 2656}, {"contestId": 815, "index": "C", "name": "Karen and Supermarket", "type": "PROGRAMMING", "points": 1500.0, "rating": 2400, "tags": ["brute force", "dp", "trees"], "solvedCount": 2426}, {"contestId": 814, "index": "D", "name": "An overnight dance in discotheque", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "geometry", "greedy", "trees"], "solvedCount": 2118}, {"contestId": 812, "index": "E", "name": "Sagheer and Apple Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["games", "trees"], "solvedCount": 1011}, {"contestId": 812, "index": "D", "name": "Sagheer and Kindergarten", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 324}, {"contestId": 809, "index": "E", "name": "Surprise me!", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["divide and conquer", "math", "number theory", "trees"], "solvedCount": 706}, {"contestId": 804, "index": "D", "name": "Expected diameter of a tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["binary search", "brute force", "dfs and similar", "dp", "sortings", "trees"], "solvedCount": 1248}, {"contestId": 802, "index": "L", "name": "Send the Fool Further! (hard)", "type": "PROGRAMMING", "rating": 2400, "tags": ["dfs and similar", "dp", "math", "trees"], "solvedCount": 275}, {"contestId": 802, "index": "K", "name": "Send the Fool Further! (medium)", "type": "PROGRAMMING", "rating": 2100, "tags": ["dp", "trees"], "solvedCount": 574}, {"contestId": 802, "index": "J", "name": "Send the Fool Further! (easy)", "type": "PROGRAMMING", "rating": 1400, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 3969}, {"contestId": 796, "index": "D", "name": "Police Stations", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "dp", "graphs", "shortest paths", "trees"], "solvedCount": 5032}, {"contestId": 796, "index": "C", "name": "Bank Hacking", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["constructive algorithms", "data structures", "dp", "trees"], "solvedCount": 2956}, {"contestId": 793, "index": "E", "name": "Problem of offices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["constructive algorithms", "dfs and similar", "dp", "trees"], "solvedCount": 238}, {"contestId": 792, "index": "D", "name": "Paths in a Complete Binary Tree", "type": "PROGRAMMING", "rating": 1900, "tags": ["bitmasks", "trees"], "solvedCount": 2874}, {"contestId": 786, "index": "E", "name": "ALT", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "flows", "graphs", "trees"], "solvedCount": 592}, {"contestId": 786, "index": "D", "name": "Rap God", "type": "PROGRAMMING", "points": 2000.0, "rating": 3400, "tags": ["data structures", "dfs and similar", "hashing", "strings", "trees"], "solvedCount": 124}, {"contestId": 780, "index": "C", "name": "Andryusha and Colored Balloons", "type": "PROGRAMMING", "points": 1250.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 8790}, {"contestId": 778, "index": "C", "name": "Peterson Polyglot", "type": "PROGRAMMING", "points": 1500.0, "rating": 2500, "tags": ["brute force", "dfs and similar", "dsu", "hashing", "strings", "trees"], "solvedCount": 844}, {"contestId": 776, "index": "F", "name": "Sherlock's bet to Moriarty", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "data structures", "divide and conquer", "geometry", "graphs", "implementation", "trees"], "solvedCount": 406}, {"contestId": 772, "index": "E", "name": "Verifying Kingdom", "type": "PROGRAMMING", "points": 2250.0, "rating": 3200, "tags": ["binary search", "divide and conquer", "interactive", "trees"], "solvedCount": 121}, {"contestId": 771, "index": "C", "name": "Bear and Tree Jumps", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 2768}, {"contestId": 767, "index": "C", "name": "Garland", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 3925}, {"contestId": 766, "index": "E", "name": "Mahmoud and a xor trip", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["bitmasks", "constructive algorithms", "data structures", "dfs and similar", "dp", "math", "trees"], "solvedCount": 2768}, {"contestId": 765, "index": "E", "name": "Tree Folding", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dp", "greedy", "implementation", "trees"], "solvedCount": 1242}, {"contestId": 763, "index": "D", "name": "Timofey and a flat tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "graphs", "hashing", "shortest paths", "trees"], "solvedCount": 507}, {"contestId": 763, "index": "A", "name": "Timofey and a tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"], "solvedCount": 10021}, {"contestId": 762, "index": "F", "name": "Tree nesting", "type": "PROGRAMMING", "rating": 2800, "tags": ["combinatorics", "graphs", "trees"], "solvedCount": 344}, {"contestId": 761, "index": "E", "name": "Dasha and Puzzle", "type": "PROGRAMMING", "points": 2500.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1886}, {"contestId": 758, "index": "E", "name": "Broken Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 437}, {"contestId": 757, "index": "G", "name": "Can Bash Save the Day?", "type": "PROGRAMMING", "points": 3500.0, "rating": 3400, "tags": ["data structures", "divide and conquer", "graphs", "trees"], "solvedCount": 469}, {"contestId": 755, "index": "C", "name": "PolandBall and Forest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1300, "tags": ["dfs and similar", "dsu", "graphs", "interactive", "trees"], "solvedCount": 11292}, {"contestId": 754, "index": "E", "name": "Dasha and cyclic table", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "brute force", "fft", "strings", "trees"], "solvedCount": 476}, {"contestId": 750, "index": "F", "name": "New Year and Finding Roots", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["constructive algorithms", "implementation", "interactive", "trees"], "solvedCount": 460}, {"contestId": 748, "index": "F", "name": "Santa Clauses and a Soccer Championship", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 629}, {"contestId": 746, "index": "G", "name": "New Roads", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 1298}, {"contestId": 743, "index": "D", "name": "Chloe and pleasant prizes", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 4229}, {"contestId": 741, "index": "D", "name": "Arpa\u2019s letter-marked tree and Mehrdad\u2019s Dokhtar-kosh paths", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 2388}, {"contestId": 739, "index": "B", "name": "Alyona and a tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 4373}, {"contestId": 735, "index": "E", "name": "Ostap and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dp", "trees"], "solvedCount": 837}, {"contestId": 734, "index": "E", "name": "Anton and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 3702}, {"contestId": 733, "index": "F", "name": "Drivers Dissatisfaction", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["data structures", "dsu", "graphs", "trees"], "solvedCount": 1082}, {"contestId": 724, "index": "G", "name": "Xor-matic Number of the Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2600, "tags": ["bitmasks", "graphs", "math", "number theory", "trees"], "solvedCount": 985}, {"contestId": 724, "index": "F", "name": "Uniformly Branched Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 385}, {"contestId": 722, "index": "D", "name": "Generating Sets", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "strings", "trees"], "solvedCount": 3059}, {"contestId": 718, "index": "D", "name": "Andrew and Chemistry", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["dp", "hashing", "trees"], "solvedCount": 381}, {"contestId": 715, "index": "C", "name": "Digit Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2700, "tags": ["dfs and similar", "divide and conquer", "dsu", "trees"], "solvedCount": 1859}, {"contestId": 708, "index": "C", "name": "Centroids", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["data structures", "dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 2945}, {"contestId": 706, "index": "D", "name": "Vasiliy's Multiset", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["binary search", "bitmasks", "data structures", "trees"], "solvedCount": 9142}, {"contestId": 704, "index": "E", "name": "Iron Man", "type": "PROGRAMMING", "points": 2500.0, "rating": 3300, "tags": ["data structures", "geometry", "trees"], "solvedCount": 265}, {"contestId": 700, "index": "B", "name": "Connecting Universities", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 3737}, {"contestId": 698, "index": "B", "name": "Fix a Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["constructive algorithms", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 5579}, {"contestId": 696, "index": "E", "name": "...Wait for it...", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["data structures", "dsu", "trees"], "solvedCount": 455}, {"contestId": 696, "index": "B", "name": "Puzzles", "type": "PROGRAMMING", "points": 1000.0, "rating": 1700, "tags": ["dfs and similar", "math", "probabilities", "trees"], "solvedCount": 3369}, {"contestId": 696, "index": "A", "name": "Lorenzo Von Matterhorn", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["brute force", "data structures", "implementation", "trees"], "solvedCount": 5961}, {"contestId": 690, "index": "F3", "name": "Tree of Life (hard)", "type": "PROGRAMMING", "rating": 3200, "tags": ["trees"], "solvedCount": 44}, {"contestId": 690, "index": "F2", "name": "Tree of Life (medium)", "type": "PROGRAMMING", "rating": 2700, "tags": ["constructive algorithms", "hashing", "trees"], "solvedCount": 76}, {"contestId": 690, "index": "C3", "name": "Brain Network (hard)", "type": "PROGRAMMING", "rating": 2200, "tags": ["trees"], "solvedCount": 876}, {"contestId": 690, "index": "C2", "name": "Brain Network (medium)", "type": "PROGRAMMING", "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 3535}, {"contestId": 685, "index": "B", "name": "Kay and Snowflake", "type": "PROGRAMMING", "points": 1250.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 3721}, {"contestId": 682, "index": "C", "name": "Alyona and the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 6955}, {"contestId": 681, "index": "D", "name": "Gifts by the List", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 1711}, {"contestId": 675, "index": "D", "name": "Tree Construction", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "trees"], "solvedCount": 3531}, {"contestId": 665, "index": "E", "name": "Beautiful Subarrays", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "divide and conquer", "strings", "trees"], "solvedCount": 2819}, {"contestId": 653, "index": "E", "name": "Bear and Forgotten Tree 2", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 1367}, {"contestId": 652, "index": "E", "name": "Pursuit For Artifacts", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 1934}, {"contestId": 650, "index": "E", "name": "Clockwork Bomb", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "dsu", "greedy", "trees"], "solvedCount": 581}, {"contestId": 643, "index": "E", "name": "Bear and Destroying Subtrees", "type": "PROGRAMMING", "points": 2250.0, "rating": 2700, "tags": ["dp", "math", "probabilities", "trees"], "solvedCount": 570}, {"contestId": 639, "index": "F", "name": "Bear and Chemistry", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 386}, {"contestId": 639, "index": "B", "name": "Bear and Forgotten Tree 3", "type": "PROGRAMMING", "points": 750.0, "rating": 1600, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 6367}, {"contestId": 638, "index": "C", "name": "Road Improvement", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["*special", "dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 1467}, {"contestId": 633, "index": "F", "name": "The Chocolate Spree", "type": "PROGRAMMING", "points": 2750.0, "rating": 2600, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 892}, {"contestId": 632, "index": "F", "name": "Magic Matrix", "type": "PROGRAMMING", "rating": 2400, "tags": ["brute force", "divide and conquer", "graphs", "matrices", "trees"], "solvedCount": 1005}, {"contestId": 629, "index": "E", "name": "Famil Door and Roads", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["combinatorics", "data structures", "dfs and similar", "dp", "probabilities", "trees"], "solvedCount": 964}, {"contestId": 627, "index": "F", "name": "Island Puzzle", "type": "PROGRAMMING", "points": 3000.0, "rating": 3400, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 225}, {"contestId": 627, "index": "D", "name": "Preorder Test", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "dfs and similar", "dp", "graphs", "greedy", "trees"], "solvedCount": 787}, {"contestId": 622, "index": "E", "name": "Ants in Leaves", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "greedy", "sortings", "trees"], "solvedCount": 1960}, {"contestId": 620, "index": "F", "name": "Xors on Segments", "type": "PROGRAMMING", "rating": 2800, "tags": ["data structures", "strings", "trees"], "solvedCount": 688}, {"contestId": 620, "index": "E", "name": "New Year Tree", "type": "PROGRAMMING", "rating": 2100, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 5061}, {"contestId": 618, "index": "D", "name": "Hamiltonian Spanning Tree", "type": "PROGRAMMING", "points": 1750.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graph matchings", "greedy", "trees"], "solvedCount": 1680}, {"contestId": 615, "index": "C", "name": "Running Track", "type": "PROGRAMMING", "points": 1750.0, "rating": 2000, "tags": ["dp", "greedy", "strings", "trees"], "solvedCount": 2244}, {"contestId": 613, "index": "D", "name": "Kingdom and its Cities", "type": "PROGRAMMING", "points": 2000.0, "rating": 2800, "tags": ["dfs and similar", "divide and conquer", "dp", "graphs", "sortings", "trees"], "solvedCount": 2594}, {"contestId": 609, "index": "E", "name": "Minimum spanning tree for each edge", "type": "PROGRAMMING", "rating": 2100, "tags": ["data structures", "dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 6808}, {"contestId": 607, "index": "D", "name": "Power Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 550}, {"contestId": 603, "index": "E", "name": "Pastoral Oddities", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["data structures", "divide and conquer", "dsu", "math", "trees"], "solvedCount": 1143}, {"contestId": 601, "index": "D", "name": "Acyclic Organic Compounds", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "dsu", "hashing", "strings", "trees"], "solvedCount": 1076}, {"contestId": 600, "index": "E", "name": "Lomsat gelral", "type": "PROGRAMMING", "rating": 2300, "tags": ["data structures", "dfs and similar", "dsu", "trees"], "solvedCount": 12352}, {"contestId": 599, "index": "E", "name": "Sandy and Nuts", "type": "PROGRAMMING", "points": 3000.0, "rating": 2600, "tags": ["bitmasks", "dp", "trees"], "solvedCount": 610}, {"contestId": 593, "index": "D", "name": "Happy Tree Party", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "graphs", "math", "trees"], "solvedCount": 1167}, {"contestId": 592, "index": "D", "name": "Super M", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 2314}, {"contestId": 587, "index": "C", "name": "Duff in the Army", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["data structures", "trees"], "solvedCount": 3612}, {"contestId": 581, "index": "F", "name": "Zublicanes and Mumocrates", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["dp", "trees", "two pointers"], "solvedCount": 835}, {"contestId": 580, "index": "C", "name": "Kefa and Park", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 39137}, {"contestId": 578, "index": "F", "name": "Mirror Box", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["matrices", "trees"], "solvedCount": 521}, {"contestId": 576, "index": "B", "name": "Invariance of Tree", "type": "PROGRAMMING", "points": 1250.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "greedy", "trees"], "solvedCount": 1569}, {"contestId": 575, "index": "B", "name": "Bribes", "type": "PROGRAMMING", "rating": 2200, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 1036}, {"contestId": 573, "index": "C", "name": "Bear and Drawing", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 949}, {"contestId": 571, "index": "D", "name": "Campus", "type": "PROGRAMMING", "points": 2000.0, "rating": 3100, "tags": ["binary search", "data structures", "dsu", "trees"], "solvedCount": 643}, {"contestId": 570, "index": "D", "name": "Tree Requests", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["binary search", "bitmasks", "constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 6521}, {"contestId": 566, "index": "E", "name": "Restoring Map", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["bitmasks", "constructive algorithms", "trees"], "solvedCount": 597}, {"contestId": 566, "index": "C", "name": "Logistical Questions", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["dfs and similar", "divide and conquer", "trees"], "solvedCount": 687}, {"contestId": 566, "index": "A", "name": "Matching Names", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dfs and similar", "strings", "trees"], "solvedCount": 865}, {"contestId": 557, "index": "E", "name": "Ann and Half-Palindrome", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["data structures", "dp", "graphs", "string suffix structures", "strings", "trees"], "solvedCount": 1044}, {"contestId": 555, "index": "E", "name": "Case of Computer Network", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 2153}, {"contestId": 547, "index": "E", "name": "Mike and Friends", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "string suffix structures", "strings", "trees"], "solvedCount": 1906}, {"contestId": 543, "index": "D", "name": "Road Improvement", "type": "PROGRAMMING", "points": 1750.0, "rating": 2300, "tags": ["dp", "trees"], "solvedCount": 2515}, {"contestId": 540, "index": "E", "name": "Infinite Inversions", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "implementation", "sortings", "trees"], "solvedCount": 1976}, {"contestId": 538, "index": "E", "name": "Demiurges Play Again", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "dp", "math", "trees"], "solvedCount": 1492}, {"contestId": 536, "index": "E", "name": "Tavas on the Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 366}, {"contestId": 533, "index": "B", "name": "Work Group", "type": "PROGRAMMING", "points": 750.0, "rating": 2000, "tags": ["dfs and similar", "dp", "graphs", "strings", "trees"], "solvedCount": 2290}, {"contestId": 533, "index": "A", "name": "Berland Miners", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "dfs and similar", "greedy", "trees"], "solvedCount": 341}, {"contestId": 526, "index": "G", "name": "Spiders Evil Plan", "type": "PROGRAMMING", "points": 3000.0, "rating": 3300, "tags": ["greedy", "trees"], "solvedCount": 685}, {"contestId": 522, "index": "A", "name": "Reposts", "type": "PROGRAMMING", "points": 500.0, "rating": 1200, "tags": ["*special", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 15562}, {"contestId": 519, "index": "E", "name": "A and B and Lecture Rooms", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "dp", "trees"], "solvedCount": 6118}, {"contestId": 516, "index": "D", "name": "Drazil and Morning Exercise", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "dp", "dsu", "trees", "two pointers"], "solvedCount": 1216}, {"contestId": 512, "index": "D", "name": "Fox And Travelling", "type": "PROGRAMMING", "points": 2250.0, "rating": 2900, "tags": ["dp", "trees"], "solvedCount": 922}, {"contestId": 509, "index": "F", "name": "Progress Monitoring", "type": "PROGRAMMING", "rating": 2300, "tags": ["dp", "trees"], "solvedCount": 851}, {"contestId": 507, "index": "C", "name": "Guess Your Way Out!", "type": "PROGRAMMING", "points": 1500.0, "rating": 1700, "tags": ["implementation", "math", "trees"], "solvedCount": 4262}, {"contestId": 504, "index": "E", "name": "Misha and LCP on Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "dfs and similar", "hashing", "string suffix structures", "trees"], "solvedCount": 849}, {"contestId": 501, "index": "C", "name": "Misha and Forest", "type": "PROGRAMMING", "points": 1500.0, "rating": 1500, "tags": ["constructive algorithms", "data structures", "greedy", "sortings", "trees"], "solvedCount": 5496}, {"contestId": 500, "index": "G", "name": "New Year Running", "type": "PROGRAMMING", "points": 3500.0, "rating": 3200, "tags": ["number theory", "trees"], "solvedCount": 154}, {"contestId": 500, "index": "D", "name": "New Year Santa Network", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["combinatorics", "dfs and similar", "graphs", "trees"], "solvedCount": 3021}, {"contestId": 494, "index": "D", "name": "Birthday", "type": "PROGRAMMING", "points": 1750.0, "rating": 2700, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 509}, {"contestId": 490, "index": "F", "name": "Treeland Tour", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["data structures", "dfs and similar", "dp", "trees"], "solvedCount": 1529}, {"contestId": 487, "index": "E", "name": "Tourists", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 2082}, {"contestId": 486, "index": "D", "name": "Valid Sets", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["dfs and similar", "dp", "math", "trees"], "solvedCount": 3835}, {"contestId": 482, "index": "E", "name": "ELCA", "type": "PROGRAMMING", "points": 2500.0, "rating": 3200, "tags": ["data structures", "trees"], "solvedCount": 174}, {"contestId": 482, "index": "D", "name": "Random Function and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2700, "tags": ["combinatorics", "dp", "trees"], "solvedCount": 517}, {"contestId": 482, "index": "B", "name": "Interesting Array", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["constructive algorithms", "data structures", "trees"], "solvedCount": 6113}, {"contestId": 474, "index": "E", "name": "Pillars", "type": "PROGRAMMING", "points": 3000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "sortings", "trees"], "solvedCount": 3051}, {"contestId": 472, "index": "D", "name": "Design Tutorial: Inverse the Problem", "type": "PROGRAMMING", "points": 2000.0, "rating": 1900, "tags": ["dfs and similar", "dsu", "shortest paths", "trees"], "solvedCount": 4950}, {"contestId": 466, "index": "E", "name": "Information Graph", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 2047}, {"contestId": 463, "index": "E", "name": "Caisa and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["brute force", "dfs and similar", "math", "number theory", "trees"], "solvedCount": 1375}, {"contestId": 461, "index": "B", "name": "Appleman and Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2000, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 5255}, {"contestId": 457, "index": "F", "name": "An easy problem about trees", "type": "PROGRAMMING", "points": 3000.0, "rating": 3200, "tags": ["dp", "games", "greedy", "trees"], "solvedCount": 101}, {"contestId": 455, "index": "C", "name": "Civilization", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "ternary search", "trees"], "solvedCount": 5080}, {"contestId": 455, "index": "B", "name": "A Lot of Games", "type": "PROGRAMMING", "points": 1000.0, "rating": 1900, "tags": ["dfs and similar", "dp", "games", "implementation", "strings", "trees"], "solvedCount": 5608}, {"contestId": 452, "index": "B", "name": "4-point polyline", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["brute force", "constructive algorithms", "geometry", "trees"], "solvedCount": 1968}, {"contestId": 444, "index": "E", "name": "DZY Loves Planting", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["binary search", "dsu", "trees"], "solvedCount": 723}, {"contestId": 442, "index": "D", "name": "Adam and Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["data structures", "trees"], "solvedCount": 943}, {"contestId": 440, "index": "D", "name": "Berland Federalization", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dp", "trees"], "solvedCount": 612}, {"contestId": 436, "index": "C", "name": "Dungeons and Candies", "type": "PROGRAMMING", "points": 1500.0, "rating": 1800, "tags": ["dsu", "graphs", "greedy", "trees"], "solvedCount": 2574}, {"contestId": 434, "index": "E", "name": "Furukawa Nagisa's Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "divide and conquer", "sortings", "trees"], "solvedCount": 252}, {"contestId": 431, "index": "C", "name": "k-Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dp", "implementation", "trees"], "solvedCount": 24205}, {"contestId": 429, "index": "C", "name": "Guess the Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["bitmasks", "constructive algorithms", "dp", "greedy", "trees"], "solvedCount": 896}, {"contestId": 429, "index": "A", "name": "Xor-tree", "type": "PROGRAMMING", "points": 500.0, "rating": 1300, "tags": ["dfs and similar", "trees"], "solvedCount": 9845}, {"contestId": 418, "index": "D", "name": "Big Problems for Organizers", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "graphs", "trees"], "solvedCount": 460}, {"contestId": 414, "index": "D", "name": "Mashmokh and Water Tanks", "type": "PROGRAMMING", "points": 1500.0, "rating": 2300, "tags": ["binary search", "data structures", "greedy", "trees", "two pointers"], "solvedCount": 670}, {"contestId": 406, "index": "D", "name": "Hill Climbing", "type": "PROGRAMMING", "points": 2000.0, "rating": 2200, "tags": ["dfs and similar", "geometry", "trees"], "solvedCount": 1113}, {"contestId": 403, "index": "E", "name": "Two Rooted Trees", "type": "PROGRAMMING", "points": 2000.0, "rating": 2900, "tags": ["data structures", "implementation", "trees"], "solvedCount": 200}, {"contestId": 396, "index": "C", "name": "On Changing Tree", "type": "PROGRAMMING", "points": 1500.0, "tags": ["data structures", "graphs", "trees"], "solvedCount": 1514}, {"contestId": 383, "index": "C", "name": "Propagating tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2000, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 6016}, {"contestId": 382, "index": "D", "name": "Ksenia and Pawns", "type": "PROGRAMMING", "points": 3000.0, "rating": 2200, "tags": ["dfs and similar", "graphs", "implementation", "trees"], "solvedCount": 641}, {"contestId": 379, "index": "F", "name": "New Year Tree", "type": "PROGRAMMING", "points": 3000.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 2092}, {"contestId": 375, "index": "D", "name": "Tree and Queries", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 6065}, {"contestId": 374, "index": "D", "name": "Inna and Sequence ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["binary search", "data structures", "dp", "trees"], "solvedCount": 835}, {"contestId": 372, "index": "D", "name": "Choosing Subtree is Fun", "type": "PROGRAMMING", "points": 2000.0, "rating": 2600, "tags": ["binary search", "data structures", "dfs and similar", "trees", "two pointers"], "solvedCount": 897}, {"contestId": 371, "index": "D", "name": "Vessels", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["data structures", "dsu", "implementation", "trees"], "solvedCount": 5169}, {"contestId": 369, "index": "C", "name": "Valera and Elections", "type": "PROGRAMMING", "points": 1500.0, "rating": 1600, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 9309}, {"contestId": 348, "index": "E", "name": "Pilgrims", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 425}, {"contestId": 348, "index": "B", "name": "Apple Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 2100, "tags": ["dfs and similar", "number theory", "trees"], "solvedCount": 2031}, {"contestId": 343, "index": "E", "name": "Pumping Stations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["brute force", "dfs and similar", "divide and conquer", "flows", "graphs", "greedy", "trees"], "solvedCount": 665}, {"contestId": 343, "index": "D", "name": "Water Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "graphs", "trees"], "solvedCount": 5316}, {"contestId": 342, "index": "E", "name": "Xenia and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 7467}, {"contestId": 339, "index": "D", "name": "Xenia and Bit Operations", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["data structures", "trees"], "solvedCount": 23302}, {"contestId": 337, "index": "E", "name": "Divisor Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["brute force", "number theory", "trees"], "solvedCount": 1001}, {"contestId": 337, "index": "D", "name": "Book of Evil", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "divide and conquer", "dp", "trees"], "solvedCount": 5733}, {"contestId": 331, "index": "D3", "name": "Escaping on Beaveractor", "type": "PROGRAMMING", "points": 40.0, "rating": 3000, "tags": ["data structures", "implementation", "trees"], "solvedCount": 166}, {"contestId": 321, "index": "C", "name": "Ciel the Commander", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["constructive algorithms", "dfs and similar", "divide and conquer", "greedy", "trees"], "solvedCount": 6633}, {"contestId": 317, "index": "C", "name": "Balance", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["constructive algorithms", "dfs and similar", "graphs", "trees"], "solvedCount": 486}, {"contestId": 294, "index": "E", "name": "Shaass the Great", "type": "PROGRAMMING", "points": 2500.0, "rating": 2300, "tags": ["dp", "trees"], "solvedCount": 883}, {"contestId": 293, "index": "E", "name": "Close Vertices", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["data structures", "divide and conquer", "trees"], "solvedCount": 1247}, {"contestId": 290, "index": "C", "name": "WTF?", "type": "PROGRAMMING", "rating": 1700, "tags": ["*special", "graph matchings", "implementation", "trees"], "solvedCount": 1505}, {"contestId": 288, "index": "D", "name": "Polo the Penguin and Trees ", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["combinatorics", "dfs and similar", "trees"], "solvedCount": 667}, {"contestId": 282, "index": "E", "name": "Sausage Maximization", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["bitmasks", "data structures", "trees"], "solvedCount": 3316}, {"contestId": 280, "index": "C", "name": "Game on Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["implementation", "math", "probabilities", "trees"], "solvedCount": 3419}, {"contestId": 277, "index": "E", "name": "Binary Tree on Plane", "type": "PROGRAMMING", "points": 2000.0, "rating": 2400, "tags": ["flows", "trees"], "solvedCount": 1202}, {"contestId": 276, "index": "E", "name": "Little Girl and Problem on Trees", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "graphs", "trees"], "solvedCount": 1533}, {"contestId": 274, "index": "B", "name": "Zero Tree", "type": "PROGRAMMING", "points": 1000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 4859}, {"contestId": 260, "index": "D", "name": "Black and White Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["constructive algorithms", "dsu", "graphs", "greedy", "trees"], "solvedCount": 1305}, {"contestId": 258, "index": "E", "name": "Little Elephant and Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2400, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 1017}, {"contestId": 251, "index": "E", "name": "Tree and Table", "type": "PROGRAMMING", "points": 2500.0, "rating": 3000, "tags": ["dfs and similar", "dp", "implementation", "trees"], "solvedCount": 167}, {"contestId": 238, "index": "C", "name": "World Eater Brothers", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "greedy", "trees"], "solvedCount": 1014}, {"contestId": 237, "index": "D", "name": "T-decomposition", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["dfs and similar", "graphs", "greedy", "trees"], "solvedCount": 541}, {"contestId": 231, "index": "E", "name": "Cactus", "type": "PROGRAMMING", "points": 2500.0, "rating": 2100, "tags": ["data structures", "dfs and similar", "dp", "graphs", "trees"], "solvedCount": 1502}, {"contestId": 226, "index": "E", "name": "Noble Knight's Path", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "trees"], "solvedCount": 429}, {"contestId": 219, "index": "D", "name": "Choosing Capital for Treeland", "type": "PROGRAMMING", "points": 2000.0, "rating": 1700, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 8407}, {"contestId": 217, "index": "E", "name": "Alien DNA", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["data structures", "dsu", "trees"], "solvedCount": 288}, {"contestId": 212, "index": "E", "name": "IT Restaurants", "type": "PROGRAMMING", "points": 500.0, "rating": 1500, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 1647}, {"contestId": 208, "index": "E", "name": "Blood Cousins", "type": "PROGRAMMING", "points": 3000.0, "rating": 2100, "tags": ["binary search", "data structures", "dfs and similar", "trees"], "solvedCount": 5943}, {"contestId": 196, "index": "C", "name": "Paint Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["constructive algorithms", "divide and conquer", "geometry", "sortings", "trees"], "solvedCount": 737}, {"contestId": 193, "index": "A", "name": "Cutting Figure", "type": "PROGRAMMING", "points": 500.0, "rating": 1700, "tags": ["constructive algorithms", "graphs", "trees"], "solvedCount": 3724}, {"contestId": 191, "index": "E", "name": "Thwarting Demonstrations", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["binary search", "data structures", "trees"], "solvedCount": 801}, {"contestId": 191, "index": "C", "name": "Fools and Roads", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 6625}, {"contestId": 176, "index": "E", "name": "Archaeology", "type": "PROGRAMMING", "points": 2500.0, "rating": 3100, "tags": ["data structures", "dfs and similar", "trees"], "solvedCount": 1007}, {"contestId": 165, "index": "D", "name": "Beard Graph", "type": "PROGRAMMING", "points": 2000.0, "rating": 2100, "tags": ["data structures", "dsu", "trees"], "solvedCount": 1564}, {"contestId": 163, "index": "E", "name": "e-Government", "type": "PROGRAMMING", "points": 2500.0, "rating": 2800, "tags": ["data structures", "dfs and similar", "dp", "strings", "trees"], "solvedCount": 1490}, {"contestId": 161, "index": "D", "name": "Distance in Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "dp", "trees"], "solvedCount": 13292}, {"contestId": 152, "index": "E", "name": "Garden", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["bitmasks", "dp", "graphs", "trees"], "solvedCount": 442}, {"contestId": 150, "index": "E", "name": "Freezing with Style", "type": "PROGRAMMING", "points": 3000.0, "rating": 3000, "tags": ["binary search", "data structures", "divide and conquer", "trees"], "solvedCount": 770}, {"contestId": 123, "index": "E", "name": "Maze", "type": "PROGRAMMING", "points": 2500.0, "rating": 2500, "tags": ["dfs and similar", "dp", "probabilities", "trees"], "solvedCount": 686}, {"contestId": 120, "index": "F", "name": "Spiders", "type": "PROGRAMMING", "rating": 1400, "tags": ["dp", "greedy", "trees"], "solvedCount": 3480}, {"contestId": 117, "index": "E", "name": "Tree or not Tree", "type": "PROGRAMMING", "points": 2500.0, "rating": 2900, "tags": ["data structures", "divide and conquer", "implementation", "trees"], "solvedCount": 303}, {"contestId": 115, "index": "A", "name": "Party", "type": "PROGRAMMING", "points": 500.0, "rating": 900, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 32372}, {"contestId": 109, "index": "C", "name": "Lucky Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["dp", "dsu", "trees"], "solvedCount": 3168}, {"contestId": 101, "index": "D", "name": "Castle", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dp", "greedy", "probabilities", "sortings", "trees"], "solvedCount": 667}, {"contestId": 98, "index": "B", "name": "Help King", "type": "PROGRAMMING", "points": 1000.0, "rating": 2200, "tags": ["implementation", "probabilities", "trees"], "solvedCount": 113}, {"contestId": 97, "index": "E", "name": "Leaders", "type": "PROGRAMMING", "points": 2500.0, "rating": 2200, "tags": ["dfs and similar", "dsu", "graphs", "trees"], "solvedCount": 369}, {"contestId": 87, "index": "D", "name": "Beautiful Road", "type": "PROGRAMMING", "points": 2000.0, "rating": 2300, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "sortings", "trees"], "solvedCount": 833}, {"contestId": 86, "index": "C", "name": "Genetic engineering", "type": "PROGRAMMING", "points": 2000.0, "rating": 2500, "tags": ["dp", "string suffix structures", "trees"], "solvedCount": 674}, {"contestId": 85, "index": "C", "name": "Petya and Tree", "type": "PROGRAMMING", "points": 1500.0, "rating": 2200, "tags": ["binary search", "dfs and similar", "probabilities", "sortings", "trees"], "solvedCount": 520}, {"contestId": 81, "index": "E", "name": "Pairs", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar", "dp", "dsu", "graphs", "implementation", "trees"], "solvedCount": 314}, {"contestId": 77, "index": "C", "name": "Beavermuncher-0xFF", "type": "PROGRAMMING", "points": 1500.0, "rating": 2100, "tags": ["dfs and similar", "dp", "dsu", "greedy", "trees"], "solvedCount": 974}, {"contestId": 76, "index": "A", "name": "Gift", "type": "PROGRAMMING", "rating": 2200, "tags": ["dsu", "graphs", "sortings", "trees"], "solvedCount": 1401}, {"contestId": 75, "index": "D", "name": "Big Maximum Sum", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["data structures", "dp", "greedy", "implementation", "math", "trees"], "solvedCount": 1711}, {"contestId": 70, "index": "E", "name": "Information Reform", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dp", "implementation", "trees"], "solvedCount": 466}, {"contestId": 61, "index": "E", "name": "Enemy is weak", "type": "PROGRAMMING", "points": 2500.0, "rating": 1900, "tags": ["data structures", "trees"], "solvedCount": 9831}, {"contestId": 61, "index": "D", "name": "Eternal Victory", "type": "PROGRAMMING", "points": 2000.0, "rating": 1800, "tags": ["dfs and similar", "graphs", "greedy", "shortest paths", "trees"], "solvedCount": 6180}, {"contestId": 51, "index": "F", "name": "Caterpillar", "type": "PROGRAMMING", "points": 3000.0, "rating": 2800, "tags": ["dfs and similar", "dp", "graphs", "trees"], "solvedCount": 539}, {"contestId": 48, "index": "G", "name": "Galaxy Union", "type": "PROGRAMMING", "rating": 2700, "tags": ["dp", "trees", "two pointers"], "solvedCount": 246}, {"contestId": 42, "index": "E", "name": "Baldman and the military", "type": "PROGRAMMING", "points": 2500.0, "rating": 2700, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 185}, {"contestId": 37, "index": "C", "name": "Old Berland Language", "type": "PROGRAMMING", "points": 1500.0, "rating": 1900, "tags": ["data structures", "greedy", "trees"], "solvedCount": 1483}, {"contestId": 29, "index": "D", "name": "Ant on the Tree", "type": "PROGRAMMING", "points": 2000.0, "rating": 2000, "tags": ["constructive algorithms", "dfs and similar", "trees"], "solvedCount": 2266}, {"contestId": 25, "index": "D", "name": "Roads not only in Berland", "type": "PROGRAMMING", "rating": 1900, "tags": ["dsu", "graphs", "trees"], "solvedCount": 10102}, {"contestId": 22, "index": "E", "name": "Scheme", "type": "PROGRAMMING", "rating": 2300, "tags": ["dfs and similar", "graphs", "trees"], "solvedCount": 1509}, {"contestId": 14, "index": "D", "name": "Two Paths", "type": "PROGRAMMING", "rating": 1900, "tags": ["dfs and similar", "dp", "graphs", "shortest paths", "trees", "two pointers"], "solvedCount": 4263}, {"contestId": 6, "index": "E", "name": "Exposition", "type": "PROGRAMMING", "rating": 1900, "tags": ["binary search", "data structures", "dsu", "trees", "two pointers"], "solvedCount": 2923}]